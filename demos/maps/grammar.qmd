---
title: "Grammar school Free School Meal students in England 2012-23"
format:
  html:
    toc: true
  # pdf_document:
  #   toc: true
  #   toc_depth: 3
  #   number_sections: yes    
  #   fig_caption: yes
  #   latex_engine: pdflatex
# fontfamily: arev
author:
  - name: Peter EJ Kemp
    email: peter.kemp@kcl.ac.uk
    affiliations:
    - name: King's College London
date: "Last compiled on `r format(Sys.time(), '%d %B, %Y')`"
link-citations: true
editor_options: 
  chunk_output_type: console
  editor: source
tbl-cap-location: top
echo: false
warning: false
---

```{r TRACER_setup}
#| echo: false
#| include: false
#| warning: false
#| cache: false

# see: https://docs.google.com/document/d/1cg-DLYOJq5TZap7xtfZ8uom_hrom_Ih1zV4galHzPYM/edit

data_folder <- r"[C:\Users\Peter\Google Drive\Kings\Code\PISR\Data\]"
data_folder <- r"[D:\Data\EdR\]"

node <- Sys.info()

if(node["nodename"] == "KCL8KWNXY2"){
  # basefolder <- r"(C:\Users\w1926273\OneDrive - King's College London\Code\SCARI\)"
  basefolder <- r"(C:/Users/w1926273/Google Drive/Kings/Code/PISR/)"
}else if(node["nodename"] == "PETES_PC"){
  basefolder <- r"(C:/Users/Peter/Google Drive/Kings/Code/PISR/)"
  old_proj_folder <- r"(C:/Users/Peter/Google Drive/Kings/Code/OpenAnalysis/)"
}else if(node["nodename"] == "KCL3Y7NKR3"){ # new laptop
  basefolder <- r"(G:\My Drive\Kings\Code\PISR\)"
  old_proj_folder <- r"(C:/Users/Peter/Google Drive/Kings/Code/OpenAnalysis/)"
}

source(paste0(basefolder, "_reports/TRACER/TRACER-setup.R"))
source(paste0(codefolder, 'OpenAnalysis_load.R'))

## Edubase - use eather version, encoding some weird windows thing
# edubase <- read_csv_arrow(glue("{cache_folder}edubase.csv"),
#                             read_options = list(encoding = "latin1"))
# edubase <- read_csv(glue("{cache_folder}edubase.csv"))
# write_feather(edubase, glue("{cache_folder}edubase.feather"))
edubase <- read_feather(glue("{cache_folder}edubase.feather"))
# edubase <- read.csv(glue("{cache_folder}edubase.csv"))

```

```{r TRACER_load_all_subs}
#| echo: false
grms <- get_grammar_details(schools, results_all)
# tmp <- schools %>% filter(URN == "136390")
# tmp <- grms %>% filter(URN == "136390") %>% arrange(Year)

```


# Map of providers

A map of all grammar schools in England showing access to school by students eligible for free school meals (FSM):

Year given along with overall FSM number of students and and number as a percentage of the overall school population.

> 2022: 89(14.1%)

_Expected_ values for the school given as numbers (e.g. `120` and `118`), if the school matched the FSM figure for the Local Authority and Region. Percentages given are the percentage of students in the Local Authority and Region who are on free school meals

>   ùîº[LA :120(19.1%)]; ùîº[Rgn:118(18.7%)];

```{r leaflet}
library(leaflet)
library(sf)
library(sp)
# grammar code to make report
# convert from northing easting to lat long
ConvertCoordinates <- function(easting,northing) {
  wgs84 = "+init=epsg:4326"
  bng = '+proj=tmerc +lat_0=49 +lon_0=-2 +k=0.9996012717 +x_0=400000 +y_0=-100000 
  +ellps=airy +datum=OSGB36 +units=m +no_defs'
  
  out = cbind(easting,northing)
  mask = !is.na(easting)
  sp <-  sp::spTransform(sp::SpatialPoints(list(easting[mask],northing[mask]),proj4string=sp::CRS(bng)),sp::CRS(wgs84))
  out[mask,]=sp@coords
  out
}

coords <- ConvertCoordinates(grms$Easting, grms$Northing)

grms$lon <- coords[,1]
grms$lat <- coords[,2]

grms_plot <- grms %>%
  mutate(LA_col = ifelse(`Sch-LA FSM short n` + `Sch FSM n` > `Sch FSM n`, 
                         "#900C3F", "#023020"),
         Rgn_col = ifelse(`Sch-Region FSM short n` + `Sch FSM n` > `Sch FSM n`,
                          "#900C3F", "#023020")) %>%
  mutate(content = paste0(Year, ": <u><b>", 
                          round(`Sch FSM n`,0), 
                          "</b></u>(",printper(`Sch FSM %`),
                          "%)<br/>",
                          "<span style='margin-left: 10px;'>&Eopf;[LA :<span style='color:",
                          LA_col,"'>", 
                          round(`Sch-LA FSM short n` + `Sch FSM n`,0), 
                          "(",`LA FSM %`,"%)</span>]</span>; ",
                          "&Eopf;[Rgn:<span style='color:",
                          Rgn_col,"'>", 
                          round(`Sch-Region FSM short n` + `Sch FSM n`,0), 
                          "(",`Region FSM %`,"%)</span>];")) %>%
  group_by(URN, name, lon, lat) %>%
  arrange(desc(Year)) %>%
  dplyr::reframe(content = 
                     paste(
                       paste("<h4>",name, "</h4><a href='https://www.get-information-schools.service.gov.uk/Establishments/Establishment/Details/",
                             URN,"'>",URN,"</a> | ",LA," | ", Region, "<br/>", sep=""),
                       reduce(content, paste, sep="<br/>"), 
                       sep="<br/>")) %>%
  distinct()

# recent FSM stats
FSM_col <- grms %>% group_by(URN) %>%
  filter(Year == max(Year)) %>% 
  ungroup() %>%
  mutate(max_FSM = max(`Sch FSM %`, na.rm=TRUE),
            min_FSM = min(`Sch FSM %`, na.rm=TRUE),
         color=`Sch FSM %`/max_FSM, na.rm=TRUE) %>%
  select(URN, max_FSM, min_FSM, color)

grms_plot <- left_join(grms_plot %>% ungroup(), FSM_col)
# FSM_col %>% filter(URN ==  101463 )
# grms_plot %>% filter(URN ==  12101463)

# SchoolIcon <- makeIcon(
#   iconUrl = "https://upload.wikimedia.org/wikipedia/commons/thumb/d/d7/Gnome-home.svg/60px-Gnome-home.svg.png",
#   iconWidth = 24, iconHeight = 24
# )

pal <- colorNumeric(c("red", "darkgreen"), domain =unique(grms_plot$color))

leaflet(data=grms_plot) %>%
  # addProviderTiles(providers$Stamen.Toner) %>%  # Add default OpenStreetMap map tiles
  addTiles() %>%
  addCircleMarkers(~lon, ~lat, fillColor = ~pal(color), color = "black", weight =1, opacity = 1, radius = 10, fillOpacity = 1,
                   popup = ~content, 
                   label = ~as.character(name)) %>%
  addFullscreenControl()

  # addMarkers(~lon, ~lat, 
  #            popup = ~content, 
  #            label = ~as.character(name))

# https://stackoverflow.com/questions/54978367/custom-markers-with-different-shapes-and-colors-in-leaflet-r
# https://stackoverflow.com/questions/32940617/change-color-of-leaflet-marker
```

# Summary table

Summary table for all grammar schools in `r max(grms$Year)`

```{r save_summary_table}
### save everything
#| echo: false

#P8MEA

grms <- grms %>% relocate(`Progress 8`, .after=Gender)

library(openxlsx)
wb <- createWorkbook()
dull <- map(unique(grms$Year), \(x){
  tmp <- grms %>% filter(Year == x)
  addWorksheet(wb, as.character(x))
  writeData(wb, as.character(x), tmp)
  })
loc <- glue("D:\\temp\\maps\\grammars\\grammars_and_FSM.xlsx")  
print(paste("saving to:", loc))
saveWorkbook(wb, loc, TRUE)

grms %>% 
  ungroup() %>% 
  filter(Year == max(Year)) %>%
  select(-any_of(c("Northing", "Easting", "lon", "lat"))) %>%
  gt() %>%
  fmt_number(columns = c("Sch FSM %", 
                         "LA FSM %", "Region FSM %", 
                         "Sch-LA FSM short %", "Sch-Region FSM short %"),
              decimals = 2) %>%
  data_color(
    columns = c("Sch FSM %", 
                "LA FSM %", "Region FSM %",
                "Progress 8"),
    method="numeric",
    palette = c("red", "green")) %>%
  data_color(
    columns = c("Sch-LA FSM short %", "Sch-Region FSM short %"),
    method="numeric",
    palette = c("green", "red")) %>%
  cols_width(
    Year ~ px(70),
    URN ~ px(150),
    name ~ px(300),
    LA ~ px(150),
    Region ~ px(150),
    Gender ~ px(100),
    `Progress 8` ~ px(110),
    #ends_with("r") ~ px(100),
    #starts_with("date") ~ px(200),
    everything() ~ px(100)
  ) %>% 
  tab_options(ihtml.active = TRUE,
              ihtml.use_filters = TRUE)
```

# Summary graphs

Grammar school shortfall in FSM provision compared to the Local Authority , year on year 2012-2023 (2020 data missing):

```{r year_on_year_shortfall}
#| echo: false
library(plotly)

# use ggplotly
# get average and SD for each year overall and by gender

grms_mean <- grms %>% group_by(Gender, Year) %>% 
  summarise(n =n(),
            mean_shortfall = round(mean(`Sch-LA FSM short %`, na.rm=TRUE),2),
            mean_fsm_per = round(mean( `Sch FSM %`, na.rm=TRUE),2)) %>%
  arrange(mean_shortfall) %>%
  mutate(Year = as.Date(paste(Year, "01", "01", sep = "-")))

  
plot <- ggplot(data=grms_mean,
       aes(x=Year, 
           y=mean_shortfall, 
           colour=Gender)) +
  geom_line() +
  #geom_violin() +
  scale_x_date(date_labels = "%Y", date_breaks = "1 year") +
  labs(x = "Year", y = "% FSM shortfall from LA") +
  theme(legend.position="bottom",
          legend.text=element_text(size=rel(0.5)),
          legend.title=element_text(size=rel(0.5)),
          axis.text.x = element_text(angle = 90, vjust = 0.5)) 

plot <- ggplot(data=grms %>% 
                 mutate(Year = as.Date(paste(Year, "01", "01", sep = "-"))) %>% 
                 ungroup()) +
  geom_boxplot(position=position_dodge(1),
               aes(x=Year, y=`Sch-LA FSM short %`, group=Year, color=Gender)) +
  # geom_jitter(shape=16, position=position_jitter(0.4)) +
  scale_x_date(date_labels = "%Y", date_breaks = "1 year") +
  labs(x = "Year", y = "% FSM shortfall from LA") +
  theme(legend.position="bottom",
          legend.text=element_text(size=rel(0.5)),
          legend.title=element_text(size=rel(0.5)),
          axis.text.x = element_text(angle = 90, vjust = 0.5)) 

ggplotly(plot)
```

All grammar schools plotted by year against the shortfall in FSM provision compared to the Local Authority (2020 data missing):

```{r plot_schools}

grms_schools <- grms %>% mutate(Year = as.Date(paste(Year, "01-01", sep = "-")))

plot_schools <- ggplot(data=grms_schools,
       aes(x=Year, 
           y=`Sch-LA FSM short %`, 
           group=name)) +
  geom_line(aes(colour=Gender), alpha=0.5) +
  scale_x_date(date_labels = "%Y", date_breaks = "1 year") +
  labs(x = "Year", y = "% FSM shortfall from LA") +
  theme(legend.position="bottom",
          legend.text=element_text(size=rel(0.5)),
          legend.title=element_text(size=rel(0.5)),
          axis.text.x = element_text(angle = 90, vjust = 0.5)) 

ggplotly(plot_schools)
```

# Stats

The things that predicts the percentage of FSM students in a school are the percentage of FSM students in a LA and the progress 8 score of school. The higher the progress 8 (`P8MEA`), the _lower_ the percentage of FSM students in a school (mean=`r round(mean(grms[["Sch FSM %"]], na.rm=TRUE),2)`%; median=`r round(median(grms[["Sch FSM %"]], na.rm=TRUE),2)`%; sd=`r round(sd(grms[["Sch FSM %"]], na.rm=TRUE),2)`% ):

> Sch FSM % ~ Gender + LA FSM % + Region FSM % + Progress 8

```{r stats}
### STATS
lm(data = grms %>% ungroup() %>% filter(Year %in% max(grms$Year)), 
   `Sch FSM %` ~ Gender + `LA FSM %` + `Region FSM %` + `Progress 8`) %>% 
  summary() %>%
  # tidy() %>%
  tbl_regression() %>%
  bold_p()  %>%
  add_glance_table(include = c(nobs, r.squared))

```

```{r plt_FSM_P8}
### STATS

grm_data <- grms %>% 
               ungroup() %>% 
               filter(Year %in% max(grms$Year)) %>%
               mutate(`Sch FSM %` = round(`Sch FSM %`,2))

plot <- ggplot(data = grm_data,
       aes(x=`Progress 8`, y=`Sch FSM %`, group=name)) +
  geom_point(aes(size=`KS4 students`), alpha=0.4) +
  geom_smooth(data=grm_data,
              aes(x=`Progress 8`, y=`Sch FSM %`, group=NULL),
              method = "lm") +
  facet_wrap(Gender ~. ) +
  theme(legend.position = "bottom")

ggplotly(plot)

```

We can also look at the shortfall in FSM places in a school through `Sch-LA FSM short %`, that is the percentage difference between the schools' FSM % and the FSM % for the Local Authority. The higher the number the bigger the difference between the number of FSM students in a school and that expected if it was representative of the local authority. Again, we see progress 8 significantly predicting the shortfall. The higher the progress 8, the less representative a school in terms of FSM students:

> Sch-LA FSM short % ~ Gender + LA FSM % + Region FSM % + Progress 8

```{r stats_LA}
### STATS

lm(data = grms %>% ungroup() %>% filter(Year %in% max(grms$Year)), 
   `Sch-LA FSM short %` ~ Gender + `LA FSM %` + `Region FSM %` + `Progress 8`) %>% 
  summary() %>%
  # tidy() %>%
  tbl_regression() %>%
  bold_p()  %>%
  add_glance_table(include = c(nobs, r.squared))

```

```{r plt_FSM_LA_P8}
### STATS

grm_data <- grms %>% 
               ungroup() %>% 
               filter(Year %in% max(grms$Year)) %>%
               mutate(`Sch-LA FSM short %` = round(`Sch-LA FSM short %`,2))

plot <- ggplot(data = grm_data,
       aes(x=`Progress 8`, y=`Sch-LA FSM short %`, group=name)) +
  geom_point(aes(size=`KS4 students`), alpha=0.4) +
  geom_smooth(data=grm_data,
              aes(x=`Progress 8`, y=`Sch-LA FSM short %`, group=NULL),
              method = "lm") +
  facet_wrap(Gender ~. ) +
  theme(legend.position = "bottom")

ggplotly(plot)

```
