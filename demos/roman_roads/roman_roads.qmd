---
title: Roman roads and straight roads in the UK
author:
  - name: Peter EJ Kemp
    email: peter.kemp@kcl.ac.uk
    affiliations:
    - name: King's College London
date: "Last compiled on `r format(Sys.time(), '%d %B, %Y')`"
warning: false
echo: false
---

This is an interactive map of the known Roman roads across England, overlaid with extant roads that have names suggesting a roman origin, e.g. "straight road", "roman road", "the street" (a corruption of the word "straight"), "the causeway" etc. Whilst many roads with these names will be modern roads, some will be on the same routes as the Roman roads. This map allows you to explore the extent to which this is true.

```{r}
# install.packages("osmdata")
# install.packages("osmextract")

library(osmdata)
library(osmextract)
library(sf)
library(gt)
# library(rgdal)

library(tidyverse)
library(arrow)
# https://cran.r-project.org/web/packages/osmdata/vignettes/osmdata.html#1_Introduction

##### READ OPEN STREETMAP

# use this as it doesn't time out
options(osmdata_overpass_url = "http://overpass-api.de/api/interpreter")

# heavy duty fetch, 
regions <- c("Cheshire", "Rutland", "Essex", "Suffolk", "Kent", "Surrey", "Hampshire", "Norfolk", "Northamptonshire", "Devon", "Cornwall", "Cambridgeshire","Leicestershire", "North Yorkshire","West Yorkshire", "County Durham", "Northumberland","South Yorkshire", "Derbyshire", "Hertfordshire", "East Sussex", "West Sussex", "Cumbria", "Durham", "Bedfordshire", "Buckinghamshire", "Oxfordshire", "Wiltshire", "Lincolnshire","Berkshire", "Dorset", "Somerset", "Devon", "Cornwall","Staffordshire","Gloucestershire","Worcestershire","Shropshire", "Somerset", "Warwickshire","Isle of Wight", "Shropshire", "Lancashire", "Nottinghamshire", "Herefordshire", "Huntingdonshire", "Bedfordshire", "Greater Manchester", "West Midlands", "East Riding of Yorkshire", "Tyne and Wear") |> 
  unique() |> sort()

# regions <- c(
#   "Blaenau Gwent", "Bridgend", "Caerphilly", "Cardiff", "Carmarthenshire",
#   "Ceredigion", "Conwy", "Denbighshire", "Flintshire", "Gwynedd", "Isle of Anglesey",
#   "Merthyr Tydfil", "Monmouthshire", "Neath Port Talbot", "Newport", "Pembrokeshire",
#   "Powys", "Rhondda Cynon Taf", "Swansea", "Torfaen", "Vale of Glamorgan", "Wrexham", "Wales"
# ) |> 
#   unique() |> sort()
# 
# regions <- c("Wales")
 
#regs <- straight_roads$region %>% unique()
#setdiff(regions, regs)

roads=map_dfr(regions, \(region){
  # region <- "Herefordshire"
  oe_get(
    paste(region, "England"),
    quiet = FALSE,
    query = "SELECT * FROM 'lines' WHERE highway IS NOT NULL",
    force_download = FALSE
  ) %>% mutate(region = region)
})
# 
# # save this huge file to local
# write_rds(roads, r"[D:\OneDrive\KCL OneDrive\OneDrive - King's College London\Code\QERKCL_PISA\data\OSM\highways_england.rds]")
# england_roads <- roads

# england_roads <- rbind(roads, england_roads)

# england_roads <- read_rds(r"[D:\OneDrive\KCL OneDrive\OneDrive - King's College London\Code\QERKCL_PISA\data\OSM\highways_england.rds]")

england_roads <- read_rds(r"[D:\OneDrive\KCL OneDrive\OneDrive - King's College London\Code\QERKCL_PISA\data\OSM\highways_england_straight.rds]")

straight_roads <- england_roads %>% 
  filter(str_detect(name,"(?i)Roman|Straight|strait|strate|streat|The Street|streht|causeway|west street|east street|north street|south street")) %>%
  filter(!str_detect(name,"(?i)Roundabout|Close|Romanhurst"))

straight_roads <- straight_roads %>% 
  #filter(str_detect(name, "(?i)straight lane"))
  filter(str_detect(name, "(?i)the strait|the causeway|straight lane|streat lane|roman lane|roman way|straight lane|the street|roman road|roman bank|straight road|the straight|streht|street road|street lane|long causeway|east|west|north|south"))

# write_rds(straight_roads, r"[D:\OneDrive\KCL OneDrive\OneDrive - King's College London\Code\QERKCL_PISA\data\OSM\highways_england_straight.rds]")
# 

par(mar = rep(0.1, 4))
#plot(sf::st_geometry(straight_roads))

# the geometry stores a list of xy pairs
geom <- straight_roads %>% head(1) %>% pull(geometry)

# make a small request to OpenStreetmap
# Bounding box for England
# essex_poly <- opq(getbb ('essex uk', format_out = 'polygon'))
# 
# essex_highways <- essex_poly %>% add_osm_feature(key = 'highway') %>%
#     osmdata_sf()

####### LOAD Roman Road, from: http://romanroadsinbritain.info/data.html
# kml_file <- r"[D:\OneDrive\KCL OneDrive\OneDrive - King's College London\Code\QERKCL_PISA\data\OSM\roman.kml]"
# 
# kml_layers<- st_layers(kml_file)[["name"]]
# 
# roman_roads <- map_dfr(kml_layers, \(lyr){
#   #tmp<-st_read(kml_file,"Margary 212")
#   #attributes(tmp$geometry)
#   sf::st_read(kml_file, layer=lyr) %>% mutate(layer=lyr)
# })

rds_file <- "D:/OneDrive/KCL OneDrive/OneDrive - King's College London/Code/QERKCL_PISA/data/OSM/roman_roads.rds"

# save this slow file to local
# write_rds(roman_roads, rds_file)
# geometry of the kml file has additional attributes that aren't stored in a parquet file, so using an rds
roman_roads <- read_rds(rds_file)

par(mar = rep(0.1, 4))
#plot(sf::st_geometry(roman_roads[-445,]))

## Plot road names on top of archaeological geometry

# 445 gives errors, it's a margary line
roman_roads <- roman_roads[-445,]

# get rid of the Z axis for plotting LINESTRINGs
roman_roads_poly <- roman_roads %>% 
  filter(st_geometry_type(geometry) == "LINESTRING") %>%
  mutate(geometry = st_zm(geometry, "XY"))

roman_roads_point <- roman_roads %>% 
  filter(st_geometry_type(geometry) == "POINT")


# roman_roads_poly %>% as.data.frame() %>% group_by(layer) %>% summarise(n=n())

library(leaflet.extras)
library(leaflet)
leaflet() %>%
  addTiles() %>%
  addPolylines(data = roman_roads_poly, 
              color = "red", 
              weight = 4,
              label = ~paste(layer,"-", Name),
              group="ancient_roads") %>%

    addPolylines(data = straight_roads %>% filter(name == "The Street"), 
              color = "darkblue", 
              weight = 2,
              label = ~name,
              group="the_street") %>%
    addPolylines(data = straight_roads %>% 
                   filter(name == "The Causeway"), 
              color = "darkblue", 
              weight = 2,
              label = ~name,
              group="the_causeway") %>%
    addPolylines(data = straight_roads %>% 
                   filter(grepl("Roman Road", name)), 
              color = "darkblue", 
              weight = 2,
              label = ~name,
              group="roman_road") %>%
  addPolylines(data = straight_roads %>% 
                   filter(name == "Roman Bank"), 
              color = "darkblue", 
              weight = 2,
              label = ~name,
              group="roman_bank") %>%
  addPolylines(data = straight_roads %>% 
                   filter(grepl("Straight|Streat", name)), 
              color = "darkblue",
              weight = 2,
              label = ~name,
              group="straight_road") %>%
  addPolylines(data = straight_roads %>% 
                 filter(grepl("East Street|West Street|North Street|South Street", name)), 
              color = "darkblue", 
              weight = 2,
              label = ~name,
              group="compass_streets") %>%
  addPolylines(data = straight_roads %>% 
                 filter(grepl("(?i)Roman way", name)), 
              color = "darkblue", 
              weight = 2,
              label = ~name,
              group="roman_way") %>%
  addPolylines(data = straight_roads %>% 
                 filter(!grepl("(?i)Straight|Streat|Bank|Roman Road|The Causeway|The Street|East Street|West Street|North Street|South Street|roman way",name)), 
              color = "blue", 
              weight = 2,
              label = ~name,
              group="other_roads") %>%
  addLayersControl(
    overlayGroups = c("ancient_roads","the_street","the_causeway",
    "roman_road", "roman_bank","straight_road","compass_streets",
    "roman_way", "other_roads"),
    options = layersControlOptions(collapsed = FALSE)
  ) %>%
  hideGroup("compass_streets") %>%
  hideGroup("roman_way") %>%
  addFullscreenControl()

# unique(roman_roads$layer)
# romad_roads <- roman_roads %>% filter(str_detect(layer, "Margary|Gough|Street|Early Medieval|roads"))

```

Modern road data (in blue) for `r paste0(regions, collapse=", ")` from Open Street Map, matched by name including "(?i)the strait|the causeway|straight lane|streat lane|roman lane|straight lane|the street|roman road|roman bank|roman way|straight road|the straight|streht|street road|street lane|long causeway". East Street, North Street, South Street, West Street and Roman _Way_ can be added by selecting the layer, but they are excluded by default as lots of new developments appear to use these names.

```{r}
straight_roads %>% as.data.frame() %>% distinct() %>%
  group_by(region, name) %>% 
  summarise(n=n()) %>% 
  arrange(desc(n)) %>% 
  ungroup() %>%
  gt() %>% 
  opt_interactive(use_filters=TRUE)
```

Ancient roads (in red) including Margary's roads from: http://romanroadsinbritain.info/data.html, copyright M.C.Bishop with a Creative Commons ([Attribution-NonCommercial-ShareAlike or CC BY-NC-SA](https://creativecommons.org/licenses/by-nc-sa/4.0/)) licence.


