[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Quantitative methods in the context of STEM education research",
    "section": "",
    "text": "This book has been written to accompany the MA STEM quantitative methods course the King’s College London. It will take the reader through the process of learning the R statistical programming language through the analysis of the 2021 PISA survey data. The book does not assume any prior knowledge and should suit the needs of those looking to learn R, learn statistics, learn how to analyse PISA data, or any combination of these. If you have any questions, please contact peter.kemp@kcl.ac.uk and richard.brock@kcl.ac.uk\n\n1 Copyright\nThis book is published under a #### license.\n\nAll PISA products are published under the Creative Commons Attribution-NonCommercial-ShareAlike 3.0 IGO (CC BY-NC-SA 3.0 IGO)\n\nThis includes the .rds and .parquet formatted datasets linked throughout the text."
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "This book is aimed at students on the MA STEM course at King’s College London. The course is led by Richard Brock."
  },
  {
    "objectID": "chapters/01-Intro_to_quant_methods.html",
    "href": "chapters/01-Intro_to_quant_methods.html",
    "title": "01 Introduction",
    "section": "",
    "text": "This session will introduce you to the assumptions that underpin quantitative research. We will consider the potential value of quantitative research, and consider the process of quantising latent variables. Latent variables are variables that can only be inferred indirectly from data. For example, consider intelligence - there is no way to measure intelligence directly, we have to base our assumptions of intelligence on performance on some tasks."
  },
  {
    "objectID": "chapters/01-Intro_to_quant_methods.html#activity-1-the-mismeasure-of-man",
    "href": "chapters/01-Intro_to_quant_methods.html#activity-1-the-mismeasure-of-man",
    "title": "01 Introduction",
    "section": "\n1.1 Activity 1: The mismeasure of man?",
    "text": "1.1 Activity 1: The mismeasure of man?\n\n“The Mismeasure of Man treats one particular form of quantified claim about the ranking of human groups: the argument that intelligence can be meaningfully abstracted as a single number capable of ranking all people on a linear scale of intrinsic and unalterable mental worth.\n… this limited subject embodies the deepest (and most common) philosophical error, with the most fundamental and far-ranging social impact, for the entire troubling subject of nature and nurture, or the genetic contribution to human social organization.” (Gould 1996, ii)\n\nDiscuss:\n\nTo what extent do the variables commonly studied in educational research (for example, intelligence, exam scores, attitudes etc.) validly represent some underlying latent variable?\nWhat advantages does quantification of such variables bring, and what issues does it raise?\nCan you think of an example in your own practice where a variable has been created that doesn’t fully reflect the latent concept? -What is the researcher’s role in making sure variables are validly represented?"
  },
  {
    "objectID": "chapters/01-Intro_to_quant_methods.html#activity-2-an-example-of-quantification",
    "href": "chapters/01-Intro_to_quant_methods.html#activity-2-an-example-of-quantification",
    "title": "01 Introduction",
    "section": "\n1.2 Activity 2: An example of quantification",
    "text": "1.2 Activity 2: An example of quantification\nIn the seminar we will consider this paper:\nPasha-Zaidi, N., & Afari, E. (2016). Gender in STEM education: An exploratory study of student perceptions of math and science instructors in the United Arab Emirates. International Journal of Science and Mathematics Education, 14(7), 1215-1231.\nPasha-Zaidi and Afari (2016)\nReflect on\n\nWhat potential issues arise from the authors’ construction of quantitative variables of ‘teacher professionalism’ and ‘teacher warmth’?\nTo what extent does the authors’ survey validly probe the variables of ‘teacher professionalism’ and ‘teacher warmth’?\nWhat other critiques of the study can you propose?"
  },
  {
    "objectID": "chapters/01-Intro_to_quant_methods.html#activity-3-a-false-dualism",
    "href": "chapters/01-Intro_to_quant_methods.html#activity-3-a-false-dualism",
    "title": "01 Introduction",
    "section": "\n1.3 Activity 3: A false dualism?",
    "text": "1.3 Activity 3: A false dualism?\n\n“‘Quantitative’ and ‘qualitative’ are frequently seen in opposition…. The contrast is drawn between the objective world (out there independently of our thinking about it) and the subjective worlds (in our heads, as it were, and individually constructed); between the public discourse and private meanings; between reality unconstructed by anyone and the ‘multiple realities’ constructed by each individual. The tendency to dichotomise in this way is understandable but misleading.” - (Pring 2000, 248)\n\nDiscussion Questions\n\nWhat are the differing assumptions of qualitative and quantitative educational research?\nAre the two ‘paradigms’ completely distinct? Is the distinction helpful?\nHow should a researcher choose what approach to use?"
  },
  {
    "objectID": "chapters/01-Intro_to_quant_methods.html#task-4-another-critique-of-quantification",
    "href": "chapters/01-Intro_to_quant_methods.html#task-4-another-critique-of-quantification",
    "title": "01 Introduction",
    "section": "\n1.4 Task 4: Another critique of quantification",
    "text": "1.4 Task 4: Another critique of quantification\nThe second task considers this paper: Gibson and Dembo (1984)\nFor the purpose of discussion, teacher efficacy has been defined as “the extent to which the teacher believes he or she has the capacity to affect student performance” (Berman et al. 1977, 137)\nTool\n\n\n\n\n(Gibson and Dembo 1984, 573)\nFindings\n\n(Gibson and Dembo 1984, 577)\nTo discuss\n\nDoes teacher efficacy measure a discrete aspect of teachers’ beliefs? Does that matter?\nDoes the construct have validity? I.e., does the questionnaire measure what it claims to?\nWhat issues arises from quantifying teacher efficacy?\nWhat alternatives are there to quantitative measures of teacher efficacy? What are their advantages and limitations?"
  },
  {
    "objectID": "chapters/02-1-Intro_to_analysis_software.html",
    "href": "chapters/02-1-Intro_to_analysis_software.html",
    "title": "Introduction to R",
    "section": "",
    "text": "This short course aims to take you through the process of writing your first programs in the R statistical programming language to analyse national and international educational datasets. To do this we will be using the R Studio integrated development environment (IDE), a desktop application to support you in writing R scripts. R Studio supports your programming by flagging up errors in your code as you write it, and helping you manage your analysis environment by giving you quick access to tables, objects and graphs as you develop them. In addition, we will be looking at data analysis using the tidyverse code packages. The tidyverse is a standardised collection of supporting code that helps you read data, tidy it into a usable format, analyse it and present your findings.\nThe R programming language offers similar functionality to an application based statistical tool such as SPSS, with more of a focus on you writing code to solve your problems, rather than using prebuilt tools. R is open source, meaning that it is free to use and that lots of people have written code in R that they have shared with others. R statistical libraries are some of the most comprehensive in existence. R is popular1 in academia and industry, being used for everything from sales modelling to cancer detection.\n# This example shows how R can pull data directly from the internet\n# tidy it and start making graphs. All within 9 lines of code\nlibrary(tidyverse)\n\neducation &lt;- read_csv(\n  \"https://barrolee.github.io/BarroLeeDataSet/BLData/BL_v3_MF.csv\")\n\neducation %&gt;%\n  filter(agefrom == 15, ageto == 24,\n         country %in% c(\"Germany\",\"France\",\"Italy\",\"United Kingdom\")) %&gt;%\n  ggplot(aes(x=year, y=yr_sch, colour=country)) +\n  geom_point() +\n  geom_line()\nWhilst it is possible to use R through menu systems and drop down tools, the focus of this course is for you to write your own R scripts. These are text files that will tell the computer how to go through the process of loading, cleaning, analysing and presenting data. The sequential and modular nature of these files makes it very easy to develop and test each stage separately, reuse code in the future, and share with others.\nThis booklet is written with the following sections to support you:\n# Code examples and questions appear like this\na &lt;- 1 + 3\nCourier font indicates keyboard presses, column names, column values and function names.\n&lt;folder&gt; Courier font within brackets describe values that can be passed to functions and that you need to define yourself. I.e. copying and pasting these code chunks verbatim won’t work!"
  },
  {
    "objectID": "chapters/02-1-Intro_to_analysis_software.html#installation-on-your-own-machine",
    "href": "chapters/02-1-Intro_to_analysis_software.html#installation-on-your-own-machine",
    "title": "Introduction to R",
    "section": "\n1.1 Installation (on your own machine)",
    "text": "1.1 Installation (on your own machine)\n\n\nInstall R (default settings should be fine)\n\n\nWindows users visit: here\n\n\nMac users visit: here and make sure you get the correct version of R for M1/2 Macs (~November 2020 onwards), or Intel Macs (~up to November 2020)\n\n\nInstall RStudio, visit here and it should present you with the version suitable for your operating system.\n\n(If the above doesn’t work follow the instructions here)"
  },
  {
    "objectID": "chapters/02-1-Intro_to_analysis_software.html#sec-packages",
    "href": "chapters/02-1-Intro_to_analysis_software.html#sec-packages",
    "title": "Introduction to R",
    "section": "\n1.2 Setting up RStudio and the tidyverse",
    "text": "1.2 Setting up RStudio and the tidyverse\n\nOpen RStudio\n\nOn the bottom right-hand side, select Packages, then select Install, then type “tidyverse” into the Packages field of the new window:\n\n\nClick Install and you should see things happening in the console (bottom left). Wait for the console activity to finish (it’ll be downloading and checking packages). If it asks any questions, type N for no and press enter.\n\nAdd a new R Script using the  button\n\n\n\nIn the new R script, write the following:\n\n\n\nSelect all the lines and press Control or Command ⌘ and Enter on your keyboard at the same time. Alternatively, press the  button\n\n\n\nCheck that you have the following in the console window (depending on your screen size you might have fewer columns):\n\n\nInstall the arrow package, repeat step 2, above.\nDownload the PISA_2018_student_subset.parquet dataset from here and download it on your computer, make a note of the full folder location where you have saved this!\n\nIf you need help with finding the full folder location of your file, often a hurdle for Mac users, go to ?@sec-loading-computer\n\nCopy the following code and replace &lt;folder&gt; with the full folder location of where your dataset was saved, make sure that you have .parquet on the end. And keep the (r\"[  ]\")!\n\n\nexamples of what this should look like for PC and Mac# For Pete (PC) the address format was:\nPISA_2018 &lt;- read_parquet(r\"[C:\\Users\\Peter\\KCL\\MASTEMR\\PISA_2018_student_subset.parquet]\")\n\n# For Richard (Mac) the address format was:\nPISA_2018 &lt;- read_parquet(r\"[/Users/k1765032/Documents/Teaching/STEM MA/Quantitative module/Data sets/PISA_2018_student_subset.parquet]\")\n\n\n\nlibrary(arrow)\nlibrary(tidyverse)\n\nPISA_2018 &lt;- read_parquet(r\"[&lt;folder&gt;PISA_2018_student_subset.parquet]\")\n\n\nUnderneath the code you have already written, copy the code below (you don’t have to write it yourself), and run it. Try and figure out what each line does and what it’s telling you.\n\n\nlibrary(tidyverse)\n\nPISA_2018 %&gt;%\n  mutate(maths_better = PV1MATH &gt; PV1READ) %&gt;%\n  select(CNT, ST004D01T, maths_better, PV1MATH, PV1READ) %&gt;% \n  filter(!is.na(ST004D01T), !is.na(maths_better)) %&gt;%\n  group_by(ST004D01T) %&gt;%\n  mutate(students_n = n()) %&gt;%\n  group_by(ST004D01T, maths_better) %&gt;%\n  summarise(n = n(),\n            per = n/unique(students_n))\n\n\nThat’s it, you should be set up!\nAny issues, please drop a message on the Teams group, or mail peter.kemp@kcl.ac.uk and richard.brock@kcl.ac.uk"
  },
  {
    "objectID": "chapters/02-1-Intro_to_analysis_software.html#objects-and-instructions",
    "href": "chapters/02-1-Intro_to_analysis_software.html#objects-and-instructions",
    "title": "Introduction to R",
    "section": "\n3.1 Objects and instructions",
    "text": "3.1 Objects and instructions\nIn programming languages we can attach data to a name, this is called assigning a value to an object (you might also call them variables). To do this in R we use the &lt;- arrow command. For example, I want to put the word \"Pete\" into an object called myname (note that words and sentences such as \"Pete\" need speech marks):\n\nmyname &lt;- \"Pete\"\nprint(myname)\n\n[1] \"Pete\"\n\n\nWe can also perform quick calculations and assign them to objects:\n\nHoursInYear &lt;- 365 * 24\nprint(HoursInYear) \n\n[1] 8760\n\n\n\nType the two examples above into your RStudio script file and check that they work. Adapt them to say your full name and give the number of MinutesInADay\n\n\n\n\n\n\n\nTip\n\n\n\nRemember to select code and press control or command and Enter to run it\n\n\nObjects can form part of calculations, for example, the code below shows how we can use the number HoursInYear to (roughly!) calculate the number of HoursInWeek:\n\nHoursInYear &lt;- 365 * 24\n\nHoursInWeek &lt;- HoursInYear / 52\nprint(HoursInWeek)\n\n[1] 168.4615\n\n\nNotice from the above we can perform the main arithmetic commands using keyboard symbols: + (add); - (minus); * (multiply); / (divide); ^ (power)\nObjects can change values when you run code. For example in the code below:\n\na &lt;- 2000\nb &lt;- 5\n\na &lt;- b\n\na &lt;- a * b\nprint(a)\n\n[1] 25\n\n\nWhat’s going on here?\n\nline 1 sets a to equal 2000 (note: don’t use commas in writing numbers a &lt;- 2,000 would bring up an error),\nline 2 sets b to equal 5,\nline 4 overwrites the value of a with the value stored in b, making object a now equal to 5\nline six is now 5 * 5\n\n\n\n3.1.1 Questions\n\nwhat are the outputs of the following code snippets/what do they do? One of the examples might not output anything, why is that? Type the code into your script file to check your answers:\ncode example 1\n\nrabbits &lt;- 50\nfeet &lt;- 4\n\ntotalfeet &lt;- rabbits * feet\nprint(totalfeet)\n\n\nanswer200\n\n\ncode example 2\n\np &lt;- 3.14 - 0.14\nr &lt;- 5\n\nprint(p * r^2)\n\n\nanswer75\n\n\ncode example 3\n\ntax &lt;- 17.5\nprice &lt;- 4.50\nsales &lt;- 128\ntax &lt;- 20\n\nincome &lt;- (sales * price) * (1 + (tax/100))\n\n\nanswer# prints nothing! there isn't a print statement"
  },
  {
    "objectID": "chapters/02-1-Intro_to_analysis_software.html#naming-objects",
    "href": "chapters/02-1-Intro_to_analysis_software.html#naming-objects",
    "title": "Introduction to R",
    "section": "\n3.2 Naming objects",
    "text": "3.2 Naming objects\nCorrectly naming objects is very important. You can give an object almost any name, but there are a few rules to follow:\n\nName them something sensible\nR is case sensitive, myName is not equal to (!=) myname\n\nDon’t use spaces in names\nDon’t start a name with a number\nKeep punctuation in object names to underscore (_ and full stop .) e.g. my_name, my.name.\nStick to a convention for all your objects, it’ll make your code easier to read, e.g.\n\n\nmyName, yourName, ourName (this is camelCase 2)\n\nmy_name, your_name, our_name\n\n\n\n\n\n\n\n\n\n\nImportant\n\n\n\nThe actual name of an object has no effect on what it does (other than invalid names breaking your program!). For example age &lt;- \"Barry\" is perfectly valid to R, it’s just a real pain for a human to read.\n\n\n\n3.2.1 Questions\n\nWhich of these are valid R object names:\n\nmy_Number\nmy-Number\nmyNumber!\nfirst name\nFIRSTname\ni\n3names\nnames3\n\n\nanswers# my_Number  (VALID)\n# my-Number  (VALID)\n# myNumber!  (INVALID due to !)\n# first name (INVALID due to space)\n# FIRSTname  (VALID but don't recommend so many caps)\n# i          (VALID)\n# 3names     (INVALID starts with a 3)\n# names3     (VALID)\n\n\n\n\n\n\n\n\n\nNote\n\n\n\nFor more information on the R programming style guide, see this"
  },
  {
    "objectID": "chapters/02-1-Intro_to_analysis_software.html#comments",
    "href": "chapters/02-1-Intro_to_analysis_software.html#comments",
    "title": "Introduction to R",
    "section": "\n3.3 Comments",
    "text": "3.3 Comments\nCode can often look confusing and it’s a good idea to add # comments to your code to make it more understandable for you and others. The computer ignores comments when running your code:\n\n# this calculates the average sales per shop\n\nincome1 &lt;- 132\nincome2 &lt;- 665\nincome3 &lt;- 233\nincome4 &lt;- 1200\n\nshops &lt;- 4 # everything after the hash is a comment\n\navgSales &lt;- sum(income1, income2, income3, income4) / shops  \n\n# sometimes you might want to comment out code that\n# is no longer needed, but might be useful later\n# standard_deviation &lt;- sd(c(income1, income2, income3, income4) )\n# the above code isn't run\n\nprint(avgSales) # but this code is\n\n[1] 557.5"
  },
  {
    "objectID": "chapters/02-1-Intro_to_analysis_software.html#sec-datatypes",
    "href": "chapters/02-1-Intro_to_analysis_software.html#sec-datatypes",
    "title": "Introduction to R",
    "section": "\n3.4 Datatypes",
    "text": "3.4 Datatypes\nWe have already met two different datatypes, the character datatype for words and letters (e.g. \"Peter\") and the numeric datatype for numbers (e.g. 12). Datatypes tell R how to handle data in certain circumstances. Sometimes data will be of the wrong datatype and you will need to convert between datatypes.\n\nweeks &lt;- 4\ndays_in_week &lt;- \"7\"\n\n# we now attempt to multiply a number by a string\n# but it doesn't work!\ntotal_days &lt;- weeks * days_in_week \n\nError in weeks * days_in_week: non-numeric argument to binary operator\n\n\nWhilst R will understand what to do when we multiply numbers with numbers, it gets very confused and raises an error when we try to perform an arithmetic operation using words and numbers.\nTo perform the calculation we will need to convert the days_in_week from a string to a number, using the as.numeric(&lt;text&gt;) command:\n\nweeks &lt;- 4\ndays_in_week &lt;- \"7\"\n\n# we now attempt to multiply a number by a string\ntotal_days &lt;- weeks * as.numeric(days_in_week)\n\nThere is a logical datatype for boolean values of TRUE and FALSE. This will become a lot more useful later.\n\nlegs_snake &lt;- FALSE # you can specify logical values directly\ndogs_legs &lt;- 4\nlegs_dog &lt;- dogs_legs &gt; 0 # or as part of a calculation\n\n# Do dog's have legs?\nprint(legs_dog)\n\n[1] TRUE\n\n\nThere are actually three datatypes for numbers in R, numeric for most of your work, the rarer integer specifically for whole numbers and the even rarer complex for complex numbers. When you are looking at categorical data, factors are used on top of the underlying datatype to store the different values, for example you might have a field of character to store countries, factors would then list the different countries stored in this character field.\nTo change from one datatype to another we use the as.____ command: as.numeric(&lt;text&gt;), as.logical(&lt;data&gt;), as.character(&lt;numeric&gt;).\n\n3.4.1 Questions\n\n\nCan you spot the error(s) in this code and fix them so it outputs: “July is month 7”?\n\n\nmonth &lt;- \"July\"\norder &lt;- 7\n  \nprint(month)\nPrint(\"is\")\nprint(month)\nprint(\"order\")\n\n\nanswermonth &lt;- \"July\"\norder &lt;- 7\n  \nprint(month)    \nprint(\"is\")     #1 print needs a lowercase p\nprint(\"month\")  #2 month is a character not an object, use speech marks\nprint(order)    #3 order is an object, not a character, so drop the speech marks\n\n\n\nCan you spot the error(s) in this code and fix it?\n\n\na &lt;- 7\nb &lt;- \"8\"\nc &lt; - 3\n  \nprint(a + b + c)\n\n\nanswera &lt;- 7\nb &lt;- 8 #1 b is numeric so drop the speech marks\nc &lt;- 3 #2 the arrow needs to be together, remove the space\n  \nprint(a + b + c)\n\n\n\nCan you spot the error(s) in this code and fix it?\n\n\npass mark &lt;- 50 \nexam_grade &lt;- 50\n\n# did the student pass?\nprint(exam_grade &gt; pass_mark)\n\n\nanswerpass_mark &lt;- 50 #1 the variable name can't have any spaces\nexam_grade &lt;- 50\n\n# did the student pass?\nprint(exam_grade &gt;= pass_mark) # this needs to be &gt;= as they had a passing grade\n\n\n\n\n\n\n\n\n\nTip\n\n\n\nIf you want to find out the datatype of an object you can use the structure str command to give you more information about the object. In this instance chr means that month is of character datatype and num means it is of the numeric datatype.\n\nmonth &lt;- \"July\"\nstr(month)\n\n chr \"July\"\n\nmonth &lt;- 7\nstr(month)\n\n num 7"
  },
  {
    "objectID": "chapters/02-1-Intro_to_analysis_software.html#questions-3",
    "href": "chapters/02-1-Intro_to_analysis_software.html#questions-3",
    "title": "Introduction to R",
    "section": "\n4.1 Questions",
    "text": "4.1 Questions\n\n\nCan you spot the four problems with this code:\n\n\nnums &lt;- v(1,2,\"3\",4,7,2,2)\nsum(nums)\nmean(nums)\n# return a vector of all numbers greater than 2\nnums(nums &gt;= 2)\n\n\nanswernums &lt;- c(1,2,3,4,7,2,2) \n#1 a vector is declared using c(), not v()\n#2 3 should be numeric, so no need for speech marks\n# (though technically R would do this conversion for you!)\n\nsum(nums)\nmean(nums)\n# return a vector of all numbers greater than 2\nnums[nums &gt;= 2] #3 to pick items from another vector, use square brackets\n\n\n\nCreate a vector to store the number of glasses of water you have drunk for each day in the last 7 days. Work out:\n\nthe average number of glasses for the week,\nthe total number of glasses,\nthe number of days where you drank less than 2 glasses (feel free to replace water with your own tipple: wine, coffee, tea, coke, etc.)\n\n\n\n\nanswerglasses &lt;- c(6,1,3,2,3,0)\nmean(glasses)\nsum(glasses)\nsum(glasses &lt; 2)\n\n\n\nUsing the vectors below, create a program that will find out the average grade for females taking English:\n\n\nenglish_grade &lt;- c(8,5,3,2,3,6,9)\ngenders &lt;- c(\"F\", \"M\", \"M\", \"F\", \"M\", \"F\", \"M\")\n\n\nanswerenglish_grade &lt;- c(8,5,3,2,3,6,9)\ngenders &lt;- c(\"F\", \"M\", \"M\", \"F\", \"M\", \"F\", \"M\")\nmean(english_grade[genders == \"F\"])"
  },
  {
    "objectID": "chapters/02-1-Intro_to_analysis_software.html#sec-load-run-pckges",
    "href": "chapters/02-1-Intro_to_analysis_software.html#sec-load-run-pckges",
    "title": "Introduction to R",
    "section": "\n6.1 Installing and loading packages",
    "text": "6.1 Installing and loading packages\nTo install a package you can use the package tab in the bottom right-hand panel of RStudio and follow the steps from Section 1.2. Alternatively you can install things by typing:\n\ninstall.packages(\"tidyverse\")\n\nNote that the instruction is to install packages, you can pass a vector of package names to install multiple packages at the same time:\n\ninstall.packages(c(\"tidyverse\",\"readxl\",\"haven\"))\n\nOnce a package is installed it doesn’t mean that you can use it, yet. You will need to load the package. To do this you need to use the library(&lt;package_name&gt;) command, for example:\n\nlibrary(tidyverse)\n\n\n\n\n\n\n\nImportant\n\n\n\nSome packages might use the same function names as other packages, for example select might do different things depending on which package you loaded last. As a rule of thumb, when you start RStudio afresh, make sure that you load the tidyverse package after you have loaded all your other packages. To read more about this problem see ?@sec-QANDA"
  },
  {
    "objectID": "chapters/02-1-Intro_to_analysis_software.html#footnotes",
    "href": "chapters/02-1-Intro_to_analysis_software.html#footnotes",
    "title": "Introduction to R",
    "section": "Footnotes",
    "text": "Footnotes\n\nAs of November 2022, Tiobe has R as the 12th most popular programming language. Many other, contradictory, ranking systems exist.↩︎\ncamelCase has a capital letter in the front or front and middle forming the camel’s hump(s), there are multiple naming conventions, it doesn’t matter which you pick, just stick to one of them.↩︎\nR was created to allow for vector programming, that is a programming language where you can apply operations to entire sets of values (vectors) at the same time, rather than having to cycle through them individually. Vector languages work in a way that is close to how mathematical notation works, making them well suited for performing mathematical functions.↩︎\nYou’ll sometimes see the words package and library used interchangeably, technically the library is the place where the packages are stored.↩︎"
  },
  {
    "objectID": "chapters/02-2-Intro_to_analysis_software.html",
    "href": "chapters/02-2-Intro_to_analysis_software.html",
    "title": "Loading packages and exploring data",
    "section": "",
    "text": "This course focuses on using the tidyverse; a free collection of programming packages that will allow you to write code that imports data, tidys it, transforms it into useful datasets, visualises findings, creates statistical models and communicates findings to others data using a standardised set of commands.\nFor many people the tidyverse is the main reason that they use R. The tidyverse is used widely in government, academia, NGOs and industry, notable examples include the Financial Times and the BBC. Code in the tidyverse can be (relatively) easily understood by others and you, when you come back to a project after several months."
  },
  {
    "objectID": "chapters/02-2-Intro_to_analysis_software.html#proper-addresses",
    "href": "chapters/02-2-Intro_to_analysis_software.html#proper-addresses",
    "title": "Loading packages and exploring data",
    "section": "\n5.1 Proper addresses",
    "text": "5.1 Proper addresses\nYou might have found that you get an error if you don’t convert your backslashes \\ into forwardslashes /. It’s common mistake and very annoying. In most programming languages a backslash signifies the start of a special command, for example \\n signifies a newline.\nWith R there are three ways to get around the problem of backslashes in file locations, for the location:\"C:\\myfolder\\\" we could:\n\nreplace them with forwardslashes (as shown above):\"C:/myfolder/\"\n\nreplace them with double backslashes (the special character specified by two backslashes is one backslash!):\"C:\\\\myfolder\\\\\"\n\nuse the inbuilt R command to deal with filenames: r\"[C:\\myfolder\\]\""
  },
  {
    "objectID": "chapters/02-2-Intro_to_analysis_software.html#questions",
    "href": "chapters/02-2-Intro_to_analysis_software.html#questions",
    "title": "Loading packages and exploring data",
    "section": "\n8.1 Questions",
    "text": "8.1 Questions\n\nUsing the PISA_2018 dataset:\n\nuse the Environment window to view the dataset, what is the name and the label of the 100th column?\n\n\nanswer# the 100th column is ST102Q02TA\n# the label is: \"How often during &lt;test language lessons&gt;: The teacher asks questions to check whether we have understood what was taught\"\n\n# you could use View() instead of the environment window, note the capital V\nView(PISA_2018)\n# use could use the vector subset to fetch the 100th name\nnames(PISA_2018)[100]\n\n# you could use the attr function to find the label\nattr(PISA_2018$ST102Q02TA, \"label\")\n# or using the dollar sign to load this field will also give the label\nPISA_2018$ST102Q02TA\n\n\n\nUse the dollar sign $ to return the column ST004D01T. What is stored in this column?\n\n\nanswer# Student (Standardized) Gender\nPISA_2018$ST004D01T\n\n#  [1] Male   Male   Female Male   Male   Female Female Male   Female Female\n# [11] Female Female Female Female Male   Female Male   Male   Male   Male  \n# [21] Male   Male   Female Male   Male   Female Male   Female Male   Male  \n# [31] Female Female Female Female Female Male   Male   Male   Male   Female\n#  [ reached getOption(\"max.print\") -- omitted 611964 entries ]\n# attr(,\"label\")\n# [1] Student (Standardized) Gender\n# Levels: Female Male Valid Skip Not Applicable Invalid No Response\n\n\n\nHow many students results are in the whole table?\n\n\nanswernrow(PISA_2018)\n# [1] 612004\n\n\n\nWhat unique values does the dataset hold for Mother’s occupation OCOD1 and Father’s occupation OCOD2? Which is larger?\n\n\nanswerunique(PISA_2018$OCOD1)\nunique(PISA_2018$OCOD2)\n\n# you can read the length from the above, or you could use the\n# length command to tell you the length of the vector\n\nlength(unique(PISA_2018$OCOD1))\n# [1] 588\nlength(unique(PISA_2018$OCOD2))\n# [1] 589\n\n\n\nWhat are the maximum, mean, median and minumum science grades PV1SCIE achieved by any student\n\n\nanswer# remember to set the na.rm = TRUE\nmax(PISA_2018$PV1SCIE, na.rm=TRUE)\n# [1] 886.081\nmean(PISA_2018$PV1SCIE, na.rm=TRUE)\n# [1] 460.6944\nmedian(PISA_2018$PV1SCIE, na.rm=TRUE)\n# [1] 458.2\nmin(PISA_2018$PV1SCIE, na.rm=TRUE)\n# [1] 58.736\n\n\n\nExplore the dataset and makes notes about the range of values of 2 other columns"
  },
  {
    "objectID": "chapters/02-2-Intro_to_analysis_software.html#footnotes",
    "href": "chapters/02-2-Intro_to_analysis_software.html#footnotes",
    "title": "Loading packages and exploring data",
    "section": "Footnotes",
    "text": "Footnotes\n\nEven in this cut down format the PISA data might take a few minutes to load. You can find the full dataset here, but be warned, it might crash you machine when trying to load it! Plug your laptop into a power supply, and having 16GB of RAM highly recommended! You might also need to wrangle some of the fields to make them work for your purposes, you might enjoy the challenge!↩︎"
  },
  {
    "objectID": "chapters/02-3-Intro_to_analysis_software.html",
    "href": "chapters/02-3-Intro_to_analysis_software.html",
    "title": "Piping and dplyr",
    "section": "",
    "text": "Piping allows us to break down complex tasks into manageable chunks that can be written and tested one after another. There are several powerful commands in the tidyverse as part of the dplyr package that can help us group, filter, select, mutate and summarise datasets. With this small set of commands we can use piping to convert massive datasets into simple and useful results.\nUsing the pipe %&gt;% command, we can feed the results from one command into the next command making for reusable and easy to read code.\nLet’s look at an example of using the pipe on the PISA_2018 table to calculate the best performing OECD countries for maths PV1MATH by gender ST004D01T:\nPISA_2018 %&gt;% \n  filter(OECD == \"Yes\") %&gt;%\n  group_by(CNT, ST004D01T) %&gt;% \n  summarise(mean_maths = mean(PV1MATH, na.rm=TRUE),\n            sd_maths = sd(PV1MATH, na.rm=TRUE),\n            students = n()) %&gt;%\n  filter(!is.na(ST004D01T)) %&gt;%\n  arrange(desc(mean_maths))\n\n# A tibble: 74 × 5\n# Groups:   CNT [37]\n   CNT            ST004D01T mean_maths sd_maths students\n   &lt;fct&gt;          &lt;fct&gt;          &lt;dbl&gt;    &lt;dbl&gt;    &lt;int&gt;\n 1 Japan          Male            533.     90.5     2989\n 2 Korea          Male            530.    102.      3459\n 3 Estonia        Male            528.     85.0     2665\n 4 Japan          Female          523.     82.2     3120\n 5 Korea          Female          523.     96.0     3191\n 6 Switzerland    Male            520.     92.7     3033\n 7 Estonia        Female          519.     76.0     2651\n 8 Czech Republic Male            518.     98.0     3501\n 9 Belgium        Male            518.     95.9     4204\n10 Poland         Male            517.     91.8     2768\n# ℹ 64 more rows\nMales get a slightly better maths score than Females for this PV1MATH score, other scores are available, please read ?@sec-PV to find out more about the limitations of using this value.\nThe commands we have just used come from a package within the tidyverse called dplyr, let’s take a look at what they do:"
  },
  {
    "objectID": "chapters/02-3-Intro_to_analysis_software.html#questions",
    "href": "chapters/02-3-Intro_to_analysis_software.html#questions",
    "title": "Piping and dplyr",
    "section": "\n1.1 Questions",
    "text": "1.1 Questions\n\n\nSpot the three errors with the following select statement\n\n\nPISA_2018 \n  select(CNT BELONG) %&gt;%\n\n\nanswerPISA_2018 %&gt;%  #1 missing pipe\n  select(CNT, BELONG) #2 no comma between column names, #3 stray pipe on end\n\n\n\nWrite a select statement to display the month ST003D02T and year of birth ST003D03T and the gender ST004D01T of each student.\n\n\nanswerPISA_2018 %&gt;% \n  select(ST003D02T, ST003D03T, ST004D01T)\n\n\n\nWrite a select statement to show all the fields that are to do with digital skills, e.g. IC150Q01HA\n\n\n\nanswerPISA_2018 %&gt;% \n  select(starts_with(\"IC15\"))\n\n\n\n[EXTENSION] Adjust the answer to Q3 so that you select the gender ST004D01T and the ID CNTSTUID of each student in addition to the IC15____ fields\n\n\nanswerPISA_2018 %&gt;% \n  select(CNTSTUID, ST004D01T, starts_with(\"IC15\"))"
  },
  {
    "objectID": "chapters/02-3-Intro_to_analysis_software.html#questions-1",
    "href": "chapters/02-3-Intro_to_analysis_software.html#questions-1",
    "title": "Piping and dplyr",
    "section": "\n2.1 Questions",
    "text": "2.1 Questions\n\n\nSpot the three errors with the following select statement\n\n\nPISA_2018 %&gt;% \n  select(CNT) %&gt;%\n  filter(CNT in c(\"France\", \"belgium\")\n         ESCS &lt; 0)\n\n\nanswerPISA_2018 %&gt;% \n  select(CNT, ESCS) %&gt;% #1 you have ESCS in the filter, it needs to be in the select as well\n  filter(CNT %in% c(\"France\", \"Belgium\"), #2 Belgium needs a capital letter\n                                          #3 the %in% command needs percentages\n                                          #4 you need a comma (or &) at the end of the line\n         ESCS &lt; 0)\n\n\n\nUse filter to find all the students with Three or more cars in their home ST012Q02TA. How does this compare to those with no None cars?\n\n\nanswercars_3 &lt;- PISA_2018 %&gt;%\n  select(CNT, ST012Q02TA) %&gt;%\n  filter(ST012Q02TA == \"Three or more\")\n\ncars_0 &lt;- PISA_2018 %&gt;%\n  select(CNT, ST012Q02TA) %&gt;%\n  filter(ST012Q02TA == \"None\")\n\n\n\nAdjust your code in Q2. to find the number of students with Three or more cars in their home ST012Q02TA in Italy, how does this compare with Spain?\n\n\nanswerPISA_2018 %&gt;%\n  select(CNT, ST012Q02TA) %&gt;%\n  filter(ST012Q02TA == \"Three or more\",\n         CNT == \"Italy\")\n\nPISA_2018 %&gt;%\n  select(CNT, ST012Q02TA) %&gt;%\n  filter(ST012Q02TA == \"Three or more\",\n         CNT == \"Spain\")\n\n\n\nWrite a filter to create a table for the number of Female students with reading PV1READ scores lower than 400 in the United Kingdom, store the result as read_low_female, repeat but for Male students and store as read_low_male. Use nrow() to work out if there are more males or females with a low reading score in the UK\n\n\nanswerread_low_female &lt;- PISA_2018 %&gt;% \n  filter(CNT == \"United Kingdom\",\n         PV1READ &lt; 400,\n         ST004D01T == \"Female\")\n\nread_low_male &lt;- PISA_2018 %&gt;% \n  filter(CNT == \"United Kingdom\",\n         PV1READ &lt; 400,\n         ST004D01T == \"Male\")\n\nnrow(read_low_female)\nnrow(read_low_male)\n\n# You could also pipe the whole dataframe into nrow()\nPISA_2018 %&gt;% \n  filter(CNT == \"United Kingdom\",\n         PV1READ &lt; 400,\n         ST004D01T == \"Female\") %&gt;% \n  nrow()\n\n\n\nHow many students in the United Kingdom had no television ST012Q01TA OR no connection to the internet ST011Q06TA. HINT: use levels(PISA_2018$ST012Q01TA) to look at the levels available for each column.\n\n\nanswerPISA_2018 %&gt;% filter(CNT == \"United Kingdom\", \n                     ST011Q06TA == \"No\" |\n                     ST012Q01TA == \"None\")\n\n\n\nWhich countr[y|ies] had students with NA for Gender?\n\n\nanswerPISA_2018 %&gt;% \n  filter(is.na(ST004D01T)) %&gt;%\n  select(CNT)"
  },
  {
    "objectID": "chapters/02-3-Intro_to_analysis_software.html#questions-2",
    "href": "chapters/02-3-Intro_to_analysis_software.html#questions-2",
    "title": "Piping and dplyr",
    "section": "\n4.1 Questions",
    "text": "4.1 Questions\n\n\nSpot the three errors with the following summarise statement\n\n\nPISA_2018 %&gt;% \n  group(CNT)\n  summarise(num_stus = n)\n\n\nanswerPISA_2018 %&gt;% \n  group_by(CNT) %&gt;% #1 group_by NOT group #2 missing pipe %&gt;%\n  summarise(num_stus = n()) #3 = n() not = n\n\n\n\nWrite a group_by and summarise statement to work out the mean and median cultural capital value ESCS for each student by country CNT\n\n\n\nanswerPISA_2018 %&gt;%\n  group_by(CNT) %&gt;%\n  summarise(escs_mean = mean(ESCS, na.rm=TRUE),\n            escs_median = median(ESCS, na.rm=TRUE))\n\n\n\nUsing summarise work out, Yes or No, by country CNT and gender ST004D01T, whether students “reduce the energy I use at home […] to protect the environment.” ST222Q01HA. Filter out any NA values on ST222Q01HA:\n\n\nanswerPISA_2018 %&gt;% \n  filter(!is.na(ST222Q01HA)) %&gt;%\n  group_by(CNT, ST004D01T, ST222Q01HA) %&gt;% \n  summarise(n=n())"
  },
  {
    "objectID": "chapters/02-3-Intro_to_analysis_software.html#sec-ifelse",
    "href": "chapters/02-3-Intro_to_analysis_software.html#sec-ifelse",
    "title": "Piping and dplyr",
    "section": "\n8.1 Recoding data (ifelse)",
    "text": "8.1 Recoding data (ifelse)\nOften we want to plot values in groupings that don’t yet exist, for example might want to give all schools over a certain size a different colour from others schools, or flag up students who have a different home language to the language that is being taught in school. To do this we need to look at how we can recode values. A common way to recode values is through an ifelse statement:\n\nifelse(&lt;statement(s)&gt;, &lt;value_if_true&gt;, &lt;value_if_false&gt;)\n\nifelse allows us to recode the data. In the example below, we are going to add a new column to the PISA_2018 dataset (using mutate) noting whether a student got a higher grade in their Maths PV1MATH or Reading PV1READ tests. if PV1MATH is bigger then PV1READ, the maths_better is TRUE, else maths_better is FALSE, or in dplyr format:\n\nmaths_data &lt;- PISA_2018 %&gt;%\n  mutate(maths_better = \n           ifelse(PV1MATH &gt; PV1READ,\n                  TRUE, \n                  FALSE)) %&gt;%\n  select(CNT, ST004D01T, maths_better, PV1MATH, PV1READ)\n\nprint(maths_data)\n\n# A tibble: 612,004 × 5\n   CNT     ST004D01T maths_better PV1MATH PV1READ\n   &lt;fct&gt;   &lt;fct&gt;     &lt;lgl&gt;          &lt;dbl&gt;   &lt;dbl&gt;\n 1 Albania Male      TRUE            490.    376.\n 2 Albania Male      TRUE            462.    434.\n 3 Albania Female    TRUE            407.    359.\n 4 Albania Male      TRUE            483.    425.\n 5 Albania Male      TRUE            460.    306.\n 6 Albania Female    TRUE            367.    352.\n 7 Albania Female    FALSE           411.    413.\n 8 Albania Male      TRUE            441.    271.\n 9 Albania Female    TRUE            506.    373.\n10 Albania Female    FALSE           412.    412.\n# ℹ 611,994 more rows\n\n\nWe now take this new dataset maths_data and look at whether the difference between relative performance in maths and reading is the same for girls and boys:\n\nmaths_data %&gt;% \n  filter(!is.na(ST004D01T), !is.na(maths_better)) %&gt;%\n  group_by(ST004D01T, maths_better) %&gt;%\n  summarise(n = n()) \n\n# A tibble: 4 × 3\n# Groups:   ST004D01T [2]\n  ST004D01T maths_better      n\n  &lt;fct&gt;     &lt;lgl&gt;         &lt;int&gt;\n1 Female    FALSE        176021\n2 Female    TRUE         126157\n3 Male      FALSE        110269\n4 Male      TRUE         194178\n\n\n\nAdjust the code above to work out the percentages of Males and Females ST004D01T in each group. Check to see if the pattern also exists between science PV1SCIE and reading PV1READ:\n\nadding percentage columnPISA_2018 %&gt;%\n  mutate(maths_better = \n           ifelse(PV1MATH &gt; PV1READ,\n                  TRUE, \n                  FALSE)) %&gt;%\n  select(CNT, ST004D01T, maths_better, PV1MATH, PV1READ) %&gt;% \n  filter(!is.na(ST004D01T), !is.na(maths_better)) %&gt;%\n  group_by(ST004D01T) %&gt;%\n  mutate(students_n = n()) %&gt;%\n  group_by(ST004D01T, maths_better) %&gt;%\n  summarise(n = n(),\n            per = n/unique(students_n))\n\n\n\ncomparing science and readingPISA_2018 %&gt;%\n  mutate(sci_better = \n           ifelse(PV1SCIE &gt; PV1READ,\n                  TRUE, \n                  FALSE)) %&gt;%\n  select(CNT, ST004D01T, sci_better, PV1SCIE, PV1READ) %&gt;% \n  filter(!is.na(ST004D01T), !is.na(sci_better)) %&gt;%\n  group_by(ST004D01T) %&gt;%\n  mutate(students_n = n()) %&gt;%\n  group_by(ST004D01T, sci_better) %&gt;%\n  summarise(n = n(),\n            per = n/unique(students_n))\n\n\n\ncomparing science and mathsPISA_2018 %&gt;%\n  mutate(sci_better = \n           ifelse(PV1SCIE &gt; PV1MATH,\n                  TRUE, \n                  FALSE)) %&gt;%\n  select(CNT, ST004D01T, sci_better, PV1SCIE, PV1MATH) %&gt;% \n  filter(!is.na(ST004D01T), !is.na(sci_better)) %&gt;%\n  group_by(ST004D01T) %&gt;%\n  mutate(students_n = n()) %&gt;%\n  group_by(ST004D01T, sci_better) %&gt;%\n  summarise(n = n(),\n            per = n/unique(students_n))\n\n\n\nifelse statements can get a little complicated when using factors (see: Section 8.2). Take this example. Let’s flag students who have a different home language LANGN to the language that is being used in the PISA assessment tool LANGTEST_QQQ. We make an assumption here that the assessment tool will be the language used at school, so these students will be learning in a different language to their mother tongue. if LANGN equals LANGTEST_QQQ, the lang_diff is FALSE, else lang_diff is TRUE, this raises an error:\n\nlang_data &lt;- PISA_2018 %&gt;%\n  mutate(lang_diff = \n           ifelse(LANGN == LANGTEST_QQQ,\n                  FALSE, \n                  TRUE)) %&gt;%\n  select(CNT, lang_diff, LANGTEST_QQQ, LANGN)\n\nError in `mutate()`:\nℹ In argument: `lang_diff = ifelse(LANGN == LANGTEST_QQQ, FALSE, TRUE)`.\nCaused by error in `Ops.factor()`:\n! level sets of factors are different\n\n\nThe levels in each field are different, i.e. the range of home languages is larger than the range of test languages. To fix this, all we need to do is cast the factors LANGN and LANGTEST_QQQ as characters using as.character(&lt;field&gt;). This will then allow the comparison of the text stored in each row:\n\nlang_data &lt;- PISA_2018 %&gt;%\n  mutate(lang_diff = \n           ifelse(as.character(LANGN) == as.character(LANGTEST_QQQ),\n                  FALSE, \n                  TRUE)) %&gt;%\n  select(CNT, lang_diff, LANGTEST_QQQ, LANGN)\n\nprint(lang_data)\n\n# A tibble: 612,004 × 4\n   CNT     lang_diff LANGTEST_QQQ LANGN                 \n   &lt;fct&gt;   &lt;lgl&gt;     &lt;fct&gt;        &lt;fct&gt;                 \n 1 Albania TRUE      Albanian     Another language (ALB)\n 2 Albania FALSE     Albanian     Albanian              \n 3 Albania FALSE     Albanian     Albanian              \n 4 Albania FALSE     Albanian     Albanian              \n 5 Albania FALSE     Albanian     Albanian              \n 6 Albania FALSE     Albanian     Albanian              \n 7 Albania NA        &lt;NA&gt;         Missing               \n 8 Albania FALSE     Albanian     Albanian              \n 9 Albania FALSE     Albanian     Albanian              \n10 Albania NA        &lt;NA&gt;         Missing               \n# ℹ 611,994 more rows\n\n\nWe can now look at this dataset to get an idea of which countries have the largest percentage of students learning in a language other than their mother tongue:\n\nlang_data_diff &lt;- lang_data %&gt;% \n  group_by(CNT) %&gt;%\n  mutate(student_n = n()) %&gt;%\n  group_by(CNT, lang_diff) %&gt;%\n  summarise(n = n(),\n            percentage = 100*(n / max(student_n))) %&gt;%\n    filter(!is.na(lang_diff),\n         lang_diff == TRUE)\n\nprint(lang_data_diff)\n\n# A tibble: 80 × 4\n# Groups:   CNT [80]\n   CNT                    lang_diff     n percentage\n   &lt;fct&gt;                  &lt;lgl&gt;     &lt;int&gt;      &lt;dbl&gt;\n 1 Albania                TRUE        284       4.47\n 2 United Arab Emirates   TRUE       8195      42.5 \n 3 Argentina              TRUE        651       5.44\n 4 Australia              TRUE       2238      15.7 \n 5 Austria                TRUE       1329      19.5 \n 6 Belgium                TRUE       2458      29.0 \n 7 Bulgaria               TRUE        747      14.1 \n 8 Bosnia and Herzegovina TRUE        526       8.12\n 9 Belarus                TRUE        248       4.27\n10 Brazil                 TRUE        297       2.78\n# ℹ 70 more rows\n\n\nThis looks like a promising dataset, but there are some strange results:\n\nlang_data_diff %&gt;% filter(percentage &gt; 92)\n\n# A tibble: 9 × 4\n# Groups:   CNT [9]\n  CNT             lang_diff     n percentage\n  &lt;fct&gt;           &lt;lgl&gt;     &lt;int&gt;      &lt;dbl&gt;\n1 Hong Kong       TRUE       5880       97.4\n2 Lebanon         TRUE       5339       95.1\n3 Macao           TRUE       3683       97.6\n4 Montenegro      TRUE       6411       96.2\n5 Norway          TRUE       5813      100  \n6 Philippines     TRUE       6823       94.3\n7 B-S-J-Z (China) TRUE      12049       99.9\n8 Singapore       TRUE       6666       99.9\n9 Ukraine         TRUE       5597       93.3\n\n\nExploring data for Ukraine, we can see that a different spelling has been used in each field, Ukrainian and Ukranain.\n\nlang_data %&gt;% filter(CNT == \"Ukraine\")\n\n# A tibble: 5,998 × 4\n   CNT     lang_diff LANGTEST_QQQ LANGN    \n   &lt;fct&gt;   &lt;lgl&gt;     &lt;fct&gt;        &lt;fct&gt;    \n 1 Ukraine TRUE      Ukranian     Ukrainian\n 2 Ukraine TRUE      Ukranian     Ukrainian\n 3 Ukraine TRUE      Ukranian     Ukrainian\n 4 Ukraine TRUE      Ukranian     Russian  \n 5 Ukraine TRUE      Ukranian     Ukrainian\n 6 Ukraine TRUE      Ukranian     Russian  \n 7 Ukraine TRUE      Ukranian     Ukrainian\n 8 Ukraine TRUE      Ukranian     Ukrainian\n 9 Ukraine TRUE      Ukranian     Russian  \n10 Ukraine TRUE      Ukranian     Ukrainian\n# ℹ 5,988 more rows\n\n\nifelse can help here too. If we pick the spelling we want to stick to, we can recode fields to match:\n\nlang_data %&gt;% \n  mutate(LANGTEST_QQQ = \n           ifelse(as.character(LANGTEST_QQQ) == \"Ukranian\",\n                 \"Ukrainian\",\n                 as.character(LANGTEST_QQQ))) %&gt;%\n  filter(CNT == \"Ukraine\")\n\n# A tibble: 5,998 × 4\n   CNT     lang_diff LANGTEST_QQQ LANGN    \n   &lt;fct&gt;   &lt;lgl&gt;     &lt;chr&gt;        &lt;fct&gt;    \n 1 Ukraine TRUE      Ukrainian    Ukrainian\n 2 Ukraine TRUE      Ukrainian    Ukrainian\n 3 Ukraine TRUE      Ukrainian    Ukrainian\n 4 Ukraine TRUE      Ukrainian    Russian  \n 5 Ukraine TRUE      Ukrainian    Ukrainian\n 6 Ukraine TRUE      Ukrainian    Russian  \n 7 Ukraine TRUE      Ukrainian    Ukrainian\n 8 Ukraine TRUE      Ukrainian    Ukrainian\n 9 Ukraine TRUE      Ukrainian    Russian  \n10 Ukraine TRUE      Ukrainian    Ukrainian\n# ℹ 5,988 more rows\n\n\nUnfortunately, if you explore this dataset a little further, the language fields are don’t conform well with each other and a lot more work with ifelse will be needed before you could put together any full analysis around students who speak different langages at home and at school.\n\n\n\n\n\n\nTip\n\n\n\nIt’s possible to nest our ifelse statements, by writing another ifelse where you would have the &lt;value_if_false&gt;, for example we might want to give describe the type of school in England:\n\nplot_data &lt;- schools %&gt;% \n  mutate(sch_type = \n           ifelse(EstablishmentGroup == \"Special schools\", \"Special\",\n                  ifelse(EstablishmentGroup == \"Independent schools\", \"Independent\",\n                         ifelse(AdmissionsPolicy==\"Selective\", \n                                \"Grammar\", \"Comprehensive\"))))"
  },
  {
    "objectID": "chapters/02-3-Intro_to_analysis_software.html#sec-factors",
    "href": "chapters/02-3-Intro_to_analysis_software.html#sec-factors",
    "title": "Piping and dplyr",
    "section": "\n8.2 Factors and statistical data types",
    "text": "8.2 Factors and statistical data types\nThe types of variable will heavily influence what statistical analysis you can perform. R is there to help by assigning datatypes to each field. We have different sorts of data that can be stored:\n\n\n\nCategorical - data that can be divided into groups or categories\n\n\nNominal - categorical data where the order isn’t important, e.g. gender, or colours\n\nOrdinal - categorical data that may have order or ranking, e.g. exam grades (A, B, C, D) or lickert scales (strongly agree, agree, disgaree, strongly disagree)\n\n\n\nNumeric - data that consists of numbers\n\n\nContinuous - numeric data that can take any value within a given range, e.g. height (178cm, 134.54cm)\n\nDiscrete - numeric data that can take only certain values within a range, e.g. number of children in a family (0,1,2,3,4,5)\n\n\n\nBut here we are going to look at how R handles factors. Factors have two parts, levels and codes. levels are what you see when you view a table column, codes are an underlying order to the data. Factors allow you to store data that has a known set of values taht you might want to display in an order other than alphabetical. For example, if we look at the month field ST003D02T using the levels(&lt;field&gt;) command:\n\nlevels(PISA_2018$ST003D02T)\n\n [1] \"January\"        \"February\"       \"March\"          \"April\"         \n [5] \"May\"            \"June\"           \"July\"           \"August\"        \n [9] \"September\"      \"October\"        \"November\"       \"December\"      \n[13] \"Valid Skip\"     \"Not Applicable\" \"Invalid\"        \"No Response\"   \n\n\nWe can see that the months of the year are there along with other possible levels. With this particular dataset, we have set all other levels as NA.\nCodes are the underlying numbers/order for each level, in this case 1 = January, 2 = February, etc.\n\nas.numeric(PISA_2018$ST003D02T)\n\n    [1]  2  7  4  4  3  2  7  8  3  7 12  1 12  6  3 12  3  6  8 12  7  8  8  9\n   [25] 10 11  6  4  9  4  1  2  9  5 12  5  1  2 10  9  2 10 10  7 10 12 10 11\n   [49]  6 10 10  8  9  2 10  4  5  7  6  1 10  8  9  4  3  1  7  1  6  4  5  1\n   [73]  3  5 10  3  2  9  3  3  2  7  1  6  5  3  4  4  5  1  6  3  4  9 10  4\n   [97]  2  4  1  3  4  7  6  2  6  1  8  1  3  4  2  7  2  7  3  8  9 12  5  9\n  [121] 11  4  5  6 11  6 12  5 11  5 12 12 11 10 12 12 11 10 12 10 10 10 10 11\n  [145] 11  6  1 12 10 12  5  9  9 11  3  7  4  6  1  3  6 11  4  1  2 10  9 10\n  [169]  2  7  7  8  5  5  1  5  2  9  3 11 10  4  9  1  9  3  3  3  5  9  7  5\n  [193]  9  3  9 10 12 12 11 11 12  6  4  8  9  2  8  6  9  8  5  6  6  9  7  7\n  [217]  3  7 12  1  1  1 11 10 11 12 11 10 11 11  9 12 12 12 12  6  1  1 12 11\n  [241]  6 10  6 12  9 11 12 10 11  5 10 11 12 11 12 10 11 12 11  8 12  9 12 10\n  [265]  8 10  3 10  8  6  8  1  8 11  8 11 10  7 10 10 10 11 11  6 12 10 10  8\n  [289] 10  7 12 12 12  8 12 11  6  8  1  4  4  1  3  6  9  8  2  1  7  2  2  4\n  [313]  4  6  7  1  2  5  2  5  2  2  6  9  5  8  2  3  4  4 10  2  4  3  5  4\n  [337]  8  9 12  5  3  8  1  1 10  5  1  1  7  6  6  5  2 12  5  4  8  6  4  7\n  [361]  1  8  9  1  2 10  8  3 12  3  4  2  1  9  4  8  2  1  8 12  8  5  6  5\n  [385]  4 10  4  6  3  3  9  1  8 12  1  2  7 11  1  2  6  7  5  8  8  4 11 10\n  [409]  7  9  5  3  7  6  4  3 10  2  2  8  4  2 11 10  8  9  5 12 10  7  9  8\n  [433] 11 12 10 11 11 11  8  9  8 10  9 11 10 12  9 10  2  9  5  7 11 10 12 10\n  [457] 12  7 11 10 10  1 11 12 12 12  2  8  9 11  4  3  1  2  6  4  4  2  3  4\n  [481]  3  4  1  5  8  9  1  9  4  6  5  2  6  6  9  4  7  3  3 11  7  5  8  1\n  [505]  2  7  5  9  4  8  1 10 10 10  4 12 12  9  8  9 11 10 10  7  3  4 10 11\n  [529] 11 11 10 12 12  7 12 12 11 11  1  1  3  3  5  7  2  7  5  1  9  6  5  6\n  [553]  6  8 10  1  2  8  3  7  8 10  9  5 11 10  5  1  2 10  4  9  6  4 12  5\n  [577]  7 11 12  9 10 12 12  8  2 11 11 12  7 11 11 12 10 12  2 11 10 11  5 11\n  [601]  9 12 10 12  9 12 12  2  5  3 12  3  4  2  7  2  1  9  6 10  4 12  7  4\n  [625]  8  9  4 11  3  9 12  5 10  7 10  5 12 10 12 12 12 10 10 10 12 11  9  6\n  [649]  9 10  3  4  9  5  5  3  6  9  3  9  8 12 11  5  6  2  6  9 12  8  5 11\n  [673]  8 10  9 12 12  5 11 12 10 11 11  9 10  7  7  2 11  6  8  4 12 10  8  4\n  [697]  1  4  6  5  4  2  3  6  6  1 12  4  1  3  5  8  4  7  9 10  6  6  2  8\n  [721]  2  5  1  7  1  1  3  6  2  1  1  2  5  1  5  6  4  4  4  2  7  2  2  6\n  [745]  6  6  3 10  5  9  1  3  2  3  5  7  1  4  6  8  5  3  2  3  6  3 10  6\n  [769]  8  7  4  8  4  4  5  5  6  2 10  9  3  5  9  1  2  1  8  4 11  1  2  6\n  [793]  3  9  6  8 10  6 11  5  4  2  2  6  3  1  7 11 12 10 11 12  4  3 10  7\n  [817]  8  7  2  7  4  4  6  3 10 10  3  7  4  4  9  8  7  6 11 10  8  8  6  8\n  [841]  8  2  1  4 12  4  2  9 10  3  5  8  4  7  7  4  2  7  5  8  9  3  4  6\n  [865] 12  2  8  8  2  1  1 11  1  1  4  3 12  9 12  1 11 12 12 12 10 11  3 12\n  [889] 11  5 11  9  3 12 12 11  4 11 12 11  9 10 12  6  4  4  9  4  1  9  5  5\n  [913]  9  5  2  3  6  9  7  4  4  3  1  4  2  3 11 12  6  9 12  5 12  7 10  3\n  [937]  3  7  3  1  9  1  2  2  3  2  4  3  3  1  3 12  5  6  2  2  1  4  6  4\n  [961]  2  9  4  6  7  6  8  3  4  4  1  3 10  4  3  5  9  6  2  4  5  7  3  1\n  [985]  7  8  2  8  2  2  9 11 11 10  8  2  3  3  5  4 11  2  7  4 11  3  3  6\n [1009]  1  8  2  1  3  1  1  6  4  9  8 10  4  3  6 11 11  4  9 11 11 10 10  5\n [1033] 10  3 10  9 11 11 10 11  4 12  1  7  3  4 10 10  9  1  7  7 11  2  4  8\n [1057]  4  4  7 10  4  6  3  9  3  8  5  1  6  2  9  1  6  6  8  7  7 11  3 12\n [1081]  8  5  8  1  3  1  2  3  7  4  1  2  5  3  9  1  4  6  5  7  4  3  4 10\n [1105]  1  8  8  7  5  1  1  9  5  6  3 10  6  6  2 11 12  9 10 12 12  8 11  8\n [1129]  9  7  9  2  2  1  4  7  4  5  8  5  3  5  6 11  3  8  5  5  5  4  6  5\n [1153] 12  2  7  6  5  4  8  9  9  1  2  9  7  6  4  4  4  9  3  6  1  2  1 10\n [1177]  2  4  3  9  3  9  7  7  1  8  1  1  1  7  6  9  7  8 10 11  2  4  9  3\n [1201]  9  6  5  4  3 10 11 12 11 10 11 10 11 11  9  9 11  4 12  7  9 12  2 12\n [1225] 11 12 11  7  9 12 12 10 11  5  9 11 11  9  8 10 11 11  5 12  8  8  4 12\n [1249]  7  5  6  5 12  6  6  8 12 11 10  1  5  9  2 12  5  9  3 12  6  3  5  1\n [1273]  8  3  2  7  3  6  7  4  8  1  1  5  5  9  4 12  2  6  1  9  5 10  4  3\n [1297]  9  5  4  5  5  3  4  6  7  5  4  3  5 10  8  7  8  4  9  2  7  2  4  5\n [1321]  6  6  3  6  5  1  5  1 11  5  7  3  1  2  8  2  1  7 12 12 10  6 12 10\n [1345] 12  9 12  9  9  8  9  9 11  5 10 10 10  6 12  8 10 12 12  3  8  9 12 12\n [1369] 12  2  3 10 11 12 12 10 12 12  9 10  2 12  7  6  1  5  4  8  4  1  2 10\n [1393]  5  7  6  1  4  1  8  8  3  2  7  2  1  4  8  2  8  6  5  3  1  2  3  3\n [1417]  1  7  3  6  9  1 10  5  2  4  1  6  3  4 10  1  4  5  1  4 10  5 10  6\n [1441] 10 10  7 12  1  9  6  7  9  8 11 12 12 11  3 12  8  4 11  7  5 11 10  2\n [1465]  9  9 10 12 12  9 12  2 12  6 11  6 10  7  3 10 10  6  7  9  5  6  7  3\n [1489]  7  5  6  1  1 10  9  7  9 10  2  1 10  1 10  3  2  2  8  5  8  3  7  3\n [1513]  1  1 11  1 10 11 10  9  2  9 12 11 10 10 11 10 12 10  9 12  9 10 12 10\n [1537] 12 12 12 11 12 11 12  8  6 10 11  9 11 12  2 11  3 10  9  7  6  1  2  5\n [1561]  4  2  7  1  9  8  8  3  9  5  5  1  4  8  4  4  6  6  1  6  5  3  1  5\n [1585]  2  9  5  3  7  3  7 10 10  9  5  7 10  8  4 10 12  6 11 11 10  9 11  9\n [1609]  9 10 12  6  9 10 11 10 11 10 12 11 11 10 12  2  6  1  9  3  5  7 11  1\n [1633]  4  9  9  6  9 11  1 12  2  8  4 12  3  5  7  6 10  4  3  8 12  5  1  3\n [1657]  8  2  2  6  7  1  1  7  4  3  4  5  8  5  6  3  7  9  8  2  7  6 10  9\n [1681]  4  3  3  5  4 12  2  6  4  3  9  2  4  1  5  8 12  7  2  4  6  6  5  5\n [1705]  1  3  3  6  3  2  5 10  9  9 10 10  7  6 12 10  2  8  5  8 10  7  9 10\n [1729] 10 10  2  8  9  5  8  7  6  9  6  7  5  2  6  8  2  6  3  2  4  9  6  6\n [1753]  6  5  4  4  1  1  2  1  5  7  2  5  8  5  9  7  4  9  1  1  2 12  3  8\n [1777]  5  5  7  3  8  3  8  1  5  3  8  1  2  7 11  9  1  6  9  4  2  8  4  1\n [1801]  8  3  3  1 12  7  5  5  3  9  7  3  3  1  7  5  4  7 10  3  6  6  4  7\n [1825]  7  3  4  2  1  2  3  8  6  3  8  2  1  5  7  4  7  4  8 10  8  6  4  9\n [1849]  2  2  6  5  9  8  2  5  4  8  3  7  6  8 12  6  2  7  5  8  7  5  8  3\n [1873]  3  3  5  1 10  3  5  2  1 10  3  9  2  7  2  5  8  5  7  7  1  2  1  3\n [1897]  2  5  7  5  4  4  2  9 10  1  9  5  3  8  5  2  7  6  9  6  7  8  6  7\n [1921] 10  4  2 11  5  7  7  4  5  4  9  3  4  5  1  6  3  1  5  1  3  7  4  2\n [1945]  1  5  7 10 11 12 11  4 11  7  2  5 10  5  4  5  5  1  4 12  6  2  4  6\n [1969]  2  7  1  5  7  6 11  4  3  5  5  3  3  3  7  4  3  8  4  7  5  2 11  9\n [1993]  1  1 11  9 12 11  9 10 12 12 12  9 11 11 10 10  7 11  9 11  6  8 11 11\n [2017]  6  9  6 10  2 11  8 12 11 10  5  7 11  9 12 10 12 10  8 11  8 10 12 10\n [2041] 11 11 10  9 11  8 10 10 12 11 11  9  8  7 12 10 11  6 11  9 11  9  9  5\n [2065] 11  1 11 12 12 11  8 12 12 10  9  5  6 10 11 11 11 11 10  9 12  2  8  9\n [2089]  8  2  3  2  7  1  6  8  6  9  1  4  6  3  4  3  6  2  5  3 11  4  1 11\n [2113]  9  9  9  1 10  6  7  6  7 10  3  1  6 10  6 12  9  9 10  9  5 11 10  1\n [2137] 12  4 10 10 11  4 11  9 12 12  1  9 10 10  5  7 12 10 11 11  6 10 10 10\n [2161] 11 10  8  9 12  5  7  4 10  8 11 12  2 10  9 12  8  3 10 11 11  8  9  9\n [2185]  2 10  9  7 10  3 10 12 12  8  9 10 10  3 10 11 11  9 10 10  8 12 10 12\n [2209] 11 10  9  4  7 12 11  4 12  7 12  7  9 11  6 12 12 11  9  1 12 10 10  8\n [2233] 11  7  9 10  1  8  1  6  5  3  9  2  9  2  1  2 10 10 10  5 10  9  1 12\n [2257]  5  7  5 10  5  7  4  3  4  9  1 10 11 12 10 11 11 11 10 10 11  4  1 12\n [2281] 11 11 10 11 12 10 12  5 11  7 11 10 10 11  9 11 10 11 10  9 10  9 11 10\n [2305] 12  8  3  8 11 10 11  5  5 12 12  4  8  3  2 12  6  4  7  5 12  9 10  1\n [2329]  1  6  8 12  6  4 12  4  2  7  6  5  9  1  8  3 10  1  1  2  4 11 12  6\n [2353]  6  7  9 12  7  7  6  1 10  1  1 11  1  8  1  2  4  6 10  8  6  6  1 10\n [2377]  5  6  3  7  7  3 10  3 10  2  1  9  3 12 10  5  3  3  7  7 10  3  3 10\n [2401]  6  9  5  2  4  3 10  4  4 11  3 11 10  4  3  8  2  4  8  2 11 12  9 11\n [2425] 10 10  6 10  5 12  9 10 12 10 10 12 11 10 12 12 12 12  5 11 12 10 11 12\n [2449] 10 11  2  9 11  8 12  9  9 12 11  7 12 11  9 10 12 11 11 12 12 12 11 12\n [2473] 11 12 11  4 10  9  6 10 11  3  8  5  3  4  6  2  5 10 10  1  5  5  3  8\n [2497] 12 12 10  7  9 10 11  1 11  9  2  5  4 11  5 12  9  6 11 11  7  3  9 11\n [2521]  3  8  8 10  1  6  7  1 11  9  8  2  9  3  7  4  5  3  3  4  2  4  6  1\n [2545]  4  8  7  7  5  9  1  2  3  7  8 10  2  9  7  5  1  1  1  1  8  7  2  1\n [2569]  2  5  8  9  2  5  4  3  2  2  5 12  1  6  3  4  3 11  8  6  2  5  4  9\n [2593]  3  5  8  1  5  7 12  2 11  9  3  5 11 12 10  1 12  7 11 12 11 10 10 12\n [2617] 10 10 10  8  9  7  7 10 10  7  9 10  9 11  9 12  7 10 12 12 11  1  9 10\n [2641]  1 10 11  9 10  4 11  9 12  9  5  4  2  3  9  2  5  8  6  1  7  2  4  2\n [2665]  3  8  5  3  4  1  6  2  1  2  4  2  1  1  8  7  8  4  1  7  4  4  2  1\n [2689]  7  1  3  1  8  2  6  2  2 10  5  6  3  8  5  8  1  9  2  2  2  4 10  3\n [2713]  5 12  6  1  3  9  5  1  6  2  1 12  3  2  5  9  4  3  3  5 11  3  5  8\n [2737]  6  2  5  4  1  6 10  7  7  6  3  6  8  7  6  5  3  2  1  1  1  3  4  7\n [2761]  2  9 10 12 12  8 10  4  8  3 11  8  2  1  7  1  4  8 11  5  4  5  3  1\n [2785]  7  2  3  9  9  3  5  6  7  2  3  6  6  1  4  8  7  4  1  5  6  5  8  9\n [2809]  4  8  3  1  7 10 12 12  4  5  9  9  2  6  3 10  2  9  7  8 10  6 12 12\n [2833] 10 10 12 11  9 11  2  7  6  1  1  3  9  5 12  7  8  3  3 11 10  3  8  8\n [2857] 12 12  2  4  4  1  1 11  9  9  2  7 10  9 11  3  8  7 10  6  6 11 10 12\n [2881] 12  8 12  7 11 11 11  2 11 10 10 11 11 10  9 10 12 11 12  3  9 10  9 10\n [2905]  2 10 12 12 12 12  3  1  9 11 11 10 11 12 11  9  5  8  4  6  2  3  6 11\n [2929]  2  5  1  1  1  4 10  7 11  1 11  9 10 11  8 10 12  2  9 12 10  3  5  3\n [2953]  5  9  7  9  5  8  5  4  3  1  4  6  3  2  8 11 11 11 10 10 11 10  9  2\n [2977]  9 12  3  9  2 12  9  3  2  2 10  1  4  2  6  5 12  3  1 12  9  2 11  1\n [3001]  6  3  8  6  6 11  5  9 11  9  8  1  7  6  7  8 10  4  3  4 10  7 10  6\n [3025] 11  3  7 10 11  9  8  7  8  9  8 10 11 10  3  1  9 11  8  3  4  8 11 12\n [3049] 12  5 11  5  7  4 11  6  3  8  1  4  9 11  3  3  4  6  1 12  7  7  3  1\n [3073]  2  3 11  6 12 11 12  7 12 12 11 10 12 12  8 12 10 12 12 12 12 10 11 11\n [3097] 10  9 11  7  6  3  7  7  5  6  3  3  5  1  4  7  8  1  1  8  2 12  6  2\n [3121]  8  3  6  8  3  2  4 12  6  1  9  2  8  5  5  2  6  8  4  1  2  2 11  6\n [3145]  9  4  7  9  1  3  6  2  3  4  5  7  2  8  6  2  9  6  3  4  1  6  4  6\n [3169]  3  3  8  7 12  3  4 12  7  5  2  4  7  8  3  7 12  8  3 12  7  6 10  2\n [3193]  6  6 10  2  5  2  6  9  8  1  7  4  2  5  1  7  1  5  1  8  8  3  5  4\n [3217]  6  1 11  4  1  3  4  6  1  6  3 10  9  6  3  4  1  3  1  1  1  4  3  7\n [3241]  4  6  3  5  2  2  5  7 11  4  4  2  2  7 10  6  2  5  1  8  6  3  5  5\n [3265]  7  1  2 10  9  2  1  8  6  4  2  5  6  1  7  3  9  2  1  9  4  8  7 11\n [3289]  3  3  6  5  3  5  8  7  2  5  2  7  5 11  3  1  6  7  4  6  2  8  2  9\n [3313]  3  3  1  8  6  9  5  2  8  2  2  8  9  2  1  8  6  4  3  5  1  1  5  8\n [3337]  7 11  4  7  6  6  3  5  4 10  5  5  5 12  9  9  6 10 12  6 11 12 12 12\n [3361] 12 10  9 11 10 12 12 11  6  7  8 12 11 11  9  2  6 12  2 10 12  8  2  4\n [3385] 10 12 12 10 11  2 11  4  8 12 12 10 12 10 10 11  9 12  8 11 10  5 11  9\n [3409] 11 10 10 10 11 10 11 10  7 10 12 10 11 12  9  1  9 10  1 12  9  8 10 10\n [3433]  8  8 10 12 11  1 11  9 11 12 11  4 12 11  9  1  8  6  8  3  1  1  5  5\n [3457]  3  1 10  6  3  3  8  9  3  5  4  5  4  5  2  6  7  6  3  1  5  2  1  5\n [3481]  9  6  9  8  1  6  6  1 11  8  8  6  3  2  2 11  4 12  7  7  8  9  7  5\n [3505] 10  9 10  6  2  7  2 11 12 11  1  1  1 12 10  4  1  9 12 12  3  7  3  9\n [3529]  5  3  5  4  1  8  2 10  3 11  9  5  1  4  1  2  9  3 10 10 11 12 11 12\n [3553]  7  9  3  1  5  2  4  7  9  2  5  6  9  7  5  4  5  5  4  7 12  2  1  7\n [3577]  3  9  4  6  4 10  6 11  6  4  8  3  1  6  3  3  1  8  2  3  6  7  5  5\n [3601]  8  8  1  5  8  2  7  8  4  9  4  3 10 12  6  3 12  5  8 10 11  3 10 11\n [3625]  9  6 11 10 11 10  2 12 11  5  9 10 11  2  8  7  7 12  1  2  7  9  7  6\n [3649]  3  6  8  2  3  2  4  9  6  2  6  6  6  4  1  3  1  2 11  1  6  6  4  8\n [3673]  8  4  1 12  6  4 12 10 12  5  6  9  1  5  1  3  4  1  7  3  2  4 10  3\n [3697]  6  4  2  5 12  5  3  2  5  9 10  6  3  1  1  8  2  1  4  9  8  5  3  4\n [3721]  9  7  4  4 11  2  3  8  3 10  3  8  4 11  3  8  5  8 12 12 12 11  3 12\n [3745]  7  4 12  6  3  2  6  5  5  9  1 12  4  4  3  1  4  5 10  5  5  7  5  5\n [3769]  6  8  8  2  1  3  1  5  4  6  3  3  1  6  9 11  7  2  6  4  1  3  7  8\n [3793]  8  3 10  9  6  7 12 10 10  4 11  3  2  4  1  8  2  3  8  9  9  1  1 11\n [3817]  8  1  9  1  6  3  7  3  5 10 10 12  3  4  3  9  7  6  3  1  5  5  7  1\n [3841]  5  3  3  8  6  9 10 12 12 12 10  9  7  5 10  9 11 10 11 11 11 11 10  9\n [3865] 12  8  6  9  4 10 11 11  9  9 11  2 10 11  9 10 11  2  8  1  7 11  7  3\n [3889]  7  7  6  4  2  7  5  6  2  5  3  6  4  6  2  1  7  5  3  8  9  6  1  4\n [3913]  5  1  6 10  2  4  3  7  1  5  1 11  9 10 10 12  9 11 12 12  8 10 11 11\n [3937]  9 10  8 12 12 12 10  9  7 10 11  9 10  8  3  4  2  5  3  2  1  7  2  8\n [3961]  1  5  8  6  6 11  8  4  2  5  3  6  4  5  7  5  6  4  3  1 10  4  1  1\n [3985]  5  4  1  9  7  1  2 10  4  3 10  7  6  4  4  1  1  1  7  4  2  2  8  9\n [4009] 10  5  2  7  7 11  5  7  7  3  2  2  2  9  2  5  2  9  4  3  4  6  7  5\n [4033]  9  6  6  9  6  9  5  4  4 10 12 12  8 10 12 11  7 12 12  4  1 12  9 10\n [4057] 11  9  9  8 10  7 11 10  8 10  9  9 12 12  5  6  1  7  4  4  1  3  4  9\n [4081]  5  3  7  3  1  5  1  4  6  2  6  8  2  1  5  1  7  7  3  1  2  8 10  7\n [4105]  8  8  6  5  5  3  7 11 11  9  1 12 10 12  8  9  2  2  6  7  6  4  8  5\n [4129]  5 11  4 10 12 11 12 11 12 10  8  8 11 11 11  9  8  2  3  5  4  1  3  1\n [4153]  9  5  8  2  5  2 10  9  5  9  2  5  3  5  7  3  4  5 11  6  3  7  2  9\n [4177]  5 10  5  4  7  7  6  9  7  2  2  9  5  4  7  1  1 11  1  6  1  3  2  7\n [4201]  5  1  9 10 11  8  4  7  3  1  2  1  4 10  4  6 11  7 11  5 12 10  3  1\n [4225]  6  8  2  5  5  7  5  5  6  2  6  2  6  4  7 10  6  7 11  2  1  4  1  4\n [4249]  9  7  8  2  3  5 10  9  5  9  1  8  3  3  1  1 10 10 10  6  6  4 11  9\n [4273] 11 10 10  9  9  9  8  7 10  2 11  6 10 12  3  7  4  5  3  1  4  6  5  9\n [4297]  3 12  2  6  2  1  1  4  4  4  2  8  3  5  6  3  4 10  1  6  9  3  7  1\n [4321]  3  1  7  7  9  2  1  9  6  2  3  5  1  9  2  5  5  3  2  1  4  4  4 12\n [4345]  7  7  1  9 12  1  5  3  9  8  9  8  3  9  8  4  6  7 12 11  6 10 10 10\n [4369] 12 12 10 11 11  7 12  4 12 10  7  9 11  5 11 12 11 12 10 12 12 10  7 11\n [4393] 10 12  7  9 10  9  5  8 10  6  7  8  9  9  9 10 12 11 12 12  9 10  3 12\n [4417] 10 10 10 12 12 11  4  6  7  9  4  6  1  7  9 10 12 10 10 10  8  9 11  9\n [4441] 10 11  8 10  2 11 10  9 11 12 11  3  3  7  3 10 10  7  4 10  2  8  9  9\n [4465]  9 10  1  9  2  6  7  6  3  6  4  2  5  1  4  2  4  5  3  3  1  2  3  5\n [4489]  9  5  7 10 12  8  1  1  1  7 10  1  8  3  5  7  2  4  3  9 12 11  4 11\n [4513]  9  1 11 11 11 11 11 10 12  8 10  1 10 10  9  9 12 11 10  4  3 10 10  3\n [4537] 11 12 10 12  7 10 10 10 12 10  9 11 11  8  6 11  3  1  6  4 11  3 10 10\n [4561]  4  3 11 11 10  9  9  6  3 10  9 12 10 11 10  9 12 10 11  8  9  7 10  2\n [4585] 10  8 10  5  5 12 11 10 11 11 10 10 12 12 10  9 10 11  9 12 10 10  9  8\n [4609] 11 12  6 12  7 11 10 10 12  4 10  1  5  4  6  1  4  8  1  5  4  2  1  8\n [4633]  9  6  3  9  6  5  3  5  4  3  7  7  5  7  5  2  5  3  4  6  7  2  6  4\n [4657]  2  1  5  5  6  1  4 10  5 11  8  1  5  6  9  2  3  1  1  6  7  3  2  7\n [4681]  1  4  8  2  1  7  8  6  7  3  3  6  5  5  9  8  6  8  2 10  8  9 12 10\n [4705] 12  5 11  6 12 12  6 10 12  8  8  3 12  2  9  4  1  4  9  6  7  5 10  4\n [4729]  2  3  6  6  9  7  7  2  6  2  1  8  5  7  1 12  1 10  3  1  2  5  7  4\n [4753]  3 11  5  3  1 10 12 12 12  6 12  9 11 10  3  7  3 11  9 10  4  6 11  6\n [4777]  2  5  3 10  4 11  2 11 10  3  1  8  3  9  3  4  2  3  2  5 12  5  5  5\n [4801]  6  9  8  3  4  2  1  1  3  6  6  7  3  1  8  5  1  7  7  6  6 10 11 10\n [4825]  3  2  1  1  6  1  9  1  9  8  7 10  1  6  7  3  4  4 12  4  8  1  6  8\n [4849]  5 10  2  4  4  5  9  6  6  1  3  3 12 12 10 11 10  4 11  8 10  6  9 11\n [4873] 12 10  9 11 11 11  9 12 11 10  9  6 11 10 11 10 11 10 11 10 11 12 12 11\n [4897]  5 11  9 12 10 10 12  9 11  1 10 11 12 10  8  2  6  6  2  6  8  3  2 11\n [4921] 10  2 11 10  1  3  9  3  1  7  9  6  6  3 10  4  1  7  8  7 11  3  9  6\n [4945]  1  1  2 12  3  2  6  4  8 11  3  6  8  1  7  2  2 11  3  6  9  8  5  1\n [4969]  5  4  3  3  7  2  7  4  6  6  5  4  3  1  1  8  9  1  2  2  1  5  4  1\n [4993]  5  5  7  4  1  7  2  6  5  7 10  6  2  1  1 12  6  7  4  3  5  3  2  4\n [5017]  9  1  3 10  2  2  1  2  1  8  4  7  2  9  6  7 11  2  5  9  9 12 12 10\n [5041] 11 11  7  9  9 12 11 10  7  9  9 12  9 10 12  2 10 10 12  9 12  1  6  6\n [5065] 12  9 11  2  3  8  4  3  1  5  9  2  1  1  2  9  3  9 12  5  8  6 10  6\n [5089]  6  7  5 10  3  3  9  2  1  4  8  6  1  7  7  5  7  3  8  5  4  3  6  5\n [5113]  4  4 12  3  4  1 10  1  2  9  9  3 11  5  2 12 12 12 12 11 12  6 11 10\n [5137]  9 12  7  1 10 10  2 10 11 10 11  1 11  6  9 11 10  9 12  8  6 10 11 11\n [5161] 12 11 11 10  1 10 12 11  4  3 11  4  1 10  4  2  6 11 12  6 10 11  6  7\n [5185]  6 11  6  5 12  6 11  8 11  7  6 10  9  3  6 12 12  3  7 11  9  5  6  9\n [5209]  6 10 12 11 12  5  8  9  8 12 12  7  7 12 10  6  4  7 12 10  6 11  6  9\n [5233]  8 11 11 10  9  6  3  3 12  4  7 11  1  4  6  1 11  4  7  5  3 11  3 11\n [5257]  4  6  5  5  7 10  6  3  6  2 12  1  4 10  9 12  9 10 10  9 11 12  8  9\n [5281] 11 12 11  9 12 10 12 11 10  7 11  9 12 10 11 12 10  9  7 10 12 11 10 10\n [5305]  3 12  5  5  5 12  7  9  9 10  9  8  3  7  5  4  1  7  6  9  5  8  8  3\n [5329]  4  8  7 10  2  8  2  6  8  2  2  3  3  2  5  4  1  4  5  6  5  4  7  4\n [5353]  1  8  5  5  3  7  4  1  3  2  4 12  2  2  9  5  4  1  8  9  9  2  3  7\n [5377]  5  3  5 11  2  5  8  6  4  3  7  2  2  7  4 11  3  3  2  5  3  7  7  4\n [5401]  1  6  8  1  7  5  8  4  1  9  4  6 10  2  4  9  1  8 12 10 12 10 10 12\n [5425] 12 10 12 11 12 11 12 12 10 11 11  9  4  6  5 10  6 12 12  8 10 12 11  9\n [5449]  6  8 10  4  7  5  3  7  3  1  1  9  4  5  6  7  6  5 11  1  6  8  9  4\n [5473]  4  9  2  9  6  1  8 11  7  3 12  9  5 10 10 11  2 10 12 10 11 10  5 12\n [5497]  8 11 11 10 11  8  4  9  9 10 12  9 12 11 10 12  9  9 10 12 10  9  7 12\n [5521] 11  9  8 10 10 10  6 11 10  5  8  6  6  9  4  3  1  2  7  1  4  7  1  1\n [5545]  2  2  4  7  4  2  6  1  3  5  7  9  7  5  2  5  4  5  7  9  5  6  9  8\n [5569]  1 10  6  8  7 10  1  2  2  4  4  4  2  4  4  9  5  5  6  5  1  1  5  1\n [5593]  2  4  9  7  5  6  6  9 12  2 11  2  5  3  9  2  8  7  8  6  3  1  1  3\n [5617]  2  3  8  9 10  2  3  2  7  6 10  5  4  2  8  2  9  4  4  5  2  1  4  6\n [5641]  4  9  1  6  7  7 12 10  2  3  1  1  7  3 11  8  6 10  6  9  6  5  6  2\n [5665]  4  6  2  9  5  5 12  8  5 11  1  3  5  6  4  3  8 12  6  6  4 10  2  8\n [5689]  1 10  7  9  2  1  4  9 11  7  2  6  3  2  3  4  3  4  3  2  2  2 10  8\n [5713]  7  6  9  5  7  2  5 12  7 10  3  4  6  2  6  5  1  1 11  4  2  9  9  5\n [5737]  2  7 10  2  6  3  1  6  1  6  8  2  3  1 12  3  3  5  3  9 11  7  6  6\n [5761]  1 10  3  6  2  2  2  6  6  2 10  6  6 11  3  3  5 12  1  2  9 11 10  9\n [5785]  4  2  1  7  5 11  5 12  3  9  6  5  7  3  2  3  2  5  1 10  6  7  1  2\n [5809]  4  2 12  7  1  4  3  6  7  1  1  8 12 12  8  5 11  4 11 12  9 11  3 12\n [5833] 10  7  9 11 12  6 11  3  9 10 10  6  9 10  4 10 12 11  9 10  7  9 11 11\n [5857]  6 12 12 11  6 11  3  7  9 10  8  3 12  1  2  9 11 11  1 12 12 11 11 11\n [5881]  1 11  1  6  6  6  6 11 12  5  7  5 12 10  2 12 10  7  6  6  5  5  6  1\n [5905]  9  8  6  6  2  7  8  3  7  1  5  5  2  2  6  1  3  1 10  3 10  4 10 10\n [5929]  1  8  5 10  5  6  9  1  7  5 11  8 11  9 10  8 12 11 11  6  9 12  7 12\n [5953] 10 12 12  8 12 10 11 12 12  8 11  8  9  1  2  6 12  6  8  2  6 10  9  4\n [5977] 10  4  6  5  5  9  1  6  4  1 10  7  3  9  3  9  2  7 10  9  6 12 11  1\n [6001] 10  6 12  3  5  4  2  6  3  1  1  9  8  2  7  7 10  1  3  1  8  9  4  5\n [6025]  2  2  7  5  5  6 12  8  4  4  3  3  3  3  2  1  4  6  7  9  7 11  2  5\n [6049]  9  1  4  6  1  5  2  3  2  3  4  3  2  4  1  7  4  1  9  3  1  6 10  8\n [6073]  1  1 10  5  5  9  7  2  9  5  2  5 10  6  7  6  3 11  3  6 10  7  3  8\n [6097]  5  6  8  7  7  8  5  4  9  2  9 12 11 10 11 10  7  8  1  7  2  1  6  7\n [6121]  5 12  5  3  3  6  1  1  9  4  2  4  7  5  2  1 11  5 11 12 11  6  1 11\n [6145]  2  4  1  5  3  3  2 12 10  4 10 11 10 11  4 12 10  5  4  9  8  1  4  7\n [6169] 10  8  1 12 11  6  9  8  9 10 11  3  4  6  2 11  1  2  7  2  1  5  3  9\n [6193]  7  1  5  2  1  9 11  3 12  6 12  9 11 11 12  9  7 12  8 12 11 10 10 11\n [6217] 10 10 12 10  7 12 12  8  8  6  9 12  9 11 10 11  3 11 11 12  2 11  8 12\n [6241]  4 12 12  2  8 12  9 11 10 11  9 12  2 12  9  9 10 10  4  2  8  4  4 11\n [6265] 12  5  5  8  8  4  7  5  1  6  8  8  6  4  3  2  4  5  1  2  4  6  8  6\n [6289]  8  1  8  9 10  7 12 11  9 12 11  8  2 10 11 11 10 12 12  7  8  8  2 12\n [6313]  6  9 11 10 11 12 10  2  5  5  5 10  1  1  3  6  4  2  1  6  3  3  5  8\n [6337]  5  4  4 11  3  5  1  8  4  2  7  2  8  2  8  2  7  4  1  7  4  9  3  7\n [6361] 10 11 11  5  4 12  5  9  3  6  7  9  8  3  8  6  1  4  3  3  3  4  2  6\n [6385]  1  1 12  4  5  5  1  1  2 11 12  6 10  6  6 11  1  7  2  8  5  1  8 11\n [6409] 11  4  7  1  7  5 12 10  3  7  7 12  5  4  8  1  6  9  6 12  5  4  3  2\n [6433] 12  5 10  3  4  3  4  3  7  1  1 10 10  3  1  8 11  1  9 12 11  2  3  9\n [6457]  7  4 10  5  1  6 12  5  3  7  7  2 10 11 12  1  8  8  4  7  8  6  7  1\n [6481] 12  8  7  6  6  9 11  4  8  3  1 12  6  1  1  7  8  3  1 11  7  4 12  8\n [6505]  1  3 12 12  2  6 11 11 10  5 12  4 10  1  7  5 11  7 10  8  5  1  9  6\n [6529]  2 12  7 11 10 10 12  5 12  8 10  1 11  3 10 12 10  3 10  3 12  9  7  7\n [6553]  1 12 11  1  4 10  5  7  5  5 11  7  3  9 11  8  4  1 12  1  6  4  5  7\n [6577] 10  9 12  5  8  8 11  6  8  7  9  7 11  9  9 10 10  9  4  6  7  2  7  9\n [6601] 11  3 10  6  4 12  8  7 12 10  3  7 12  9  9  4  3  8 11  5 10  1 10  6\n [6625] 12  9  6  4  3 12  8  6  5  5  5  8  2  4 10  1  3  4  4  7  8  7 12 11\n [6649]  2  6  8  5  7  8  3 12  2  9  4 10  9  6 12  6  4  1 11 12  7  2  8  6\n [6673]  4  9  9  1 10  8 10  4  3  1 11  5  3  5  9  4  4  3  8  8  7  3 12  7\n [6697]  7 12 12  5  8  4  5  7  7  9  6 10 12  8 12 10  9 11  6 11  2  3  7 12\n [6721]  5 10 11  8  5  9 10  2  7  5  5  8  3  3  3 10  8 12  9  7 12 10 12 12\n [6745]  8  1  8 10  7  4  6  7 10  6  1  8  1 12  3 11  9 10  1  2 10  9  1  1\n [6769]  1  1  4  2 10 10  1  9  8  4  4  7  4  9  7 10 12 12  3 10  2  8 11  8\n [6793] 11 10 11  5  8  6  2  1  9 10 10  5  4 12  5  2 10  4  4  4  1  8  9 10\n [6817] 12 11 10  3  5  2  5  5  5  3 11  5 12 12  8  5  8 11  1 11  9 11  6  5\n [6841]  5 11  1  7 11  3  3 10 11  1 11  9 11  6  5 12  3 10 10 10  2  2  8  3\n [6865]  9  4  1  5  2  4  4  6  2  1 10  1  4 10  1  2 12  8  8  6  2  4  5  1\n [6889]  9  6  2  8  6  9  4 11  8 12  7 10 11 12 12  4  6  3  6 12  1  3  2  1\n [6913]  6  6  6  7  3  2 10  6  2  3 12  5  3  5  1 12  7 11  3  5  3  2  1  6\n [6937]  9  3  5 10  8  7  4  2  5  5  2 12  9  5  2  5  4  3  1  5  6  7  1  6\n [6961]  8  8  3  6  1  3  8  6 10  5  1  7  2  3  1  6  1  5 10 10 10  2  3  5\n [6985]  9  9 11 12  7 11  5 11  3 10  9  7  9  5  4 10  5 12  4  6 10 12  3  3\n [7009]  1  1  3  9  4  7  9  1  4  5  5  9 12  9  4  5  3  8  4  6  8  4 12  7\n [7033]  8  8  1  1 10  1  8  7  9  8 11  7  1  8 11  6  7  2  3  1  4  7  2  6\n [7057] 10 12  7  4  9  6  2  9  2  7  6  4  3 12  1 11  5 11 11 12  3  4  8 12\n [7081]  8  9  4  8  3  8 12  2  3  6  2  1 11  7  2  5  9  5  7  1  8  6  5 10\n [7105]  8  6  4  3  3  4  8  1  5 10  5  6 11  5 10  5  2  8 10  8  1  9  9  1\n [7129]  3  1  7  9  1 12  6 11  8  5  3 10  3 10  7  7  6  6  9 10  9 11  5  6\n [7153]  6 11  7  1 12  8 12  4 11  9  5 10  1  3  2  1  4  8 10  6  4 11 10  2\n [7177] 10 11  6  1  3 11  2  3 12 11  5  4  9 10 12  6  7  2 12 12  7  8 11  1\n [7201]  5  9  7 10 12  2  6 11  1  1  5  5  4  5  5  1 10 12  9  9  8  1  7  5\n [7225]  5  1 11  1 12  4  8  3 12 12 12  5 12  5  7 11  5  7  8  3 11  3  1  8\n [7249]  8  2  9  7  8  4  3  9 12 12 10  7 10  7 10 12 12  4  3  4  7  6 12  5\n [7273] 10  5  9  2  4  9 11  7  6  8  9 10  3  2 11  9  6  4  8  4 12  4  5 11\n [7297]  5  6 11 12  9  3  8 10  7 11  5  8  8 10  1  5  9  2  2  8 10  2  4  1\n [7321] 12 11  4 12  7  1 10  6 11  7  5  8  9  7 10 10 10  9  5  2  8  1  5 12\n [7345]  8 12  1  5 11  5  8  4  2  8  7  7  6 10 10  3 10  4  4  2  8  1 11 12\n [7369]  3  9  2  6  5 12  8  6  7  8 10 10  4  7 11  8 12 12  9  8  2  5  2  2\n [7393]  3  6  5 12  8 12  4  7  7  5  8 10  1  5  8  6 10 11  4  2  5  7 11  7\n [7417]  4  3  6  5  7  6  2  1  4  4  7 10  9 11  8 12  8  5 12 10  4 12  7 12\n [7441]  5  9  6  8  9  1  8  9 12  2  4 10 12  4  5 12  2  1  3  9  1  7 11  9\n [7465] 11  8  9  3 10  4  7  7  2 12 11  7  2  3  3  8  5  1 10 12  3  5  4  8\n [7489]  4  1 10  5 12 11  1  4  7  3  4  5  7  4  7 11 10 10 11  8  1  9  4 12\n [7513]  3 10  7  5 10  4 12  3  4 10  1 11  9  1  8  8  5  2  2  3  5 11  9  3\n [7537]  9  4  6  7  5 12  8 12  5  6  2 12  4  5 11 11  6 12  9  6  2  6  6  6\n [7561] 12  8  5  1  8 10 12  7 12 12  1 12  3  8  8  2 12  6 11  8  7  3  7  7\n [7585]  5  1  2  6  4  9  7  4  8 12 11  3 11 11 12  5  9  9  9  4  6 11 11  6\n [7609]  9  8  9 11  5  1  4  6  9  7  6  5  5 11 12  9  1  7  6 12 10 12  6 10\n [7633]  3  4 12 12  4  8  5  2  1  3  3 10  4  7 12 10  2 12  7  5  7 10  6 12\n [7657]  4  6 12  6  6 10 12 10 10  4  4  1  8 12 10  4  9  9  3  7 12  9 11 12\n [7681]  3  1 12  8  1  9  8 10 10 12 10  3  5 10  6  2  7  8  2  7  9  1  8 10\n [7705]  6 12  9 12  7  8 11  2  2  5 12 12  3 10  6 12  4  3  9  7  9  2  5  6\n [7729] 11  2  7  9 10  4  8  2  3  7  6  4 11 11  6  7  3  5  2  8  5  3  1  3\n [7753]  6  8  2 12 12  3  4 10  5  5  5  7  6  6  9  6  2  2  3 10  2  5  5  9\n [7777]  2  3  8  4  5  3  9  8  8  8 12  3  8 10  6 12  3  7 10  5 10  6  3  7\n [7801]  4  8  4  4  2 11  8 10  7  7 10 10 12 12  5  7  8  6  9 10  5  9  6  9\n [7825]  9  5 10  2  7  6  8 11  9 11  5  4 10 10 11 11  3 12  7  6  3  9  1  9\n [7849]  8 12  5  8 10  1  1 10  5  4  5  5  7  2 12  3  2  4 10  9  7  5  5  6\n [7873] 11 10 11  2  5  5  8 10  5  8  8 12  7  4 11  7  6  9 11 12  2 12 10  7\n [7897]  7 12  3  4  7  7  1 10  1  7 11  8 11  5 12  6  9  9  8  8 12  2  5  9\n [7921]  4  5  6 10  2 12  7  3 11 11  5 11 11  2 11  4 12  5 10 10 10  6  1 12\n [7945]  3  5  3  8  5  7  3  8  7 11  2 12 12  2  2  2  4  3 10  5  6 11  5  4\n [7969] 10  1  7  5  4  4  3  4  6  9  8  6 10  4  8 10 11 11  1 12  8  4  6  4\n [7993]  1  2  6  3  5  6  7  5  6 10  4 10  3 10  5 11  7 12  5  2  4 10  2  7\n [8017] 10  7  9  7  4  8  4  4  7  9  4 11 12  8  2  8 11  9  7  2  1 11  4 12\n [8041] 10  2  7  8  2 11  4 11  1  1  9  1 11  6  4  8  3  7 12  8  7  5  7  6\n [8065]  7  9 10  4  2  6  8  7 12  8  7 10 10  1  6 11  8 11  4  4  6 10  1  9\n [8089]  6 11 12  2  7  5  9 12  9  6 11  9  3 12  5  3 12  9  5  1  5  6  1  1\n [8113] 12  2  9  8  6  8  6  9  7  3  6 11  3 11 10  7  8  8 12  4  9 11  6  1\n [8137]  9  4 11 11  7 11  7  3  9  9 11 11  6 12 10  9  5  5 11 11  4 12  3  6\n [8161]  2  4  7  8 10  6  9  2 11  8  5  5  1  6 12 11  1  2  6 12  9  1  9  8\n [8185]  9  5  2 12 10  3  1  7  7  6  9  8  8  1  4  2 10  2  9 10  6  8  4  2\n [8209]  9 12  2  9  9  9  4 10  8  9  1  1  8 11  7  4  2  2 12 10  7  9 12  1\n [8233]  7  3  9  6 10  2  7 11  4 11 12 12  2  8  3  6  9  9 12  4  9 12 12  7\n [8257]  8  6  1 12  4  9  9 10  1  4  4  1  8  8  1  5 12  1  8 10  5  1 12 12\n [8281]  9  4  3  4  8  8  1  4  7 10 11 10 10  1  6 11  6  9  3  1  5 12  6  5\n [8305]  2  7  6  4  3  9  7  8  8  3  1  4 10 10  6  6 11  3  2  4  3  3 12  3\n [8329]  2  7  4  2 11 11  7  3  4  5  1 12  2  4 12  1 10  4 10  1  4  2 11  6\n [8353]  3 12 11  5  8  6  5 11  5  7  2  7  1  6  3  5 11  4 10 10  5  9  6  9\n [8377]  5  4  2 12 11 10  6  6  2  2  8  4  2 11  5  7  2  9  2  4  8  8 12 12\n [8401] 12 10 12  1 10  1  6  9 10  6  3 11  2  8  8  9 12  5  8 11 12  9  6 12\n [8425] 11 12  9 11  1 11  4  6  6 11  4  6  6  8 12  2  5  1  6  1  8  4 10  2\n [8449]  3 11  2  6  2  5  1  2  9 12  7 10  1 12  9  9 11  2 10  7  6 12  3  3\n [8473]  1 11 12  9  3  2  2 10 12  8 11 10 12  1  4  6  5  3 10  4  9  7  2  9\n [8497] 10  4  8  6  7  3 11  2 10  7  2  1  2  4  6  2  4  4  4  8 10  1  4  3\n [8521]  6 10 12  9  8 11  4 12  1  6  3  5  3  3 10  5  9  2  8  2  3  1  2 11\n [8545]  6  8 11  7  8  1  2  4  7  2  7  8  1  1 10  5 12  8  6  8 11  7  2  4\n [8569]  3  8  6  5  1  3 12  8  4  8  5 12  3 12  8 11  3  7  3  2  2  8  4  7\n [8593] 12  8 12  6  1  9  9  3  6  8  4  4  2  4  4 10  9  6  4  2 10  5  4  9\n [8617]  6 10  4  6 10  4 11  4  4  2  7 10  2  7 12  5 12  3  8  3  4 12  9  7\n [8641]  3  7  5  7  3 10 12  3  4  7 10  8  2  5  7 10 11  6 10  1  2  9  1  4\n [8665] 12  3  7 11 11  4 11 12  6 11  8  4  6 10  2  3  9  6  4  4  1 11 12  4\n [8689]  5  7 12 12  5 10  7  3  4  5  2  1  1 12  6  5  8  6 12  8  3  1 12 12\n [8713] 12  1  6  9  5  6  9  7  5  2  5  5 10  6  4  3  9 11  2  9  9  4  6 11\n [8737]  2  8  7  6 10  3 10  8 12 10  7 12  9  2  3  1 11  3  8  2 10  3  6  6\n [8761]  9 10 10 12  8 11 12  5  9  5 10  6  7 11  6  9  7 10  8 10  8  9  8  6\n [8785] 10 12  5  5  9 11  8 12  5  3  4  2  4  8  4 12  8  1  5  2  1  9 10  7\n [8809]  5  4 11  8 10  2  1 10  3  1  3  7  1  5  5  5  4 12 10  5  5  9  8  2\n [8833]  9 11  3  1  9 12 11  6 11  6  5  7 11  9 11  7 12  8 10  1  1  5 12  8\n [8857] 10  9  5  2  4  4  9  2  9 12  1  6  6 12  4 11  2  3 11  2 12 12 11 12\n [8881]  8  3  5  6  5  9  2  4 12  3  8  8 10  1 10  9  4  3  6  6 11  5  1  7\n [8905]  6  6  1 10  6  6  8  5  8  1  3 12  6 11  7  7  1 12 11  2  2  9 12  3\n [8929] 12 10  7  6  2 12  4  3  3  2  8  9  5 11  5  1  2 12  9  6  3 10  7  6\n [8953] 10  5  5  7  5  8  7  8 11  8  5  4  1  9  2  4  3  5 12 12  6  7  4  8\n [8977]  2  7  3  5  7 12  4  9  1  7  8  1  7  4 10 11 10  4  1  7  3 10 12  8\n [9001] 11  5  6  4  9 10  2 11  4  4  7  5  8  5  8 10 12  1  8  9  1  6  8  1\n [9025] 12  6  4  5  8 11  4  1  5  4  3 11  4  9 12  6 12  8  8  5  8  1  8 12\n [9049]  1  9  9  9  1  1 12  4  1 10 10  6  4  9  6  7 10  7 11  9  5  1  7  7\n [9073]  9 10 12  6  5  8  4 11  9  6  5  5  2  3  3 11 12 11  5 10 10  7  6 12\n [9097]  4  5  9 10 12  8 10  9 12  2 12  3  6 12  5  9  7  5  9  3  8  6  7  1\n [9121] 11  3  5  6  5  7 11  5  1  2  5  1  4  1 12  5  1  6  4  9  2 11 10 10\n [9145]  6 11 10  1  8  9  7 11 11  1  1  9  6  9  1  9  5  5  9  5  1  7  2 10\n [9169]  9  7 12  7 11  8 11  1 11  9 10  2  4 11  9 12  7  4  6  5  3  8  7  1\n [9193]  2 12  6 10 10  3 12  2  5  7  3 11  1  5  5  7  5  5  5  9 12  8 11  1\n [9217]  4  4  7  8  8  7  9  4 12 11  9  9  2  3  3 11  6 10  9  1  2  1  5  2\n [9241]  4  9  7  9  9 11  3  3 10 12  4  5  5  3  6  7  8 12 11  2 10  5  5  7\n [9265] 11  8 12  2  8  8  6  6  8 10 12 11 11 11  9  3  9  8  4  6  4 12  3  1\n [9289]  8 10  1  1  6  3  7 12 10  5  2  8 10  3  8  8  5  6  7 12 11  8 11  9\n [9313] 12 12  3  5  7  5 11  1  7  7 12  3 11 10  6  3 12  5  4 12  3 10  9  4\n [9337]  2 11  5 12 11  6  3  5  2  4 11  6  8  3  7  9  5  7  8  5  1  9 11  8\n [9361] 11  3  1  1  4  7  9  8  2  8  7  6  9  4  6  7 11  5  1  4 11  6  5 11\n [9385] 10  3  5  5  9 10  4  1  7  7 10  5  5 12  9  5  2  9 10  6  3  8  9  1\n [9409]  8  2  8  9  8  9  4  6  5 12  3  3  7  7  5  5  5  2  3  9  7  1  8 10\n [9433]  7  4 12  8  1 11  8  1  6  1  1  9  8  2  8  1  3  9  7  4  3 11 12  1\n [9457]  3 10  7  5  9  4  4  9  8  9 12  6  1 11 10 10  9  8  5  9  5  9  1  7\n [9481]  7 11  2  8  1  8 11 10  1  3 12  7  1  3  8  4 10  2  7  2  6  7 12  5\n [9505]  7 10  9 12  6 10  8 10  4 10  2  9 11  3  9 10  9  7  8  7 10 12 11 10\n [9529]  7  8 10 12  1  1 11  6  5 12  5 12  4  6  4  9  3  5 10  7  6  1  4  1\n [9553] 12  3  6 11 11  3  6  8  6  1  7  5  8  9  7 12  1  1  2  2  5  9  2  8\n [9577]  7  2  5  5  8 10  4  1  6  7  2 12 10  8  7  6  7  2  4  2  7  5  1  6\n [9601]  1 12  7  1  3  4  8  9  5  5  1 10  3 10 12 10  3  9 12  6  7  8 10  1\n [9625]  7 10  9  4  5 10  4  6  8  5  4 11  7 11 10  8 10 12  5  3  5  8  4 12\n [9649]  8 11  6  9  8  9  3  4  3  6  7  5  3  2  8  5  9 10  5  8  4  3 11  7\n [9673]  6  8  1  7  7  7 12  6  1  1  9  5  7  6  7 12  9 10  7 12  6  6  6  7\n [9697]  5  6  8 11  1 12  7  3  8  7  1  1  9  5 10 11 12 12  4 12  1 10 12  7\n [9721] 10  1  2 11 11  9  5  7  7  2  9 12  7  9  3 10 10  2 12  9  3  3 12 11\n [9745] 10  9  8 11  1  3  3  9  5  5  9  7  2  1 11 11  2  3  9  8  1  1  9 10\n [9769]  3  1  9  9  4 11  8  8  6  7  8  3 10  6 12  9  1  9  6  1  2  5 10  2\n [9793] 10 10  7  7  1  9 10  6 10  3  9  4  2  7  8  6  9  7 11  8  6  2 10 11\n [9817] 10  4  4  8  2  1 12 10  3  6 10  9 12 11 11 12  2  6  6  9  1  4  3  9\n [9841] 12  3  3  9  7  2  7  1  4  2  6  7  7  5  5  5  2  2 10  5  4  1  4 12\n [9865] 11 12  9  5  9 11  9 10  7 12  4  3  8  8  9  5  5 11  4  7  8 11  1 11\n [9889]  8 11 11  2 11  6  5 12 10  3  8 11 12  8 12  9  4 10  1 10  5 12  4  1\n [9913] 11  1  5  9  2  9  9  1  2  9  1 12  6  9  3 10  6  4  8  9  2  9  6  5\n [9937]  3  5  9  5 10 12  3  3  8  7  8  1  7  4  1 10  2  6 11  6  6  2 10 12\n [9961]  7  9  6  7  8  6 10  8 10  8 11  9 10  9  7 11  5  9  5 11  8  6  7  7\n [9985]  7  5  1  4 12  1  9  4  2  2 11  9 11 10  3  5 11  1 12  5 11 11 10  5\n[10009]  9  2 11  5  6  9  5 11  9  5  9  5  9  5 10  9 12  1  1  8  1 10  9  9\n[10033]  7  8  3  6 10  5  6  3  6 11 12 11  9  5  2  8 10 10  8  2  2  5 11 11\n[10057] 12  7  9  6  2  7 12  4  1 10  6 10  8  6 12  7  9  6 10  9  9  6  9  2\n[10081] 12 10  3  9  9  7  4  7  9  7  9  5  4 12  4  3  5 10  1  9  1  8 10  5\n[10105] 12  9  2  3  4  7  8  8  7  4  3  6  3  4  9 10  8 10  8  2 11 12 12 11\n[10129]  4  6  8  3  1 12  1 11 11  2  8  2  1  7  8  7 11 11  5  8  9  6  1 12\n[10153] 11 11 10  7 10  3  6  9 12 12  6  7  6  6 10  7 11 12 10  3  4 11  7  3\n[10177]  9  1  8  7  4  5  5  6  6  9  7  8 10  1 12  4  3  6 12  9 10  4  8  9\n[10201]  1  5  5  9  7  9 11  1  9  8  3  4 11  7  1 11 11  4 12  5 10  3 11  6\n[10225]  1  5  3  2  1  2  2  9  1  3 12  8 11  6  4  1 11  8  3  7  2 12  4  2\n[10249]  8  5 11  8  1  8  6  8  3  3  3  7  7  7  2 10  4  2 10  2 10  4  3  2\n[10273]  9  5 11 11  4 10  8  8 10  2 11  5  8  7  3  7  8  3  4  2 11  8  7  1\n[10297]  4  2  1  6  4  7  3  8  2 11  3  7  8  4  5  4  1  8  4  7 10 11 10  6\n[10321]  9  4  7  9  5  2  2  4 10  9 11  7  6 10 10  5 11  5  4 12  3  7 10 12\n[10345] 12  2  5  2 12  9  8  6  6  3 11  5  3  7  7 12  7  5  3  5  2 10  9  8\n[10369]  7  8  1  7  5  7  6  4  9  2  9 12  2  5 11 12  5 12  4  3 11  6 10  1\n[10393] 11  9  8 11  4  3  7  9  5 11  8  9  2  2 12  2  5  6  9  7  3 11  9  4\n[10417] 10  4  8  4 11 11  2 10 10  5  7  3 10  6  3  9  2  6  7 11 12  5  5  4\n[10441]  1  4  2  4  4  1  4  4  8  3 12  9  9 10  3 10 12  7  4 10  1  7  6 12\n[10465]  3 10  1  7  3 11 10  8  9  3  4  8  7 12  1  5 11  9  8  5 12  8  8  2\n[10489]  4 10  4  5  3 11  2  2  9 11 12  3 10  5  5  9  3  6  4  7  2  4  9 12\n[10513] 12  6  9  7 11 10  8 12 12  1  8 12 11  3  3  4 10 10 10  6  8  2  5 10\n[10537]  9  3  1  6  3 11 11 12 11  2  9  9  7 12 12 12  3 10 11 10  9 12  9  6\n[10561]  3  5  2  1  8  7  5  2 10  1  5 11  3  6  2  4  7 11 11  5  4  5  9  5\n[10585]  1  2  5  4 10 10  8  7  1  1  1  5  5 12  8 12  1 10  8  3 11  4  1  7\n[10609]  5  1  5 12  7  7  7 11  8  5 11 11  2  6  5  5  8  5  1 12  6  3 12  4\n[10633]  7  6  3  7  2  1  7  9 10  6 12  3  2  5  4  4  1  3  6  3 11  1  7  4\n[10657]  1  1 11  6  9  5  3 10  2  2  9  6  3  7 11  4 10  2  5  4  2  3  2  6\n[10681]  3  2  6  3  9  1  5  5 11  7  7  9  1  6  9  6  8 12  8 12  4  4  4 11\n[10705]  4 11 10  6 12 11  5 12 11  8 12 12  3  9  5 12 11  3 12 11  1  1  3  4\n[10729]  7  6 10 12  8  6  5 12  5 10 10  1  4  5  7  2 12 11  2  3  1  9  4  5\n[10753]  7  9  3  4  4  1  7  3 10 10 11 10  4  1 10 11 11  4  3  1  3  1  9  5\n[10777]  8  9 11  5  8  1  3  2 10  2  7 10  4  5  4  8  5  9 10 12  1  7  5  2\n[10801]  1 12  5  4 11  7  7 10  4 10  9 11  9  3  7  1 12 12 12  3 12 12  7  7\n[10825] 11  7  8  1  9  9 12 12  5  4 12 10  6 10  7  7 10  7  5  8  9 10  7  4\n[10849] 10 12  7  8  4 10  7  4  9 11  7  6 11  6  3  7  5  7 11 12  1 10  3  4\n[10873]  3  1  2  9  8 11  4  5  3 11  8 10 12 12  5  4 11  1  8  3  8  4  6  1\n[10897]  7  8 10  5  9 12  6  3  3 11  7 11  3  6 12  1  6  8  5 12  8 10  4  6\n[10921]  6  5  4  5  3 10  8 10  8 11 11 12  8  1  2  5  6 11  9  3  1  5 12  1\n[10945] 11  5  9  6 11 10 10 11  6 10  8  5  3 10 11 12  3  9  9 11 11  3 12  8\n[10969]  2  2  6  3  9 10  8  1  2  7  4 11  5 12  4  3  4  9  4  7 10  7  7  9\n[10993] 12  8  8  7  1  3 11 11 12  5  9 12 10  7  7 12  5  7 10  4  2  5  1  4\n[11017]  1  7  6 10 12  8  2  2 10  2  1  9  4  9  8  5  8  6  3 12  7 11  6  2\n[11041]  5  4 12  7  8 12  8 10  9  4  8  3  4  1  3  9 10  9  8  3 10 11 10  5\n[11065]  8  5  4 12  2 10  8  3  6  2 11 12  3 11  2  9  1  3  2  6  6  6  3  5\n[11089] 10  3  7  4  4  1 12  5 10 11  4  8  5 11  7  5  6  7 10  4  9  1 12  5\n[11113]  4  3 12  8  1  3 11  2  5  3  7  6 10  7 10 11  1  8  1 10  3 12  3  4\n[11137]  1  6  3 11  5  4  6  7  7  8  8 11  9  6  1  9  9  7  3  2  7  8  5  9\n[11161]  7  7 11  1  1  2  7  7 10  6 12  2 11  7  3  6  6 10  9  1  1 12  7 11\n[11185] 10  4  5  6 11  4  3 11  1 10  1 12 12  6  8 12  1  3 11 12 11  2 12 11\n[11209]  4 10 10 12  6  2  2 10  2  9 11  8 12  2 11  4 12  4  7  5  3  2 11  5\n[11233] 10 10 11  6  1  4  4  2  6  5  8  4 11 12  9  9  3  6  3  3  6 11  5  9\n[11257]  9 10  6  5  8  5 10 11 11  2  7  8  2 10  6  1  3 10  9 11 11  2  3  5\n[11281]  7 12  8  4  9 12  6  8  1  9  3  3 12 11 12 10  1  8 12 11 12  1  7 12\n[11305]  9  1 10 12  1  4  1 11  1  8  9  7  6  2 10 10 10  5  4 11  8  9 12  6\n[11329]  9  6 12  3  9  1 11  4  4 10  9  1  8  8  9  6  7 12  5  9  9  9 10  5\n[11353] 11  7 11  8  2  1  4  2 12  6  6  8 12 10  7  7  8 10 10 12 10  3 12  4\n[11377]  8 11  8  7  3  5  7  1  9  1 10  6  2  6  3  6  8  6 12  5 10  4 12  9\n[11401] 10  5  3  3 11  5  5  2 11  1  8  3 12  8  6  3 12 11  7  9 10  2  9  3\n[11425]  1  9 11  3  5 12  8  8  5 10  6 12  3  4 12  5  4  5  4 11  6  1  6 12\n[11449]  7  4  2  1  5  3  9  5  9 12 12 12  3 10  3  9  8  4  1  2  1  2  6  1\n[11473] 10 12  3  6  5  2 12  6  4  3  1  4 10  1  8 11  5  3  4  1 10  5  5 11\n[11497]  1  9  8 12  4  8  1  3 10  6 12  2 10  3 10 11  4 10  4  8  2  4  1  9\n[11521] 11  7  5  2  7  7  4  1 10  5  7 12  6 11  6 10  8 12 12  9  9 11 11  3\n[11545] 11  8 11  3 12  2  3  7  3  7  2  5  1 11 12 11  3 11  5  8  7  3  5 11\n[11569]  2  9 12 10  1  3  5  4  6 10 12  2  8 10 12  9  9  8  8  5 12  1  6  1\n[11593]  7  5 11  4  2  8  3 10 11  8  8 11  6  8  5 10  3  9  7  2  1  4 10  8\n[11617]  3  8  8  3  4 12 10 11  8 12  6 11  7  1 10 12  1  7 12  8 12  8 10  4\n[11641]  2  8 10  6  1 10  7 10  1 10  1  3  4  4 12  5  3 10  8 11  3  6  8  6\n[11665]  3 10 11  4  5 10  4  9  4 10  5  8 11  7  3  7 12  8  1  4  8  5 11  8\n[11689]  6  4  7  2  6 10  1 11  3  4  8  8 10 10 12 10 10  6 11  3 10  9  9  3\n[11713]  9  8 11  9 12  1  8  6  4 12  1  8 12  5  9  7  6  6 11 10  2  2  5 11\n[11737]  4 10 10  7  2 11  2  1  7  6  1 12  8  9 11  3  6 12  3  4 10  9  2  7\n[11761]  1  8  6  6  8  9  6  2 10 11 11  8  4 11  3  7  8  4 12  2 11  8 11  1\n[11785]  1 10  1  6 12  7  8 12  4 11  6  8  9 11  5  7  9 11  5 12  1  8 11  1\n[11809]  2  5  7  4  2  3  5 11 10 10  8  1  2  9  9  3  4  7  2  5 11  7  8  4\n[11833] 12  6 12 12  9  4 12  6 11  9  2 12 11  8  8 10  2  1 12  4 11  6  4  3\n[11857]  2 10  8  8  4 11 10  7 11  9  6  5  9  6  9  4  9  1 11  4 10  4  5 10\n[11881]  5 10  5  2  2  7 12  2  7 11  8 11  8 12  2 10  5  8 10  1  5  4  7  2\n[11905]  4  2  7 11  7  5  4  9  6  8  9  9 10  7  9  8  5  9 12 12  1 10  2  2\n[11929]  2  9  9 12 10  8  1  1  8  2  9 12  5  3 12  9  3 10  7 11  2  7  1  5\n[11953]  5  5  4  9  6 12 10  5  6 12  9  4 10  4  5  4 10 11  7  6  9  2  5 12\n[11977] 11 10  1  6 10  9  3  8  5  7  5  4 11  7  6  6  2  3  8  3  5  1  6  3\n[12001]  4  6  9  9 11 11  4  7  3  9  1  6  6 11 10  4  6  3 10  4  1  4  4  3\n[12025]  1  3  4 10  6 12  9  9  6 11  2  3  8 12  5  9  1 11 12  9  8  9  1  9\n[12049]  9  2  8  8 11 11  1  9  5  9  3  6  1  2  1 11  6  9  3  1 12  8  5  5\n[12073]  3  5 12  5  9  9  1  5  6  9 11 11 10  2  5  6 12 12  2  1 12 12  6 11\n[12097] 10  9  1  9  9  7  6  1  5  1  1  9 12  1  3  8  8  8 11 10  7  1  8  3\n[12121]  1  2  2  6  6 12 10  2  8  8  8 11  4 11 11  2  4 12  9  8  1 11  8  2\n[12145]  5 11 10 10  6  2  1  5  3  7 11  3  3  6  6  5  9  1  4  4  7  1 10 11\n[12169] 11  1  8  8  9  4  8  2  3  5  3  7  2  6  3  1  6  9  2 12 10  7 12  8\n[12193]  8  2  6  3 10  2  9  6  5  5  5  6  9  3  8 12 11  8  1  7 10  6 10  6\n[12217]  1  1  3 10 11  9 10  8  8  7  6  7  8 12  7  7  9  5  7  8 12 10 12  2\n[12241] 12  8  6  2 12  7  3  7  4 10  6  2  7  1  1  1  7  8  5  9 10  8  6  6\n[12265]  2  6  6  3 10  7  2 12  4 10  8  7  1  5 12 12 11  1  6 10 11  3  1 11\n[12289]  6  6  2  1 10 12  5  6  9  3  2  6 11  5  3 12  1  4  7 12  8  1  9  5\n[12313] 12  1  2  5  2  8  7 11  1  7 11  5 11  7  2  6  1  2  2  9  5  5 11  6\n[12337] 12  5 12 12  3  3  3  8  1  2  4  5  8 12  4  8 10  5  8  2 11  6  8 11\n[12361]  7  4  8  7  9 10 11  8  7  6  1  1  3  7  4  3  2  4  3  3  4  6  6  7\n[12385] 11  7  9  1  2  5  8  4  5 12 10  8  9  5  2  7  1  9 10  2  6 11 12  8\n[12409]  7  3  7  7  1  1  7 10 11 11  6  4  4  7  1  6 11  8  9 10  5 10  9  7\n[12433] 11  6 10  9  2  3 12  1  7  3  9 12  9  3  9 11  2  8  1 11  5 12  7  1\n[12457] 10 11  7  6  8  3 10  2  1  8  2 11  5  7  7  6  3 10  5  2  8 11  3 12\n[12481]  9 10  6 12 10 10  1  8  3  6 10  9 12 10  5 10  3  1 12 11  7  1  6  5\n[12505] 10  4  9  4 11  5  4  9  2  8 12  9 11 10 11  3 11 12  1 10  4  1  4  8\n[12529] 12  3  5  1  2  3  7  8  9 10  4 10  4 10  3  4  8  6  2  6  3  3  5  4\n[12553]  6  9  7  4  7  4  2  9  9 10 12  9  2  1  1  7  1  1  2 10  2  7 12  9\n[12577] 11  4  1 10  4  3  6 10 11  7  1  1  7  4  4  1 12 12  4  1  5  8  9 10\n[12601] 12  2  4  6 12 12  9 11  9  3  8 12  8  9  7 10  5 12  6  6 11  2 12  2\n[12625]  1 11  5 12 10 11 11  5 10 12  3  6  9 11  8 10 12 11 10 10 10  5 11  1\n[12649] 10 10  4 10  5  2  1  4  8  7 11  9  5  1  4 12 12 10  3  2  1  3  5  8\n[12673]  8 11 10 10 10 11  7 11 10  1 11  4  2  9 10 11 10  8  7 11  6  5 11  8\n[12697]  4  4  6 12 10  3 11  2 10  2 11 12  4  1  3  5  5  7  2  7  5  6  9  6\n[12721] 12  6 11  6  6  6  4 12  9  2  8  2  4  7  4  1  8 11 12  9 11  2  7 12\n[12745]  4 10  5  7  1 10  5  8  8  4  1  8  9  9  1  3  3  4 10  6  8  2 12  8\n[12769]  4  4  1  6 12 11  7  5  4  9  7 11  7  6  6  6 10 12  5 11  5  1  6  8\n[12793]  9  1  1 10  9 12 10  8 10  7 12  1 11  4  2  9  9  4  7  1  7 11  4  5\n[12817]  3  5 12 10  4  4 10  4  9  7  2 11  4  5  7  8  9  5  4  4  7  6  4  2\n[12841]  1  1 11  9  9  3  7 11 11  3  1 11 10  2  3  3  6 11  1  9 12 12  2  2\n[12865] 10 10  4 10  5 11  1  2  1  1  4  4  2 11  3  5  8  9  7  9  3  4  7  7\n[12889]  4 12 12  8 11 10  2  8 11  4 10  4 11  6 10  4  1  5  5  5  3 12 12  9\n[12913]  3  5  7  2  3  2 10  7  6  6 10  5 11 10  3 12  7  9  1 10  6 10  6 10\n[12937]  4 11  5 12  9  5  5  5 12  7  3  4  3 12  1  1  6  2  4  5  1  9 12 12\n[12961]  3 12  8  4  4  4 12  7  3  9  8  3  1  5  1  4  2  8  9 12  6  6 11  4\n[12985]  5  7  3  7  1  9  1  5  3  2  8 12  4  9  6  1 10  5  4  6  4  7  7  8\n[13009]  9 12  9 12 12  8  6  4  2 10 12  1 11  2  1 12  1  8  3  3  7  3  8  5\n[13033] 11 10  2  8 10 11 10  7  9 12  5 11  4  4  5  3  2  9 12  6 10 11  2 10\n[13057]  7  6  1  8  9  4  6  9  6  3  2  8  5  9  5  6  6  9  2  6  5  4  1  8\n[13081]  4 12  2 10  1  1  8  8  7  5  9  4 11  7  5  4  8 12 12  5  5  2  3 11\n[13105]  5  9 11  9  3  5  3  9  4  3  2  4  4  6  3  9  6 11  6 10  9 11  6  6\n[13129] 11  1 10  3  6 11  9  5  4  3  4  1  5  8 10 12  7 12 10  9  2  3  2  3\n[13153] 10  4  5  5  1 10  3  7 12 12  4 11  9 10  4  6  7  5  7  5  9  6  1  4\n[13177] 11  7  9  8  7 10  9 12  8 11 10  1  2  7  9  8 11 10  9  9  6  7  2  6\n[13201]  1  9  6 11  8  3  9  7  1  9 12  9 10 11  2 12 11  8 10  6 12  9  5 12\n[13225] 12  7 12 11  7  4 10  8  9  5  9  6  4  7  2  5  6  6  7  3  6  9  4  4\n[13249]  9  9  1 10  4 11  6  3 10 12 11 12  1  8  6 10 12 10  8 10 12  6 12  9\n[13273]  7 12  3  3  7  5 11 12  2  6  8  4  4  7 12  5  1 10  1  1  3  6  6  8\n[13297] 12  3  2  2  6  6  3  8  5  7  2  1  2  8  1  2 11  5  3  5  7 11 11  8\n[13321]  9  5  4  7  9 11  8 10  8  5  5  8 11 10  6 12  8  5  5  5  5  1 10  4\n[13345]  2  1  9  1  9  3  1  4  8  5  1 11 10  4  5  1  7  9 11 10  3  3  5 11\n[13369]  7  4 11  5  5 10  6 11 10  7 10  6  8 11  5 11  2  7  1  2  2 10  2  2\n[13393]  5  6 10 10 12  6  3  3  3  2  8  6  5  9  5  7  5  8 11  6 11 10  2  1\n[13417] 10 10  9  5  8  6 10  5  2 10  3 11  8 11 11  1  7  1  1  5 10 10  3  7\n[13441]  4 10  8  3  4  2  1 12 10 12  3  2  8  8 11  6 12  8 10  4  7  4  7  9\n[13465]  7  6  3  8 11  3  6  5  1  6 11  9  7  9  1  2  5  5 12  5  2  2  9  7\n[13489] 10  2  1  7 11  4  5 11 12 10  3  5 12  1  1 12  7  4  7  9  5  9  6  7\n[13513]  2  9 11  7  6  8  5  4  4  8  5 12  6 12  6  4  5  3 10  3  2  3  5  5\n[13537]  6 12  9  6  9  3 11  5  7  8  1  7  8  1  1  4  6 11 10  8  6 11  2  8\n[13561]  1  7 12 11 12  8  8  9 11  2  5  2  1 12  9  9  2  9  8  1  4  9 12 12\n[13585]  7  1 10  2 12 11  8  8  8  1  7  8  4  9  4  3  3  5 12  1  8  1  8  4\n[13609]  5  1  1  9  5  2  7  9  1 12  7 10  3  9  5  9  4  2 12 11 12  6  9  6\n[13633]  5  4  5  3  4  6  1  5 11  4  5 12  6  4  8 11 12 11  7  4  2 12  8  9\n[13657]  9 10  4 10  1 10  2 11  7  6 11  7  4  9  5 12 10  6  9  8  5  4  4  9\n[13681]  7  6 11  9 10  5  6  6 10 12 12 12  3  7  8  7  3  7  1  2  9  8  9 10\n[13705] 12  9  6  8  4  6  4  1  5  5  7  5  2  1  9 10  7  3 12 11  4  9  3  5\n[13729]  9  1  8  8  7 10  7  4  4 10  9  9  3 12  3 12 11  2  9  8  2  1 12 12\n[13753]  9  2  9 12 10 12  9 10  7  8  9  5 11  2  2  8  8 12  9  8  7  4 11 11\n[13777]  6  6  7  2  6  6  9 11  5  8  3  2  5  2  4  8  6  9 10 11  8 11  5  1\n[13801]  3  5  2 12  5  4  1  7  3  7 10  8  1  6  6  9  4  4  1 11 12  5  2 10\n[13825]  9  5 10  8 10 10  1 12  1 10  5 10 11  7  1 10 10  8  5  9 12 10 12  3\n[13849]  9 12  1  9  3  6  6  9  2  4  2  1 10  9  7 12  6 10  6  8  7  7  5  9\n[13873]  5  4 11  5  5  2 12 12  9  6  7  5  3  1 12  3 10  7  1 11 11 11 10  1\n[13897]  1 11  6 12  2  6  8 11 11 10 11  6  7  8 10  6  9  5 12  1  2  7 11 12\n[13921]  5  9  4  8 12  9  9  3 12  1 11  5 10  7  4  9 12  2  8  7 12  5 12  3\n[13945]  4  5  8 12  8  8 11  5  4  8  8  7  8 10 10  6  1  3 12  6  9  4  2  3\n[13969]  7  9  3 11  4 10  4  5  1  1  5 10  7  4 12 10  7  8 12  3  3  7  1  8\n[13993]  1  2  6  8  6 12 10  7  2  9  9  8  5  7  2 11  1  8  3 12  8  8  6  9\n[14017]  5  5  1 12  3  9  6  1  4  8  2 10  4  2  2 10  6  4  2 10 11  5 12 11\n[14041] 11  2  4 11  2  3 10  2  2  7  1  4  5 12  8  5 10  2  9  7 12  1 12 12\n[14065]  7  5  6 11  1  6  9 11  8  8  3 11  4  1  2  3  3 12  6  9  1  7  8  6\n[14089]  4  4  5  4  6  9  6  6  1  1  5  6  6 12  5 11 10  2  5  5  5  1 10 11\n[14113]  5  2  5 12  5  1  9  7 12 11  2  7  3 10 12 10  6  9 10  8 11  4  7  2\n[14137]  1  2 11  8 11  4  4  7  5  9  7 11  5  8  8  6  7  4  5  7  8  6  4  9\n[14161]  1  1 10 10  6  6 12 12 11 12  3  5  1 11  4 10 11  7  9  5  5  6 11 10\n[14185]  9 11  7 12 11  8  1 10  5  3  1  5  4  9 10 11  2  8  4 11 12 10  8  1\n[14209]  3  2 12  4  4  5  4 12  5  2 11  4  7 10  5  9  1  1  3  4  1 11  4  1\n[14233]  1  1  9 10  2  7  3  1 10  5 12  1  7  5  9 12 11  6 10  8  4  8 12 10\n[14257]  4  4  1  4  4  4  6  8  4  4  8  9  4  4 10 10  4 11 11  9  9  7 10  5\n[14281] 12  9  7 10  7  2  2 11 10 11  5  6  2  6 11 12  7 11  4  5  7  6 10 11\n[14305]  4  4  8  1  5  6  8  9  9  3  5  8  6  3  7 11  9 10  6  2 11  2  5  5\n[14329]  4  5  8 11 11  9  5  7  8 10  9  9 10  8  9  8 10  2  4  1  6 11  4 10\n[14353]  9  2 11  7  8  6 10 12  9  1 11  1  6  1  5 11  9  6  4  1  6  8  7  3\n[14377]  5 10 12  5  7  1  6  2 10  8  2  1  3  7  4 10 10 11  7  4  7  3 10  9\n[14401]  6  6  6  4 11  1  8  1  9  3  1 10  8  3  7  9  6 10  9 11  8  5  5  5\n[14425] 11  4  3  8  3  4 12  9 12 12  3  6 11  6  3  3 12  8 12 12  3  1 11 12\n[14449]  7  7  9  9  8  5  9  9 10  2 11 12  9  7  7  2  4  7  7 10  9  8  6  2\n[14473]  9  5  5  8 11  2  6 10 12  6  7  8  3 12  4 11  6 10  7  3  5  9  6 12\n[14497] 12  3 11  5  5  1 11  9 12  1 11  5  2  3 12  8 10  4  2  8  9 10  2  3\n[14521] 10  1  8  3  5 11  7  9  9 12 11  9  7  4  2 11  4 11  2  2  9  6  8  5\n[14545]  1  7  6  9  6 11  6 10 11  2  6 11  6 12  8  4  9  9  7  5  7  8  8 10\n[14569]  6  6  1  8  8  1 12  9  4  7  9  7 11 10  4 11  7  9  8  3  3  6  6  1\n[14593] 10  8  3  9 11 11  2  6  4  1  2 11  1  9  3  5  1  3 11  5  7  1 10  8\n[14617]  6 11  2  8  3  6  3  1  7 12 10 12 12 10 12 10  9  1 10  2  2  9 10  8\n[14641] 10  8  9  5  1  9  6  1  2  3  8  7  8  6  6 11  2  2  5  6  7 11  8  5\n[14665]  9  9  2 10  2  4 12  4 12  5  1  8 11 12  8 11  5  4  2 12 12  6  8  1\n[14689]  6  9  5  8  3 11  4 10 10  9  4  3 10  3  9  7  1  1 12  4  3  8 11 11\n[14713] 11  3  1 10  9  3  1  6 10  5  8  7  3  6  6  2  4  1  6  2  6  9 10  1\n[14737]  1 12 10  9 11 10 11  8 11 12 12 12  9  1 12 12  8  3  9 12  2 11  8 11\n[14761] 12 12  4  4  3  4  1 10  6 12 10  5  7  9  9  1  6  9 10  1  2  8 12  6\n[14785]  8 12  2  2 12  4 10  7  9  4  7 10  6  9 11 10 12 12  4  9  3  1  7  6\n[14809] 10  4  8  9  1  5  1 12  6 12  2  5  6  8  8 10 12 10 12  1  7 11 11  1\n[14833]  6 12  5 10  3  9  7  7  3  3  1  7  7  5 11  2  1  6 12  3  7 12  2  3\n[14857]  1  4  6  4  1 10  7 12  1  7 10  3  4  1  2  4 11  4  8 10  3 11  7  7\n[14881]  5 10  8  9 10  9  1  5 12 10  2 11  7  4  9 11  4  8 11  5  5  2 11  9\n[14905]  7  2 10  7  7 10  1  1  6 11 11  7 10  1  5  3  3  4 12  5  1  5  4 11\n[14929] 12  4 11  4  2  5  3 12  2 11  4  3  5  5 11  5  4  7 11  3  2 12 11  4\n[14953]  3 10  1  8  2  5  4  6  2 11  1  7  7  2  3 11  1 10  3  9  5 11  9  9\n[14977]  8 10 11 12  6  1 12  9  8 11  9 11  8 10 12  3  6  9  5  2 12  2 10 10\n[15001]  8  5  9  6  8  6  9  6 12 12 10  3 12  6  4  1 12  1 11  5  8 11  8  9\n[15025]  6  1 10  6  1  7 10  6  7  6  3  3  1  4  7  7  7  7 12  7 10  6  6  8\n[15049]  7 11  2 12  9  7 11 12  1  7 12 12 11  5  4  1  5  4  2  1  7  2  2  9\n[15073]  3  9  9  4 11 11  4 11  1 11  1 11  5  6  1 12  7  5  2  4 12  8  2 12\n[15097]  4  9  5  1  5  1  6  4  2  9 12 12  8  5  6  9  7  9  8  2  3 10  7 11\n[15121]  2  2  2  5 11 12  5 12  8 12  1 11  8 10  8  6  6  5  9 11  6  9 11  7\n[15145]  2 11  7  9  9  3 12 10 11  7 12 12  8  5  8  9  3  7  4  3 11  6  7 11\n[15169] 10  7  5 10  2  8  4  2 12  5 11 11  3  6 11 10  6 10  6 12  9  2 12 12\n[15193]  9  6 11  1  7  4  4  9  5 12  5  8  5  1  1  4 10 10  8 12 10  7  6  1\n[15217]  1  3  9 12 10  7  2  1  5  6  1 10 12  3  6  4  7  1 12  3  8  4  8  3\n[15241]  6 11 10  2 10 10  5  7 12  8  1  3  5 12 12  1  2  7  3  1  3  6  5 12\n[15265] 12  7 10 10  6  7  3  5 11  5 11  4 10  4  7 11  7 10  2  7  7 10 12  9\n[15289]  8  1  2  8  8  1  4  1 11  5 12 11  3 12  2  2  1  8  9  1  1  4 12 12\n[15313]  4  6  4 10 11  1  5  3 12 11 12  9  9 10 11  8  4  4  3 11  6  4  5  3\n[15337]  2 11 12  9  7  9  3 11  1  7 12  4  1  5  9  7 11  5  1  9  6  6  4 10\n[15361]  2 10  2  9  5  1  4  1  7  5  4  5  2 11  1  4 12  8 11  4  5  3  7  4\n[15385]  2  6  3  5 12 12  5 11 12 12 10 12  9  7  9 10  7 10  7  7  8  8  9  6\n[15409]  3  8  1  7  2  5  4  4 12  8  2  7  2 11 12 11  6 11  7  4  8 12  7  8\n[15433]  1 11  8  3 10 10 11  5  3 10  2 11  9 10 11  6 11  7  2 12 10  9  8 12\n[15457]  7  6 12 12 12 10  9 11 11  7  6  3  1 11  6  1  2  8  2  4  4  9  9 11\n[15481]  8  7  5  5 11 12  4  9  1  1  5  3  4  1  6  7  8 11  9  4 10  4 11  6\n[15505]  6 11  6  1  6  9 12  1  2  4  7  4 11  7  1  9  4  3  3  5  6 12  1  2\n[15529] 11  4  7  2  5  1 12 12  8  2  5  1 12  2  8 10 11  9  4 12 10  1  2  6\n[15553] 11  9  5  9 12 11  1  7 11  8  3  6 12  6  8 11  3  9  5 11  6  8 10 12\n[15577] 11  7 12 11  2  5  1 10  3  3  6  6  8  2 10  1  1 12 11  5  7  4  8  7\n[15601]  1  8  9  5  9 10 10  9  9  2 12  5 12 12  3  9  2  7 10  1  6  7  2  8\n[15625]  3  8 11  8  8  6  3  8 10  1 11 12  7  4  3  9  9  6 10  9  7  7 11 10\n[15649]  1  8  7  5 11  4  9  3 12  8 10  2  8  3  3  4  3  3  3 10  7  4 11  5\n[15673]  5 10 12  6  9 12 10  3  5 11 11  3 12  3  4  4  3  7  6  5  9 12  5  4\n[15697] 10  8  7  8  9  9  3 11  7  1  1  2  4  7 10  6  8  6  8  2  7  6  1  9\n[15721] 12  9  4  9  7  7  7  6 10  2  5  7  6  8  6  8  7 10  4 11  8 12 11 10\n[15745] 10  3  9  8 11  5  8  1  1 12  7 11  5 11 11  4 11 10  6 12  6  1 12  4\n[15769] 12  3 10 10  5  3  7 11 10  1  3  7  5  7 11  6 12  1  5  1  6  4 11  7\n[15793] 12  3 10  4 10 12  7  2  1  9  2  9  1  8  9  8 11  1  4  7  1  5  4  1\n[15817]  2 11  4 11  5 12  3  9  9  4 12 12  7  1  9 12  8  2 11  1  4 10  2  4\n[15841]  8  6  1  8 10  5  2  2  9  8  8  6  7  6  2  7  8  7  7  1 10  4  1  7\n[15865]  1  6  4  2  8  9  1  6  7  7 12  4  1 10  6  3  4 12  5  5 10  3 10 11\n[15889] 10  3  4  7  7 10  6  1  1 10 11  6  1  2  7  8  6  4  4  4  4 10  7  4\n[15913] 11  3  6 12 11 12 10  9  9 11 12 10  9  5 12  4 11 12  5 11 12  9  9 11\n[15937] 10  8 12  8  7  7  2  2  8  1  9  8 12  5  4  9  4  5  3  8  4  5  3  7\n[15961]  7  6 12  9  2 11 10  6  3 11 12  6  3  3 11  3  5 12  7  6 10  4  1  6\n[15985]  5  3  9  3  6 10 11  3  7  1 10  4  3 12 10  8 11  9  2  5  7  8 12  5\n[16009]  6  9  6  9 10  4  9  6  5  1  1  3  4  9  6  6  6  5  6  7  7  3  9  5\n[16033]  5  5  7  3  2 12 12  7  5  4  9  6  4 10  2  1  1 11 10 10  4  8  1 12\n[16057]  6  4  1  5 10 12  5 12  4 10  9  5  6 10  2  9  2  3  2 12  7  7  2  3\n[16081]  4 12  2  4  3 10 12 10  9  3 10 11  9 10  7  7 11  6  5  4  8  8  9  5\n[16105]  6  7  3  2  4 11  3  3  6  8 12  8  7  9  2  8  9  4  9  7 10  4  5  6\n[16129]  2  9 10  4 11  6  7  6  6  1  3 12 10 12  4  7  9  4  9  7 10 10  9 12\n[16153] 12 12  6  9  8  7  3  5  3  5  2  9  5  7 12 10  6  3  6  8 12  2  3  7\n[16177]  5  5  2  1  3  9 10  7 10  6  7  2  4  5  1  7  5  6  3  3  9  4  9 12\n[16201]  1  5  7  9  2 12  1 12  3  1 11  7  5 12  3  2  9  1  8 12  6 11  2  2\n[16225] 10  2 11  2  2  4  7 12  7  8 11 12  8  9  7 10  5 12 11  3 12  3  6  3\n[16249]  8  1  2  6  9  4  3 10  4  5  3  9  8  7 10  6 10 11  8  8  6  9  7  5\n[16273] 12 12 10  6  1  2  7  9 12  4  5 12  1  4 11  8 11 10  7 12  9 10  3  1\n[16297]  7  8  8  9 10  7  4 10 10  8  9  9  1  5  3  2 10 11  1 11  6  7  1  8\n[16321]  6  8  3 10  4  4  6  4  4 10  9  4  1  9  7  7  2 12 12 10  3 10  2  4\n[16345]  9 11  3 11  9  2  5  8  6  3  2  4  5  3  8  5  9  8  2 11 11  3  3  7\n[16369]  2 10 12  2  9  5 12 10  8  7  1 12  3  5  1  8 11  8  8  6  7  3  5  7\n[16393]  1  5 10  4  7 10  3  5  3  5  4  4  2 11  7  8  9 11 10  9  5  7 12 10\n[16417]  7 10  9  9  9 10 11  7 10  9  4  5  2 11  9  1  8  9  9 10 10  4  5 12\n[16441] 11 11  7  8 10  3  4  2 11  3  6 12  8  7  1  2  7  5 12 12 12 12  8 10\n[16465] 10  5  4  5  7 10  7  9  8 10  9 10  9  4  2  7  1  6  5  6  3  4  2  2\n[16489]  1  6  4  8 12  9 10  9  9  2  8 10  1  3  2  9  6  6 11 12 12 11 12  8\n[16513] 10 11  7  8  2  4  1  4  8  6  1  1  5 12  5  2  6 10  5  7 10  5  9  7\n[16537]  4  3  2  7  8  3  5 11  4  9  3  8  3 12  7  1  7 11  2  4  2  2  6  6\n[16561]  2  2  1 12  6  2  1 10  1  6  1 10  5 11  5 10 12  6 10  8 11  9 10  4\n[16585] 12  7 10  6 12  4 10  4  6  7  8  9 10  9  7  9 12  4 11 12  3  9  6  5\n[16609]  1  3  8  7  9 11  1  3 10  3  2 12  1  6 12 10  7  9  7  3  5  7 12  5\n[16633]  2  9  4  5  8 12 12  4  8  4 11  1 10  6  7 10  3  2  1  4  8  4  4 10\n[16657] 10  7  4  4  7  9 11  7  7  4  7  5  7  2  7  8 12 12  8 11 10  5 12  2\n[16681]  5  1  1 11 10  9  9  2  2  8  9 11  2  9 12  3 12  8  9  7  8  2 10  5\n[16705]  3  1  3  5 11 12  6  4  9  3  5  8  7  6 12  3  6  1  8  4  6  1  8  3\n[16729]  3  7  7  7 10 11 11  3  7 10  6 12  9  5 10  8  8 11 10  3  5  1 12  8\n[16753] 12  5  5 11  8 10  8 12  2  3 10  9  4 10  8  1  5  1 11 11  4 10  2  5\n[16777]  5  6  9  4  8  6  9  1  5 12  9  1 12  6  5 12  7  5  6  5  2  8  1  8\n[16801]  2  9  8  4  6  6  2  1  6  5  5  1  8  6 11  6 12  9  1  9  6  4  9 10\n[16825]  6  1  3  8 10  6  6  9  3  9 12  8  7 12  3  2  8  8  4  1 10  6  8  6\n[16849]  1  6  1 10  5 11  3  2  3  9  6  8  9  7  3  8 12  6  6  6  6  9 11 11\n[16873] 11  4  2  9  8  4  6 11  9 12  5  9 11 10 10 11  7  3  1  2 10  3  1  5\n[16897]  1 10  8  5  5  8  7  8  5  7 11  8  5  7  9 12  3  1 12  8  3  8  5  5\n[16921]  2  8  2 11 10  2  7  9 11  7  3  6  1  7  1  8  9  6 12  3  8  6 12  2\n[16945]  8 12  4  1  4  5  2 12  8  4  5  4 11 12 11  4  3  9  6  3 12  4  3  4\n[16969]  3  4  4  9  3 10  8 11 11 12  1  7  3  4  9 10  4  9  6  3 11  6  2  9\n[16993]  9  9  4  4 11  2 11 11  3  1  3  5  7 12 11  1  8  5  9  5  5 11  3 12\n[17017]  8  3  6  3  8  1 12  8  5  7  1  3 10  7 11 11  8 11  8  7  8 11  8 10\n[17041]  4  9  8 10  1 12  5  6 10  9  7 10  2  9  2 12 11  5  7  2  1  6 12 10\n[17065]  7 11 11  3  3  6  6  3  2 12 12 12 10 10  3  2  2  3  1  7  4  1  7  4\n[17089] 10  1 12  5  3  5  6  6  7 11  6  7  4  7 10  9 12  8  9  5  5  5  4 11\n[17113]  4 10  5 10  9  6  5  8 10  1  4  1  5  9  9  7  6  9  4 12  3  2 11 12\n[17137]  5 10 12  5  6  8  4  9  4 11  6  8  8  6  5 10  1  5 10  6  2 11 12  8\n[17161]  8 12  1  6  9  8  3  8  7  3  5  8 12  9  6 12 10  8 11 10  3  7  9 11\n[17185] 11  3 12  4  8  6  4 12  2  2 11  8  9 11  4  2  8  5  5  1  4  6 10  2\n[17209] 10  8  1 10  4  5  6 11 10  2  8  6  6 11  7 11 10  4 10  3 10  9  8  8\n[17233]  6  8 12  5 10  1  5  2  4  7  7  8 10  1  7 10  1  1 12  3  6  7  4  3\n[17257]  2  5 11  5 11  7  3  6  7  1  2  1  1  8  9  6  2  3  4  2 11  1  5  3\n[17281]  5  1  4 12  2  3  7  1  8  6  2  9  2  8  8  9  3  6  8  5  7  1  4  9\n[17305]  7  3 11  7  6 12  6 12  1  9  3 10  6 10 10  6  4  5  5  7  7 12  5 12\n[17329]  4  4 11  7  9  9  8  4 11  1 12  1 12 10 12  6 11  3  9  9  8  5  3  4\n[17353]  7  7  4 11 12 12  1  4  4 11  7  9  4  5  7  3  2  1  5  6 10  3  5  3\n[17377]  4 10 10  5  7  8  1  8  7 11 11 10  2  5  5 12  5 11  3  7  4 11  8  7\n[17401]  6  1  8  1  4  1  3 11 11 11  8 11  6  8  5  2  6  3 11  6  2  8  3  8\n[17425]  9  6  9  1 12  4  5  6 11  1  4  2 12  2  4  6 12  4  6 11 11  3 11  5\n[17449]  5  3  8  7  9  6  2  4  5  1  2  9  6  7 10  2  8  7  6 10 10  1  6 12\n[17473]  4  5  5  9  3  5 11  4  1 10  5 10  5  7  4  4 12  4  6 12  2  8  8  2\n[17497] 11  6  4 11  4 12  1 11 10  4  1  5  7  8  3  2  4  7  5  7 11  1 11  3\n[17521]  3 11  9  1 11 11  9  8  1  7  9  4  5 12  8  2 10  6  9  6 12  1 10  8\n[17545]  8 11  4  4  4  7  1  8  9  9 10 11 11  8  5 12  4 10  9  7  5  1 12  1\n[17569]  1  9 12  5  8 10  7  6  9  3  8  2  3  1  3  5  5 11  7  5  2  8  1 10\n[17593]  3  6  6  5 10 11  9  8  9  9  5  7  3  9  1  7  3 12  6 12  7  8  3  5\n[17617] 11  5  8  1  5 12  8  8  8  3  9  8 11  3 12 11  7 10  2  3  7 11 12  4\n[17641] 10  7 11 10  4 12 11  6  3 10 10 10  6  4  4  6  1 11  3  5  4  2  9  7\n[17665]  9  3 11  7  9  1  8  3  7  6  7  4 11  2  9  6 10  4 11  3  8 12  5  3\n[17689]  2  9  1  8 11  8 10  9  7  4  5  5  9  7  6 12  3  3  1  8  9  2 10  5\n[17713]  8 10  2  6  8  4 12  7  4  2  9  8  3  4  4  3  4  8  5  5  6  8  1  8\n[17737]  1 12 11  3  2  7 10  6 11  7  3 10 10  5  5 10 12 10 12  1 10 12 10  7\n[17761]  3  7  8 12 12  8  9  4  7  9 11  7  4  8  8 12  5  2  2  9 10  5 11  3\n[17785]  5  4  2  5  8  1  3  9 10 12  3  6  8  1 11 12  5 12  4  6 11 11 10  9\n[17809]  7  5  6  8 12  9  9  8 12  2  1 12  5  4  3 12 12  7  2  7 11  8 12  5\n[17833]  3  4 10  6 10  3  1  6  3  3  5  3  9  3  6  8  2  6  7  7  5 11 12  6\n[17857]  8 10  9  1  9  5  2 10  2  3 11  1  7  1  9  8 12  5 11  3 12 11  8  3\n[17881]  9  8 11  4 10  6  6  8  5  3  4  9 10  7  6  5  8  5  7  4  7  1  9  4\n[17905] 11  9 11  4  9  1  9  1  3 11  6  7 12  3  4 10  8 11  6  1  1  3  9  5\n[17929]  4  4  7 12  1  3  5  8 11  8  8  8 11  3  1  6  9  6  5  3  8  6  5  2\n[17953]  1  6  9  9  1  5  7  4  8  4  8  9 10  5  3  4  9  9 12  4  2 10  2  4\n[17977]  3  7 12  5  1  5  5 12  9  6  2  1  1  9  3 12  5  9  3  2  3  1 10  3\n[18001]  7  4  3  7  5  8  7  5  5 10  7 12 12  7 10  7  3  4  9  4  4  4 12  1\n[18025]  8  4 11  3  3  8 11 11 12  5  6  4  3  4  2  4  3 11  4  9  3  7  7  9\n[18049]  3  8 10 10 11  1  4  4  5  4  2 10  4  6  1  9  7  2  4  6  2  5  5  5\n[18073] 12  8 12  8  5  6  1 11  8 10  7  6  5  5  4  4 11 10  7  8  5  6 12  7\n[18097]  5  5  4  5 11  2 11 12  2  4 10 12 11  9  3  4  6  8  9  2 11 10 10  5\n[18121] 10  7  7  1  1 10  4 12 10 12  1  3  7 10 10 11  7  5  3  9  7 11  2  9\n[18145]  7 11 10 10  8  2  5  9  1  2 11 11 11  1  4  8  4 12  5  7  1 11  2 12\n[18169]  2  8  5  9  6  6  8 11  7  5 11  3  1  8  8  9 10  3  7  1  2 10  3 11\n[18193]  8 10  5 12  6  7  7 12  8  1  1  6  5  5 11  4  7 10  3  4 10 11 12  2\n[18217] 10  8  4  2  1  9 10  2  5  3 11  1 10 11  1  7  4  9  3  5 12  9 10  3\n[18241]  4  1  8 11  9  6 10 10  2  8 11 12  3  4  5  5  7 10 10  3 10 12  4  2\n[18265]  7  8  1 12  7  6  4  6  1 10  1  2  8  5 11  7  7  3  4  3  6  9 10  3\n[18289]  7  1 11  8  2  7  2  4  9  9  6  3  3 10  7  3  6 11  8  5  7  4  9 10\n[18313]  8  3 12  5 10  5 11  5  3  1  5  6  7 11  6  4 10  2  9  8  9  5  4  6\n[18337] 12 11 11  9  2 10 10  8  3 11  6  1  1  9  9  9  6  3 11 10 10  6  8  7\n[18361]  7  6 11  7  3  2  8  9  5  9 12  8  8  6  9 12  2  8  5  7  1  3 11 12\n[18385]  4  6  2  7  1 10 10  7  5  8  5 11 12  2  7 11  4 10  3  4 10  1  6  3\n[18409]  8  2  8 12  8  5  6  9  6  7  3  4  9  8  7  3  1  4 10  6  4 10  5  8\n[18433]  5  8  1  5 12  6 12  5 12  3  9  7 10  7  7  4  6  3 10  8  1  9  1 11\n[18457]  5 10  7 12  3 10 11  7  1  8  5 12 12  5  8  2  8 11  2 10  6  1 11 10\n[18481]  3  8  6 10  9  8 10  2  9  2  2  6 10  9  3  5  3  9  6 12  8  5  8  7\n[18505]  1  4  7  4 11 10 11  7  9  8  4 11  7  6 11  8 12  5  5  9 11  5  7  2\n[18529]  1 11 10 11  8  4  5  4 11  9  1 12  1  2  8 11  1  2  4  7  9  7 12  9\n[18553] 12 11  1 10  6 11  4 10  8  2  5  5 12  1  9 11  7  8 11  6 10 12 12  8\n[18577]  5  1  8  2  8 10 11  2  3 10  5  7  1  3 12  4  4  6 10  2  3 10  7 11\n[18601]  6 10  1 10 11 12 11  7  6 11  3  9 10 11  1 10  3  4 12  6 12 11 11 10\n[18625]  8  7 11  3 11  7 12  7  5  6  5  6  6 11 12 10  8  7  2  3  9  3 12  6\n[18649]  2 11  2  7  2 10  1  9 10  1  7  7  8  1  5 10 10  8 10 12  7 11  1  2\n[18673] 10  7  9  3  8 12  5 10 10 12  5  9  7  7 10 10  3  4  4  9  6 11  4  3\n[18697]  3  8  6  6  1 12  8  2 11  9  4 12  4  6 10 10  2  1  9  1 11  1  9  1\n[18721] 11  4  9  7  8  4 11  5  9  8 11  8  9 10  2  2 10  3  3  8  4  9  9 10\n[18745]  9  3  2  7 12  3  7 11  5 12  7 12  4  2 12  1 12  3  2  8  8 11  2 11\n[18769]  4  9  9  3  1 12 12  8 10 10 12  4  6  7  2  4 12  5  4  1  1  7  8  9\n[18793]  9 10  1 12  7 10  6  5  5  2 12  7  7  3 11  4  3  9  3  4 11  8 10  5\n[18817] 12 10  7  3 10 12  6  7 10  4  9 11 10  1  9  4  2  2 11 11 11  8  1  9\n[18841] 12 12  2  3  3 12  8 11  2 11  6  4 10  4  8  9 11  6  5  7  1 12  6  7\n[18865]  7  3  5  9  9  7  6  1  9  3  5 10  4 11  9 11  1  4 10  5  1 11  6  9\n[18889]  5  4  3  8  2 10  6 10  7  7 11 10  6  8  2 12  6  6  5  1  8 12 11  6\n[18913]  2  7 10  8 10 10  3 12 12  4  3 11 12  2  9  7 10  6 12  1  1 10  1  3\n[18937] 12  4 12 12  8 12  4  8  5  9 10  5  4 12 10  3  4  5 12 12  1  6  4  7\n[18961]  3  2  6  6  9 12  6  2  9  9  2  4  7 12 11  9  6  4  4  3  4  8  7  7\n[18985]  2  2  9 10  2  4  5  6 11 12  8  4  5  5  7  1 10  8  9  4  9  6  3 12\n[19009]  7  1  6 11 12 10  6  8  1  5  9  3 11  7 12  6  9 12  7  3  5  7  3  2\n[19033]  1  6  3  6  2 10 12  1  9 10  3  6 10  6  6  1  8  4 11  4 11 12 10  3\n[19057] 11  4  8  7 12  2  5  2  1  9 12 10 10 11  8 12  8  8  4  7  5 12  3 12\n[19081] 10  1  8 12  3  1  5  3  6 10  9  6 12 12  6  4  9  1 12  7 12 11 12  6\n[19105] 11  5  3  8  7  4  6 12 12  3  6 12  9  5  6  9 12  4  4  7  9  5  7  6\n[19129]  3  9  1  7  9  9 10  1  9  7 12  2  8  5  3 11  6  2 12  3 10 12 12  3\n[19153]  3  9  4  3  4  8  6  9  4  2  1  4  7  8  6  8  2  6  2  2 10  4  8 12\n[19177]  4 12 10 10  8  4 12  3  8 10 11 10  4  8  9  1  1  4  8  4  8  9 11  7\n[19201]  5  9  9 12 12  1 12 11  9  9  8  9  1 12 10  1  9  1  8  9 11  3 11 11\n[19225]  8  1  5  7  8  1  5  9 10 11  5  1  4  8 12  3  9  1  7  9 12  9  9  6\n[19249]  6 11 11  3  9  8  3  2  1  5  1 10  6  8  4  4  1  7  8  3 10 12 12  3\n[19273]  9  2  8  9 10  7 10  6  7  9  3 11 12  6 11  2 10  8  8  8  4 10 10  1\n[19297]  9 12  6  1 11  6  7  9  2  5  4  8  5  8  6  9  2  4 11  8 11  1  8  3\n[19321]  8  4 10  5  1  8  9  2  1  7  4  6  2  1  4  8  5 10  9  1  5  8  9  1\n[19345]  7 11  8  7  3  7  2  5  5  5  4  4 11  1 12  9  1  8  3  7 12  9  1  2\n[19369] 12  5 12  2  5 12  6  1 11  8  8 10  4 10  3  6  4  8  8  5  5  5  1  5\n[19393]  8  5  5  5  5  7  3  4 10 12  4 11  4  8 12 10 12 10  8  5  6 10  1  8\n[19417]  4  7 10  3  6 11  5  5  5 12  6  3  9  4  1  7  2  6 12  3  3  4  6 12\n[19441]  5  6 10 11  5  8 12  9  4  7  7  6  8  7 12  6 11 12  3  3  8  2  1  7\n[19465]  2  3  9  6  7 10 12 11 11  4  5  7  1  9 10 12  9  7 12  3  1 12  3  7\n[19489]  6  1  5 11  3  5  5  5  2 12  7  2  4  3 12  2 10  5  5  5  2  5  6 12\n[19513] 11  4  6 10 10  1  7  1  7  6  2  9  3  6  6  2  7 12 10  7  3  3  6  3\n[19537] 11 10  8 10  8 11  4  9  9  1  8 12  8  2  5 11  5  3  5  5  9  3  4  7\n[19561]  4  3  3  7  8  2 10 12  7  3  5 10  6  8 11  2  9 10  7  3  9  2  9  4\n[19585]  3  1  3 12 10  5  4  2  6  3 10 11  4 11  4 12  7  8  1  6 12  9  1  4\n[19609]  2  8  4  3  9  1  4  6 11  2  2  1 11 10  7  5 12  6  3  3 12  4  4  7\n[19633] 12  5  9  2 12 12  3  5  6  2  5  7  2 12  3 12  9 10  4  8  9 12  8  1\n[19657]  2  8  1  7  1  5  9  8  1  9  2  5 12  9  3  5  6 11  7  4  3  9  7 11\n[19681]  1  6 12  4  4  6  9 10  1  2  5 10 12  1  7  8  8  4  4  4  2  5  8  9\n[19705] 10  8  4 10  5 11  7  5 12  4  1  1  5  3  2 11 10 12  5  6  4  6  5  4\n[19729] 12  4 11  1  5  5  7  5  6  1  5  6  5  8  7  5 11 12 12  7  1  8  6  4\n[19753] 12  7 12  6  5  5  6  8  4  4 10  9  8  1  9  2  7  5  8  9 10  6  7  8\n[19777]  2  2  7  4 11  2 10  9  4  2  3  6  2  4  4  4  3  1  8  1 11  5  3 12\n[19801] 12  2 12 10  5  4  3  7  1  6 10  1 12  4  8 12  1  9  4  8  2  7 12  6\n[19825]  5  7 11  3  6  3 12 11  2  4 10  1  9  1  2  6  1  4  7  7 10  7  8  9\n[19849]  8 10 12 10  1  5 12  3 10 12  5 10 11  9  3  1  5  4  8  8  8  5 12 11\n[19873]  4  5  9 10  7  1  5  5 11  2 11 12  2 10  3  1 10  4 11 11  3  8  2  6\n[19897]  4  4  2  4  5 11  3  9  7  5  9  4  5  2  5  9 10  2  8  8  5 11  2  8\n[19921]  7  2  9 10  3  7  9  6  7 12  3  1  2  1  2  9  9 10  2  2  9  7  5  9\n[19945] 12  6 10  7  8 12  2 11  5  7  8  5  6  8  7  7  8  6 12  4  6  2  8 10\n[19969]  4  5  7  8  4  8  7 11  5  8  2 10 12  4  2  6  9  2  9  7 12 12  7 12\n[19993] 10 10 10 10  4  3  9 11  3  4  2  5 11  9 10  2  1  9  4  7  9  9 11  6\n[20017]  6  5  3  5  6  8  4 10  5  4 10 12  9  3 10  4 12  5 10  2  7 10  3  1\n[20041]  6  2  3  1 12  9  6  5  8  7  7  7  7  7  1  4  2  9 11 10  8 10 12  6\n[20065]  7  8  6  9  7  1  4 10  9  7  4 12 11  6  6  9  7  7  8  1  9 10  6  6\n[20089] 12  5  3  6 11  8  8  9  3  1  7  4 11  1  9  5  3  1 10  9  2  3  4  6\n[20113] 11  3 10  5  8  9 11  5  9 10  2  3  4  6 10  2  4 11  9 11  6  9 12  5\n[20137]  1  3 11  2  7  3  1 10  3 11 10  1  2 10  7 10  1  4  9 10  8  8  8 10\n[20161]  9  3 10  3  5  5 12  7  1  2  6  2  8 11 11  6  5  4  2  7  8 12 11 12\n[20185]  9  2 12  4  7 10  1  4  5 11  8 10  9  1  7  6  2  9  8  2  5  9  9  8\n[20209] 12  4  9  8  9  2 12  4  8  3 11  3  2  8  7  2  9  3  1 11 10 10  3  1\n[20233] 11  6  4  4  8 10  1  7  8  9  2  4 10  1  7  6  6  4  5  1  2  9  4  7\n[20257]  4  6  9  4  4 11  1  9  8  3  7  7  2  6 12  6  7  9  8  6  7 11  7  8\n[20281]  8  4  1  1  3  6 12  4  4  6 10  1 11  1  1 11  4  8 12  9  8 12  9  6\n[20305]  9  9  9  4  9  6  2  8 10  9 12  4  6  9  2  4  5  7 10 12 10  7 10  6\n[20329] 12 10  8 10  9 10  2  5  6  3  1 12  1  7 10 10 12  8  1  8 11  9 12  5\n[20353]  2  2  2  2  8  1  4  3  8  3  1  4  2  6  1  5  4  6  8 10 10 10  8  5\n[20377]  2  3  5  4 10  1  9  1 11  8 10  1  2  9  6 10 11  1  9  7  6  2  4  3\n[20401]  7 11 12  3  2  7  8  4  3 11  9  5  6  6  4  9  5 11  3  3  4  4  9  3\n[20425]  3  4  1  8  5 12 12  3  3  7  8  1  8  4  9  5  9  4  4  4  3  1 12  2\n[20449]  5  4  4  3  6  7  8  4  8  9  1 12  7  5  4 12  2  4  8 10 11 12  6  4\n[20473]  6  5 10  8  5 10  3  6  1 12  5  6 11 11  8 10  3 11  9  1  3  9  7  4\n[20497]  2  2  2  3 12  2 10  7 12  7  6 10  9  2  7  6  7  4  1  6  5  7  4 11\n[20521]  2  7  7 11  8  2  9  8  1  2  2  7  2  3  8  8  4  6  1  2  1  9  9 11\n[20545]  5  2  2  7  6 11  3  7  5  8  4  3 10  6  1  1  9  4 12  9  3  1  3  7\n[20569]  6  9  4  9 11  3  2 11  8  4  9 10  2 12  8  3  4  4  3  8  3  4 11  2\n[20593]  6 10  2  5  1 11  1 12  3  9  6  2  4  9 10  5  9  7  9  5  6  5 10  9\n[20617]  9  1  8  8  4 11  9  3  6  8  9  7  9  2  9  8  9 12  9  4  1 10  1  4\n[20641]  6  1 11  1  7  8  5  4 11  1  9 10  4  9 10  2  3  3 11  1 11  3  9 12\n[20665]  3 11 12  6 10 12 10  2  3  2  5 10  6  8  9  8  6  8 11  4  3  5  3 11\n[20689]  4  6  5  8  5  1 10 10 10  1  3  3  6 10  6  3 11  5  1  1  6  5  4 11\n[20713]  2  2  5 10  9 12  1  2  9  8  5  4  5  5  4 12 11  8  3  5  3  5  4  8\n[20737] 11  9 11 11  8 11  8  5  3  5  1  6  2  4  2  2  2  9  6  3 11  9  8  8\n[20761] 10  8  9  4  3  1  1  8  9  8 11  1  4 10  9  5  7  4 12  3 12  4 11  6\n[20785]  6  9  4  8  2  6 11  6  4  8  7  5  2  7  6  8  5  8  9  4 10  1  1 10\n[20809]  8  9 10  4  9 10  5  2  2  2  5  5  3  6 11  6  2  9 11  8  9  4 12  1\n[20833] 11 12  9  7 12  6  8  5 11  1  7  7  5  3 12  1  8  6  8  4  6  8  6  5\n[20857] 12  7  6  5 10  7  5  2 10  8  4  1 12  7  9  3  9  9  5  5  6  6 10  8\n[20881]  2  6 12  5 10  8  4  9  6  6  8  2  2  7  5 10 12  2  1  6  6 10  8  5\n[20905]  8  3  8  6  2  6  6  8 10  3  9  4 12  7  6  6  6  9  3 10  5  4  6  5\n[20929]  5  6  7 10 10  4  7  7  7  6 12  1  2  9  2 10  6  1  2  1  8  4  9  1\n[20953]  1  3 11 12  6  5 12  5  3  4  9  9 12  7  5 12  4  6 11  5  1  8  5  5\n[20977]  4  2 10  5  4 10  3 12  8 11  5  6  2 11  4  2  8  8  6  7  4  8  8  3\n[21001]  7  2  7  9  7 12  4  8  8  1  8  9  2  3 10  5 10 10  6 12  9  7  1 12\n[21025]  3  1  7  3  3  2  1 12  2  1 12  3  5  8  2 11  3  5  2  8  5  3  5 10\n[21049]  6 12  3  8  5 10  5  2  5 12  4 10  4 10 12 11  3 10  3  3  9  4  4  5\n[21073]  3  1  4  4  7 12  4 12 12 12 10 10  7  5 11 10  5  4 12 11  6  8  8 10\n[21097] 12 11  6  6  6  5 12 10  9  5  9  6  2  6 11  9  1  7  5  1  2 12 12  9\n[21121] 10  8  4  1 12 11 12  9  2  1 10 11 12  1  8  9  6  4  6  5 11 11 10  3\n[21145] 11 12  2  2  1  3  7  7  1  4 11  1 12  4  8 10 10  1 10  3 10 10  5 12\n[21169]  7  9 10  6 11  8  7  3  5  1 12 11  4  3  6  5  9 12  1  9  6  6  6 12\n[21193]  2 12  6  1  3 10  5  3  9 12  3  5 10  9  5  5  9  5  3  1 11 12  6 11\n[21217]  1 10  7  7  5  2  8  5  7  9  4  9  6  9  5  8  3  6  3 10  6  3 12  4\n[21241] 10 10  6 11  1 10 12  6 12  9 10  4  4 10  2 10  6  5  3  8  6  5  5 11\n[21265]  3  3  2 12 11 12  9  8  8  7  8  4 11  3  5  7  4  6  2 10  1  5  2 10\n[21289]  1 10  9  1 12  2  2  1  7  1  7  7  4 11 12 12  1  1  2  6  2  3  6  4\n[21313]  5  5  1  1  2  7  7  8  1  7  4  3  9  1  9  5 11  1  6  9 12  2  3 11\n[21337]  2 11  6 12  5  2 12 12  4  4  5  3  2 12 11  2 10  1 12  9 10  3 12 11\n[21361] 12 11  6  4  4 10  2  2  6  4 11  4  9  5  6  3  4  6  3  4 11  3  9  6\n[21385]  3  4  7 10  8  4  4  6  9  2  7  4  6  5 10  5  5  9  9  4  8  3  5  8\n[21409]  4 12  6  9 10  4  1  4  9  6  7  8 12  1  1  1  6  2  9  4 11  2  3  8\n[21433]  5  6  8 10  8 11  2  9  6  2 11 11  6 10  4  3 10  3  4  3  1  9 10  7\n[21457]  3 10  4  5  6  9  8 11 10  7  8  5 10 10 11  1  7  6 11  2  6  5  1  8\n[21481]  1  8 10  4  4  7  6 11  3  7 11 10  6  6  6  4 11  1  1  7  2  4  5 12\n[21505]  6  8  8  1  9  7  3  8  1  8  7  2  4  9 11  6  6  6  9 11 12 10  8 10\n[21529]  8  5 10 11  2  6  7  7  4 10  2 11  9  3  6  8 10  9  8  3  6 12  3  7\n[21553]  5  7  8 12 11 12  3 11 10  3  4  9  4  3  6  5  1  3  7  3  9  1  8  8\n[21577] 10  5  2  3  1  3  3  1 10  9  7  2  8  4  2  2  6  9  1 11  4  5 10  5\n[21601]  4  8 10 10  4 12  8  9 10  5  1  8  4 11 11  1  3  5 12 10 12 12  8 11\n[21625]  2 11  1 11  1  2 11  4 12  2  9  5 10  1  5 11  8  9  7  2  9  2  6  7\n[21649]  8  5  3  1  9  7  8  5  2  8  4 10  2  9  7  9  9 11  8 11  8  9  4  7\n[21673]  3  7 12  6  5  9  6  2 10  8  3 12  7 10  2 12  5 11 12  6 10 11 10  7\n[21697]  1  5  8  4 12 12  1  6  7  3 10  2 10  6  7 10  4  8  6 11 11  6  7  6\n[21721] 10  1  7  1  4  8  6  7  7  1  7 12 12  8  3  7 11  9  6  9  1  8  2  5\n[21745]  6  6  9  4  4  4 11  3  3  4 12  6  1  6  8  1  6  1  5 12  5  3 12  9\n[21769] 11  2  7  2  7  5  7 12  1  4  7  9  4  6  3 12 10  8 12 10  6  9 10  8\n[21793]  2  2  8  9 10  4  5  7 11  1 11  9  6 12 10 10  1  2 11  8  5  7  5  8\n[21817]  1  9  6 11  3  6  5  6  6  6  9 12  3  3  9 11  4  5  2  9  8 11  9  5\n[21841]  4 11  7  8  1  9 12  6  9  9  6  8  3 12 10 11  1  4 12  6  5  4  4 10\n[21865]  4  7  7  5 11 11 10 11  8  7  8 10 12 12  3  9  2 11  8  7 10  4  6  3\n[21889] 12  2  5  1 10 12  6 11  3  8 10 11  2  7 12  8  2 10  1 10 11  2 11  6\n[21913]  4  4  6  6  6  4  6  9  5 11  4 12  5 12  7  5  9 11  3  5  1  2  7  8\n[21937]  3 11  9  6  6  9  1  1  5  2  1 10  7  7 12  8 10  1 12  8  5  3  1 11\n[21961]  8  6  6 12 12 12 12 12  5  5  8  6 12  3  9  7 10  8 11  2  3  6  3  9\n[21985]  3  3  3  8 12  5  5  7  4  7 10 12 10  4  5  1  1 11  9 10  6  7  7  3\n[22009]  8  7  7 10 12  2  6 12  2 11  8  7  5  4  6  2  2  6  3  7  2  7  5 12\n[22033] 11  8 12  2  9  7  5 10  2 12  6  5  3 10  4 11  8  5  8  6  5  5 11  4\n[22057]  8  8  9  2 12  5  8  8 12  1 10  3 11  7  7  3  4 12  9  3  1  1  3  4\n[22081] 10  7  9  4 11 12  3  6 10  2 11  4  9  7  5  5 10  4  3  1  4 10  8 12\n[22105]  9  8  2  4  6 10 12 12  5  3  6  5  5  2  1 12 10  5  8  8  8  1 11  6\n[22129]  7 10 11  1  9  1  6  4 10  9  2  4  4  1  8  9  5  8 12  6  8  8  1  3\n[22153]  1 10  3  1  8  4 11  4  3  6  2  9  6 10  9  3  4  1 11  5 11  4 10  8\n[22177] 11  4  9 12  1 10  9  7  1  2  8  2 12  2 12 11  4  5  7  3  6  6  9  8\n[22201]  2  6 12  4 12 11 10  2 11  7  1 12  9  5  6  8  1  7  8 10  8  1  4  6\n[22225]  9  4  6  6  4  3  9  8  2  6  5  9  7 12  1  1  7  7  3  4  6  8  5 10\n[22249] 11 12  6  6  2  9  3  4  7  1 12  4  5  5 12  6  7 10  7  4 10  2  9 11\n[22273] 11  9 12  8  1  6  4 11  9  1  5  5 12  1 10  5  6 10 12  3 10  8  6  3\n[22297]  5 10 10  7  4 11  9  6 11 12  9 11  6  6  2  7  8  9  6  3 11  3  1  1\n[22321]  6  4  1 11  1 10  3 10  5 12 11  2  2  2  1  5  5  9  5  5 12  8 11  6\n[22345]  8  4  5  9  7 10  2 12  3  4  2  7  9  4  8  6  9 11  9  5 10  8  8  6\n[22369] 12  4 12  7 12  4  2  7 11  9 11 10  9  6 11  2 12 12  8  6  8  1  3 12\n[22393]  2  2 12  3  3  8  6  7 11  2 10  8 12  1  9 12  9  3  1 12  9  7  8  6\n[22417]  8  6 12  5  2  3  4  4  4  7  2  2 10  3  4  9 12 11  1  6  8  3 10 10\n[22441]  5  7  9 12  8  8  4  6  2  8  1 11 12  7  5 12  2  1  9  4  2 12  7  7\n[22465] 11  2  1  3  6  6  3 12  1 10  3  6  8  8  9 10  4 10  7  5  1  2  9  9\n[22489] 10  4  9  1  4  5  4 12  9  5 10  3  3 11  4  1  3  1  1  1  1 11  7  3\n[22513] 11 10 12 10  1  9 12 12  3 12 12  5  9  8  2  7 11  6  4  3  2  1  6  8\n[22537] 10  8 12  2  5 12  5  3  3  2  1  5  1  5 10  9 11  7  3  8 12  9  7 10\n[22561]  1  8 11  5  8 10  3 10  1  1  4  9  7  3  6  4  6  3  9  4  2  1  4  4\n[22585] 11  1  3  4  4  1  7  4  5 12  9  2  3  9  6  3  1 10 12 11  8  5 10 12\n[22609]  1  1  8  1 10  9 11  5  7 12  6 12  6  4  9 12  2 10 11 10  8  5  9  2\n[22633]  8  6  1  3  3 11  1  5 10  9  1  5 10 10  5  9  9  2 10 11 10  1  7 11\n[22657]  9  6  2  9 10  3  3 10  4  4  5  4  8  3  9  3  5  9  6  5 12  5  5  2\n[22681]  9  2  4  7  4  7  3  6  7  7  7  8  5  7  7  4  2  4  7  6  7 11 10  7\n[22705]  8  4 10  6  5  3  5  3  9  5 11 11  2  7 10  7  4  5 10 10 11  3  1  2\n[22729]  3 12 12  9  8  9  4  5 10 12  2 11  7  6  4  7  1 12  1 11  2  1  6 11\n[22753]  9  2 10  5  7 12  6 10  4  9  6  9  3  6  5  9  2 10  3 11  3  3  5  2\n[22777]  8  8 11  4  8  6 10  8  1  5  3  1 11  9  8  8  5  9 10  3 10  4 12  9\n[22801] 11  9 10  7  1  9  2  8  5  8  9  1  7  4  7  4  5 10 11 11  4 10  4 10\n[22825] 11 11  3 11  1  6 11 11  8 11 10  1  9 11  6  5  6 10  7 10  8  5  2  7\n[22849]  7  2  8  3 10  5 11  8 11 10 10  8  1  7 12  3 12 12  7  6  6  1  4  7\n[22873] 11  8 12  2  7  7  9  5  2 12  8  2  1  9  2 11 11  1  3 10  9  3 11 12\n[22897] 11  2  2  7  4  8 10  1  3  6 11  7 11  3  8  4  5 12  2 11  8  2  8  6\n[22921] 12  9  3  2 12 11  2  6 10  3  3 12  6  9  2  9  8  3  2  9  1  6  1  2\n[22945]  4  1  7  9 10 12 11  8  6 10  2 10  7  7  5  8 11  9 12  6  1  3  1  8\n[22969] 12 10  4  8  5  2  5 10  6 10  4  4  4  9  6 10  3 11 12  8  6  3  8  1\n[22993]  8  7  5  3  9 10  6 10  8  7  7  5  8  4  6  5  1  8  5  1  5  7 10 10\n[23017]  5  8  7  2 11  1 10  7  8  9  1  7 10  2 11  1 11  8  4 12  3  3  5 10\n[23041]  7  4 12  5  5  7  6  3  6  8  8  2  9 10  5  2 12  1  9  4 12  6  4 10\n[23065]  7  6  9  9  7  8  9  1  3  6 11  8  7 12  9  7 10  8  1  9  6  6 10 10\n[23089]  7  4  2  4  6  5 11  5 11  1  2  6  8 10 11  7  4  4 12 10 12 10 12  2\n[23113]  5  8  8  9  4  3  2  5  1  7  1  8  3 12  1  9  4  3  7  5 12  1 11  8\n[23137] 10 10  3 10  6  2 11  6  7 12  7  7 12 11  2  4  8  1  2  8  9 10  3  9\n[23161] 11  8  8  8  6  3  5 11 12  5  1  1  7  9  7  5  7 12  7  1  3  5  9  2\n[23185] 11  5  8  6  6  2  1  4  8  6  3  1  2 11  7  5  2  6 11 10  8 11  6  1\n[23209]  8  6 12  9  8  6 11  5  9  6  9  5 10  3  9  4 10 11  5  6  6  7  8  3\n[23233]  6  5  1  2  7  9  5 11 12  4 11  5  9  6 11 10  9 12  7  1  9  6  3  3\n[23257] 11  2  6  9  4 12  1 11 10  7 11  8 11 12 12  5  3  6 11 12  2  9  5 12\n[23281]  5  5  7  7 10 12 11  1  8  3 11  6  9  3  6 11 10  9 11  9  7 12  7 12\n[23305]  3 11  1  8  3  5 12  8  4  4 12  7  5 12  9  4  1 11 11  8  7  3  5 11\n[23329]  9  4 12 10  4 12  6  2  9  5  8  9  6  9  5  7  6  4  1  9  2 11 11  9\n[23353]  6  9  9  2  1 12  5  9  6  1 12 12  7  5  4  1  6 11  5  6  8  5  8  1\n[23377] 12  4  2  1  9  5  6  2  9  2  9  5 12  6  4  5  3 12  3 10  3 11  4  9\n[23401] 12  1 10  1  5  4  7  7  5  1  1  2  5  7  4  3  2  1  7  8 10  5 10  1\n[23425] 12  9  8  9  7  7  8  1  6  8  9 11  4  4  9  1  8 11  5 11 10  7  9  1\n[23449]  3  8  4  4  4  7 10  1  6 10 11  4  8  7 12  9  6  3  5  8  5  6  8 11\n[23473]  3  5  7  5  7 12 10 12  4 11  1  1 12  6 12 11 12  5  1 11  1 10  8  1\n[23497]  6  9  8  8  5 11  6 10  7  9  7  2  4  1  7  1 10 11  5  6 12 10 12  8\n[23521]  3  4  3  4  1 10  7  9  2  3 12 11  7  1  7 10  1  3  6  6  4  4  6 10\n[23545]  9  8 12  6  8  6  5  1  2  1  5  3 12 11  5  4  9  2  3  3  1  9  4  4\n[23569]  2  2  4  7  2  4  8  7  5  1  3  4  8 10  7  5  2 10 11  4  9  4  6  2\n[23593] 12  5  9  5  6  1  4  7 10 11 12 11  5  6  3  3  7 11 11  3 12  2 11 10\n[23617] 10 12  5 11  2  2 10 11  3 10  3  2  5 11  5 12  8  9  1  7  8  8  8  2\n[23641]  1  1  7  1 10  4  8  5  5  1 12  9 10  9  5 11 12  9  7  8  8 12  8 11\n[23665] 10  4 11  9 10 12  6  7  5  6  3  8  2 10  7 12  5  5  9  2  4  7  8  3\n[23689]  9  5  9  2  9  2  4 12  4  2  5  6  4  8 10  3  9  9  4 10  4 10  8  3\n[23713]  8 12 10  6  6  1  6  3  8  5 11 10  8 10  7 11  4 11  5  9  2  4  8  3\n[23737]  9 11  8  9  7  7  3  4  2  3  9  8 10  1  7  6  6 11  9  8  1  8  9  1\n[23761]  6 11 11  9 12  6  8 12  7  5  8  3  5  6  5  7 11  8  3  4  7  4 11  2\n[23785]  5  2  1  3 12  8  7  6 10  7  4 10  6  9  5 11 10  1  1  4 10 10  7 11\n[23809]  9  8  5  2  8  7 11  7  3 12  2  4  4  7  4  1 10  5  9  8  2  7  1  5\n[23833]  5  2 10  6  6  4  5  1  8 10  4  4  9 12  7  9  8  9  8  8  9  2 10 12\n[23857]  4  8  2  9  5  6 11  4  5  1  3  5  1 11  2  9  4  3  6  3  3 11  8  9\n[23881]  6  7  1  1 12  3  6  1 11  5  9  5  3  5  1  5 12 11  2  9  8  4  5  9\n[23905]  4  4  6  9  4  3  8  8  1  1  1  5  9 11  7  9  8  7  4 11  1  1  9 10\n[23929]  6 10  5  9 10 12  3  9  6  6  3  1  4  4  2  9  5  9 10  6  1  1  4  4\n[23953]  3  4  7  7  7  4 10 12 10 11  1  2 11  9 10 11  9  9  1  4  3 11  1  5\n[23977]  1  5  1  9  8  1  9  3  2 11 12 11  7  4 12  6 11  7  1  4 10  3 11  3\n[24001]  5  1 12  2  7 10 12  8 10  7  8  8  3  2 10  2  5 11  6  6  6  8  4  7\n[24025] 12  9  9  4 12  9  6  2  7 10 12  2  1  9 10  7  9  1 12  3  5  5 12  7\n[24049]  6 10 11 12 10 11  8 10 11 10  2  1  1  4  3  5 10  8 12  1  5  6  2 11\n[24073]  9  7 12  6  5  5  2  7  3  6  7 12 12  8  4  7  5  7  9  8  6  8 11  6\n[24097]  9 12  8 11 11  9  3  7  9  9  1  4  4  5  5 10  9  2  2 11  8  3 10  4\n[24121] 12  6  5  3  8  7  3  5  3  8  6  8  8  6 10  8  7  9 12 12 12  9  2  7\n[24145]  5 12  1  4  6  1  2  5  6  9  6 10  5  3  5  9  4  8 10  8  7  1 11 12\n[24169]  4 12  7 12  1 11  3  4  2  1 12  9  2  1  5  9  8  9  1  7  1  4  3  4\n[24193]  7 11  4  2  2 11  9  1  4 10  2  8  2  2  6  7  8  5  7 12  7 10  3  9\n[24217]  3 11  7  3  6 11  1  6 11  1  8 10 12  2  1  2  3  9  4 11  8 10  4  7\n[24241] 10  1  6  4  5  5  2 10  6 10  8  8  8  4  9  4  8  2  4  8  7  8  3  7\n[24265] 12  4  2  1 11  9  4  3  4 10  4  6  8 10  1  1  7  8 10  1  7 10  5  7\n[24289]  3 11  8  5  9  2 11  4  7  4  7  2  8 10 12  9  9 10  8  1  6  9  2 12\n[24313]  4  8  9 10  6  8  8  1  8  1  2  8 11  7 10 11  8  1  3  3 11 11 10 12\n[24337]  6  3 10 11  6 11  9  6  6  9  6  3  2  4  5 11  6 11  8  8  8  6  6 10\n[24361]  6 12  1  4 10  5  3  6  7  8  5  8  9  4 10 11  3 12  1  4  1 10  9 12\n[24385]  2  3  8  7  7  4  8  8  9 12 11 10  1  2  8  1  5  1  4  7  1 11  1  6\n[24409] 10 10  9  2  9  1  4  7 10 12 10 11  5  7  6  8  5  4  6  9  9 11  7  1\n[24433] 11  5 12  2  3 10 12  9  8  9  9  8  4 11  7 11 11 12  9  4  2  6 11  1\n[24457]  6  8  5  7  9  1  9  4  4  2  2 12  5 12  3  5 12  6  3 10  3 12  7  8\n[24481] 12  8  9  9  4  1  4 11 12  4  7  2  9  3  3  5  4  4 12  2  2  8  8  9\n[24505] 12  2  3  8 11  8  5  8  9  6 10  9 10 10  8  9 10  2  4  3  2 12 11 10\n[24529]  9  1  9  4 11  9 11  2  5  9  3 12 12  3 10  1  2 10  3 12  4  8  2  8\n[24553]  3  9 11  6 11  7 12  1  8  2  8  1  5  7 11 12  1  9  2  9 12  8 11  5\n[24577] 10  6  1  4  8  7  8  6  4  8  6  7 10  5  7  2  4  9  4  7  7  9  1 10\n[24601]  8 10 12  5  4  2  1  8  3  1  3  7  1  6 12 10  8  8  5  5 10 12  3  5\n[24625]  7  5  9  9 12  6  6  6  6  7  6  3  8  7  8  9 10 11 12  8 12  6  3  3\n[24649]  4 11  3  7  2  5  7 10  9  3  8 11  3  9  2  5  7  2 11 11  7  2  4  8\n[24673]  1 11 10  9  5  3 10  3  6  5 12  7  6  8  2  6  5  1  3  4  8  5 10 11\n[24697]  7  6 11  8 10  1  8  7  3  2 11  4  6  3  8  3  9  9  6  7  3 12  2  6\n[24721]  4  6  9 10  9  9  1  3  2  9  1  7  7  4  9 12  5  2  5  4  1 11  2  9\n[24745] 10 11  5 12 10  1 12  1  4  7  7  7  3  6  5  5  3 11  8  7  1  7  6 12\n[24769]  3  5 12  3  4 11  5  7  9  7 10  4  8 10  7 12  9  2 10  7  3  2  1  9\n[24793]  1  9  5  8 10 12 11  1  4  8  1  8  3 11  4  8  5  2 10  9  7  7  7  4\n[24817]  3  4  9  2  9 10  4  8  5 10  2  4 12 11  9 10 11  4 11 12 12  2  9  5\n[24841]  3 12  1  4  2  6  3 12  2  9  3 11  9  7  1  4  8  5  8  5  6  9  2 11\n[24865]  2 11  2 10  4 12  6 11  4  1  2  3 11  4 11  2 10 10  1 11  3 12 12  6\n[24889]  5  1  7 10 12  4  5  4 12  2  6  8 11  8  5  6  1  5  4  2  5  3 12  8\n[24913] 10  2 11  5 10  6  6  9 10 11  6 11  4 11  5  7  6  6  6 12  3  2  8  3\n[24937]  1  2  2 10  6  1  1 10  3 12  7  5  5 10  7  2  8  9  7  3  8  2 12  5\n[24961] 11  4  1  4 12  3 12  9 12 10  4  9  3  5  1 11  9  5  3  9  7  9  5 11\n[24985]  6  2  3  3  2  4  2  6  3  1  6  3  8  8  3  4  9  8  2  4  8  1  1  5\n[25009]  7  8  4  8  3  8  2  5  6  2 12  4 10  9  2  1  3  9 11 10  7  9 12  6\n[25033]  3  7 12 12  3  3  1  1  1  9 10  7  1  7  2  4 11  7 12 10  2  1  7  6\n[25057]  4 12  1  2  4  5  5  7  3  7  3  3  9  1  2  1  9  5  8  5  1  2  9 12\n[25081]  2 11 11  8  9  5  7  5  4 11  6 12  7  4 11  3  5  2  1  8  3  1  1 10\n[25105] 10  7  5  9  8  5 12 11  9 11  2  5  9  1  7 12  5  7 10 10  3  7  7  3\n[25129]  4 10 10 11  7 11  2  5  1  6  7 10  7  4  1  1  6  2  4  9  6  8  2 11\n[25153]  8  1  8 10  1  1  9  5 12  6  1  7  4  2 11  7  7  6  3  5  4  2  1  7\n[25177]  8 12 10 10  1  3 10  1  5 11 11  5  7  8  7  8 12  5  9  6 11  2  1  2\n[25201]  3 11 12 10  7  3  9  8  1  1  6 10  1  7 10  4  7  7  3  6  1  1  8  4\n[25225]  5  5  6 11  6  8  9 10  5  1  4  8  8 12  3  6  6  5  5  4  1  9  4 12\n[25249] 12 10  1  7  9 11  1  4  9  7 10  8  4  4  8  7  1  2  6  9  2 10 10 10\n[25273]  3 11 10 10  4  3  7  7  6 12  2  1 10  2 10  5  6  9  6  2  7  7 11 11\n[25297]  2  7  9  8  6  4  7  9  1  1  4  4  3  5  2  7  7 10  8  2  9 10  8  5\n[25321]  6  5  5  9  8  2 12  5  4 11  9 11 12  8  3  8  1  1  4 11  9 12 12  1\n[25345]  2  5  6 10  1  2 12  6  9  2 11  1  2  8  3  6  9 12  6  3  1  8 12  5\n[25369]  1 12  7 12 12  3  4  5  4 11  5  9  7  8  8 10  3 10  3  4  5  9  4 12\n[25393]  8 11  6  1  7 11  7  5  6  7  1 12  8  9  3  3 12  9  9  4 11  6  4 11\n[25417] 11  9 12  4  9 12  1  9  2  2  1 12 10  1  2  7  2  9 10  3 10  6  7  9\n[25441]  1  8  1  7  9 10  8 11  5  8 10  6 11  9 10  3 12  7 12  7  2  7  9 10\n[25465]  2 11  3  4  7  9  6  9  5  5  9 10  6  7  7  8  7  8 10 11  4  7  8 12\n[25489]  4  4  5 11  5  2 10 12  4  1  2  5  1  7  6  5 10 11  6 10  6  2  4  4\n[25513]  9  5 11  1  2  3  1  7  1 11  8  1 12  8  1  1  7  2  1  6  9  7  9 12\n[25537] 12 12  4  3  9  3  8 12  2  3  7  9  5  6  7  1 11  3  3  9 12  8  9  5\n[25561]  7  6  1  8  2 11  6  3  6  1  4 10  9  1 10  1 12  2  9 10  2 10  1  6\n[25585] 12  2  9  4 12  7  3 12  5  5  6  7  2  8  8 10  7  4  3  7 12  7  4  7\n[25609] 12  8  9  6  1 11  4  7  3 11  6 10  8  7  1  4  3  3  9  2  3 11 10 10\n[25633]  4  4  5  2  8  8  2  6  4  1  9 10  3  2 11  2  3  9  2  2  3  5 10  1\n[25657] 12  8  6  5  1  4  9  8  3 12  2  4  4  4  6 12 12  7 12  5  4  3 12  3\n[25681]  2  5  7  9 12  2  8  3 11  7  8 12  8 12 12  3  8  1 12  5 12  7  2  4\n[25705]  8 12 11  1  4  5  8  3  7  3  4  7  1  3  5 10  9  5  7  3 11 10  3 12\n[25729]  7  9 10  4  3  7  1  7 11 10 12  8  4  1  7  1  2 12  6 11  5  8  3 11\n[25753] 10  8  4  7  6 11 12 12  3  5 10  4  1  5  5  3 10  5  1  1  2  1  9  8\n[25777]  9  3  6  4  5  2  7  8  2  5  5  9 11  5  1  9 11  8  9  2 10  7 10 12\n[25801]  8 10  8  1 11  9 11  8  3 10 10  3  4  9  4 11  9  2  3 12  4  9  5 12\n[25825]  2  8  4 10  9  8 10  6  1  9  6  2  6  7  8  9 12 12  4 12 12 10  1 10\n[25849] 12  9  3 10  1  5  9 11  5  3  8  6 10  7  7 12  9  3  6  3  7 12  4  2\n[25873] 10  8  7  9  2  4  9  9  1  1  1  8 12  1  4  1 10  7  4  7  7  3  8  4\n[25897]  1  2  3  4  2 10  4  2 11  1  9  4  7  8  4  2 10 11 11  7  3  4 10  7\n[25921]  5  3 11  4  3  1 10  6  3  2  1  8  9  2 10  4 11  9 11  5  9 12  5  9\n[25945] 12  9  4  9  4  3 11 12  1 10 10  4 11  8  8  4  4  2  5  2 11  3  3  6\n[25969]  4 12  1  2  4 11 12  7  6  5  3  8  9 10 10  6 10 11 11  8  1  4  1  3\n[25993]  3  3 10 11  6  6  9 12  4  7  5  8  3  1  4 10  9 11  6  5  7  5  1 10\n[26017]  6  3  8  5 11  1  5  9  5 10  4  7  3 10  8  8  3  6 12  5  6  4  3  8\n[26041]  5  9  2 11  6 10 10 12 11 10  6  9  9 10  4  8  2 10  4  1  6  3  2  3\n[26065]  9 12 10  2  8  4  8  2 11  8 12  1 11  2 10  3  9  5  2 10  4  3 10  2\n[26089]  4 10  4  8  2  4  4  6 10  3  2  1 11  1 12  6 11  3  6  9 10 12  4  5\n[26113]  3 10  5 12 12 10 12  8  1  8  4  5  7 10  8  7  2  3  2  8  9  1  6 11\n[26137] 10  7 11  8 12  9 10  6  2  8 11  3  5  5 11  6  7  8  8  8  2  9  7  1\n[26161]  4  1 11 12  5  7 12  7  4  7 10  2  7  8  2  2  3 12  5  5  3 12  6  3\n[26185]  5 10 12  9 10  7  9  1  2  3 12  2  6  7  3  3 12  3 10  1  1  9  1  3\n[26209]  3  8  1  5 12  2 12  2  3 10  5 10  2  5  8  1  4  4 10 12  1  1  3  8\n[26233]  7  6  1 11  7  3  6  8  6  8 11  6 11  2  6  4 12  2  7  8 11  2 12  4\n[26257]  5  2  1  6  7  8  4  8  9  8 11  1  3 12  1 11  5  4  4 12  9 12 10  2\n[26281]  5  8  9 12  8  9  7  1  9  2 11  7  2  9 10  6  8  8  8  7  8  8 10 12\n[26305]  3  7  6 11  7  1 12  3  7  2 10  3 10  5 11 11  5  4  7  5 11 11  3 11\n[26329]  4  2  6  5  4  7  8  5  5 12  6 10  7  8 11  3 10 10  6  2 10  6 11 12\n[26353]  8  6  3 10  7 12  8  8  3 11  9  2  7  6  2  5  3 11  1  1  8  3  4  6\n[26377] 11  4  3  3  7  2  2  1  5  2  4  3  5  6  6  6  8  6  6  2  3  5  8  6\n[26401]  4  5  1  7  4 11  2 11  5 11  9  9  2  7  5  4 12 11  1  5  4  8  4  5\n[26425]  4  4  8  6  2 10  7  6  5  7  3  8  8 11  6  3  7  3 12 12  4  6  5  2\n[26449]  2  1  5  1 11  8 11  7 12  4  7  9  2  8  4 11  9 12  7  6  4 10  1  8\n[26473]  5  8  7 10  4 12 10  8 12  4 10  2 10  3  6  6 10  5  6  9 11  8  7  8\n[26497]  4 12  8 12  2  3  9  4  4  6  3  7  8 12  3 10  6  4  8 10 12 10  1  3\n[26521] 10 12 11  3 12  7  8  4  4  4  8  5  8  1  8  1 11 12  6  9  1 12 12  9\n[26545]  9  6  8 12  8 10  5  7  3  7  1 11  7  4 11  6  4  4  4 10  2  6  7  7\n[26569]  8  8  9  9 10  6  6  5 11  8  8  8 10  4  8  3  4  1 12  8  1 10  5  2\n[26593]  2 10  8  7 12  7  2  9  7  9  4 11 11  6 10  8  3  8  4  4  7  2  7  4\n[26617] 11  1  1  4  2 10 12 10  5 10  4  3  7  6  2  8 12  8  4  9  5  6 11  1\n[26641]  3 12  6  3  4  1  9  9  5 12  7  8  4 12  8 11 11  6  8 12 12  4  2  7\n[26665]  4  3  2  7  6  8  1  8 11  7  1  7  6 11  4  8  4 12 12 10  3  4  7 12\n[26689] 10 10  7  6  1  9  4 11  3  2  1 10  1  5  3  9 10 12  2  4  9  4  9  3\n[26713] 12  1  9 10  9  1  4  2  2 11 10 10  6  8  3  3  8  8  1  8  2 12 11  7\n[26737]  5 10 11 11  3  3  5  9 11  2  2  8  2 10 10  7  6  1  1  2  3  3 12  9\n[26761]  4 10 10  2  1  7 11  4  1  4 10  9  2  8  1  3  7  7 10 12  7  4  6  8\n[26785]  1  6  9 11  9  2  8  1  8  2  2  8  7 11  9 12  8 12  7  3  6  7  6  9\n[26809]  5  4  5  1  4 10 11 11  3  6 12  4  5  9  9 11  8  7 10  1  4  3  4  1\n[26833]  6  7  7 11  8 11  9  7  4  5  1  3  9 10  4  6 12 10  3 10  5  5 10  6\n[26857]  5  6 11  5  4 11  3 10  7  6 10  5  7  5  5  6  1 10  8 12  3  1  5  7\n[26881]  8 12  7  3 11  5  7  6 12 11 11  8 11  7  1 11  4  4  4  2 11  1  2  6\n[26905] 12 11  3  3  5  3  5 12  2  3 11  3  9  5  5  8  7  9 12 12  6  4  7  4\n[26929]  2  4 10  1  5  3  4  3 12  3  3  1  7 10  5 11  2  9  5  5  9  2  3 10\n[26953]  7  2  7  9  6  6  4  4  6  7 11 10  5  4  1  5  9  7 12  1  5  1  2  3\n[26977] 12  5  5 12  8  7 11  1  3  4  7 10 12  1  6 12 11  1  4  8  1  1 12 12\n[27001]  9 11 10  4  8  3  8  7  7  4  3  9  8  2  5  4 12 11  4 12 11  9 10 11\n[27025] 10  8  7  4  5  4  7  6  4 10  1  4  6  7  2  7 10  8  3 10  1  6  7  5\n[27049]  5  8  6  2  3 10  5 12  1  4  5  2  4 12  8  8 12  5  3  7  1  4 12  2\n[27073] 12  4 10  3 12  2  8  8  2  6 10  8  7  8  9  2  2  7  4  4  5  5  7  6\n[27097]  5  8  6 12  3  6  6 11  6 10 11 12  8  7  6  8 12  9  9  1  8 11  3  9\n[27121]  4  1 11  2  9  1  4  8 12  3  6  1  8  7 12  3 10  2  1 11  6  9 12 10\n[27145] 12  7  5 12  2  3 11  7  6  4  9 10  2  9  4  3  1  9  8  4  1  1  1  2\n[27169]  8 10 12  8  5 10  9 11  6  9  7 11  1  8  9  3  8 12  7  4 10  6  8 11\n[27193]  8  5 10 10 11  5  1  9  4  8  6  8  2  3  8  1  1  9 11  3  1  3  5 12\n[27217]  5  9  3  2 12  6 12  7  4  3 11 10  7  9  1 11  7  1  9 10  3  1  8 10\n[27241] 10  2 10  8  1  1  3  9  8 11 11  5  2  3  7  2 12 12  3  7  3  7  8  9\n[27265]  4 10 12  7 11  2  4  7  4 12  8 11 10  7 11  1  8 12  5  4  4  9  3 12\n[27289]  3  7  2 10 12  2  6  7  7  9  6  8  2  9 10  4  7 10  1  6 10  9  9 11\n[27313]  1  6  6  6  8  4  1  5  9  7  5  3  5  3 12  6  8  2  9  1  4  6  6  7\n[27337]  4  7  8  9  9  3 11 10  2 12  9  3  2 11  3  4  3  5  7  8 10  7 10 11\n[27361] 11  8  3  9 12 12  2 12 12  9 11  8  7  3  3  1  6 11  3  8  8  2  3  9\n[27385]  7  5  4  8  9 10  2  6  2  2  6  3  6  1  1  7 10  7  6  9  5 12  6 11\n[27409]  9 12  5  4  2  4  7  2 12  6 10  2  6  4  9 10  6  2  6  9  8  1  9 11\n[27433]  1 11 11  4 12 10 12  5  2  4 11  4  3 11  8  8  8  3  4  7  9 12  8  8\n[27457]  3  7  5  8  4  9  8 10 11 11 11  5  2  9  8 12  2  1  2  4 11  5  1  1\n[27481] 10  4  7  1  7  4  9  8 12  3  5 11  1  3  5  7  5  5 10 12  7 11  9  6\n[27505]  5 10  9  4  7  5  9 12 10  4 12  2 11  9 10  3  2  7  8  6  3  8  8 11\n[27529] 11 11 11 11 11  1 12  9  4  7  4 11  1 11  2 12 11  5  1  4 12  3  5  3\n[27553]  8  1 10  1  5  4  7 10  4  7 12 12  6  9  9  5  4  5 10  1  2  3  1  7\n[27577]  9  9  9  4 10  2  7 10  5  2 12  2  1  9  7 12  2  8  6  5 12  2  1 12\n[27601]  5 12 11 12  3  1 12  7  4  3  7  3 11  6  8  7  6  2  9  4  6  1  7  1\n[27625]  1  6 12  3  5  8  6  4  8 11 12  2 10 11 11  8  7 12  8  5  3  3  2  3\n[27649] 10  9  7  4  2  5  2 11 12  1 12  1 11  8 12  3  5  6  7  2  9  5 11  7\n[27673]  6 10  6  6 12  2 11 10  7  6  1 11  3 12  5 10  7  9  1  8  1  2  5  1\n[27697]  8  8  5  4 10 10  7  1  7  7  5  2  9  1  1  1  3 11 10  1  4  3  4  8\n[27721]  4  1  3  5  9 10  9  5 10  3  6 12  7  2  2 10 11  4 11  6  1  3  2 10\n[27745]  1  3  5 12  3  9  4 10  9  1  7  5  2 12  3 10  6  8 12  9  8  2  7  3\n[27769]  4  9 10  7  1 12 11  9  5 12  5  6  3  7  9 11  4  6  8  1  2  3  1  8\n[27793]  3 11  7  2  4  5  5  2  7  6  4  5  2  1 10  5  3  2  3 11  7  9  2  6\n[27817]  2  4  5 10  9  3 12  5  5  6  9 11  6  8 11  1  5  8  2  4 12  4  8 10\n[27841]  8  1  3 11  9 12 12  1  3  9  7  9 12 11  1  8 10  9 10  1  6  3  1  9\n[27865] 11  3  7  2  8  5  6  5  4 11  7  9  4  9  9  6  4  9  8  6  4  4  3  8\n[27889] 11  5  7  6  2  3  9  1  4  9  3  1 10  6  8  4 12  4  8 12  7  8  9  4\n[27913]  8  6  8  8  3  5  7  8  3 10  5 12  9 12  4  1  8  6  6  5  3 11  9  1\n[27937]  4 12 10  5  6  3  5  4  6  8 10  9 10 12  7  9  5  3  6 12  3  1  7  1\n[27961]  7  2  2  4 12  5  7  6  3 10  7  4  1  7  2  3  8  4  4  8  6  6  5 11\n[27985]  1  9 11  5  2  6  5  6  5 11  3  8  8 12  7  7  8  1 12 11 11 12  3  9\n[28009] 10  7  5  9  6  5 10  3  3  6 12  5  8  8 11  2  8  5  6  6  5 12  1  2\n[28033]  5 12 12  1  8  7 11  5  8 11 12  7  1  3  4 11  5  3  3  3 10  3  9  1\n[28057]  3  9  4  3 11 10  7 12  6  6  2  3  6  1  7  9  7  3  7  9 11  2  3  7\n[28081]  4  7 12 11 10  7  3  8  5  4  3 12 10  1  4  9 11  1  3  1  7  5  6  1\n[28105]  3  8  9 10  7  7  1 12  7  6  6  7  5  4  2 12  7 11  7 12 11 12  8 11\n[28129]  7  5 10  5  2  6  8 12 10  4 11  7  4  9  1 11  9  9 10 11  2  9 12  2\n[28153] 12  3  8  2  1 10  4 12  2  1  2  2 12 12 11  3 11  1  2  9  7  4 12 12\n[28177] 12  5  6 11  4  5 10  1  8  1  2  3  1  6  4 11  5 11  4  4  6  7 10  8\n[28201]  1  8  8  3  3 12  1  3 12 10  1  9  3  8  8  4  7  2 11  5 12  1  5  3\n[28225]  7  9 11  1  9  2 10  9  7 12 11 11  9  7  5  2  4 10 10 11  8  7  5  5\n[28249]  8  9 10  4 12  6  4  3  4  1  9  1  3  6 11 11  2  7  4  7  6  6  3 12\n[28273]  8  2  2  5  9  3  2  7  2  2  1  3  5  4  6  6  4  5  8  4  5  7  1  6\n[28297]  9  7  1  5  2  4  4 11  8  3  9  9 12 11  2  3  6  2  6  5  7  3  8  1\n[28321]  1  4 11 11  1  9  2 11  5  2  8  9  3  4  9  3  3  4  5  2 10 11  7  6\n[28345]  2 11  4  5  7  2 12  7 10  1  9  3  7  5  1  3  9 10 10 10  9  9  9 11\n[28369]  6  6 10  3  5  3  1  9  5  6  6 10  3 11  8  3  7 10  9  9  1 12  9  9\n[28393]  6  6  6  4  8  2  4  6  5  1  6 12  1 10  5  9  6  5  3  1  6 12  4  7\n[28417]  6  8  2  4 12  6  3  7 10 12  2 12  4 10  4  4 10 10  5  2  8  9  5 10\n[28441] 12  7  6  3  1 10  1  7  6 11  6 12  1  8  7  5 12  1  2  6  9  2  2  8\n[28465]  2 10 12  2  8  7  5  7  1  3  5  9 11  4  4  3 10  4  6  4  9  3  4  9\n[28489]  4 11  7  5  2  4  9  6 11  5  9  5  2 11  7 11  4  9  2 11  6  5  3 11\n[28513]  8  5  8  5 12 12 11  3 10  2  7  9  8 12 12  4  1 11 10  1 10  5  7  4\n[28537] 11 12  2  4  7 12  8  7  9  5  5  3  7  9 12 11  7  1 11  3  8  1  4  1\n[28561]  1  8 12  3  4  3  1  5  5  7  3  7  8 12  5  1  9 12 12 10  8  6  7  8\n[28585] 11  7 12  2  4  7  7 10  7 10  9  7  4 12  1  5  3  7 12  7  5 10  3 10\n[28609] 12  8  7 10  3  5  5  1  8  6  1  2  8  9 12  3 11  5  3  9  4 11  2  6\n[28633]  7  3  5  9  2  3  2  1  5  6  3  5  5  8 11 10  3 12 12 12  3  3 11  6\n[28657]  6  3  3  1  1 11  6 12  1 10  2  5 10 11  7 11  6  8 11  7  2  5 10  6\n[28681]  7  3 11  9  8  3  7 12 12  3  8  9  4  2  2  9 10  7  2  3  1 12  9  9\n[28705]  1  2  3  5  1  4 11  8  5  9  5  6  1 10  1 12  2 11 12 11  8  6  1  6\n[28729] 10 10  1  2  2  4  7  5 12  3  6 12  2  9 10 12 11  3 11  9  6  2 10 12\n[28753]  3 10 12  2  7  6  8  3  2  7  6 11  6 12  9  9  6  7  7  8 12 12 10  1\n[28777]  3  1  3  8  1 12 12  8 11  3  7  3  8  4  7  9  2 10  4  9  5  2  3  8\n[28801] 10 12  7  6  7  2  5  1  4  5 12  6  5  5  5  8  1 12 11 11 12  4  5  8\n[28825]  1 10  1  6  1  3  2 10  9  8  1 11  3  4  1  5  1  5  1  1 12  4  1  6\n[28849]  2  4 12  9  4  4  8 10  4 11 10 10  1  4  7  2  1  3 11  4  6  9 11  8\n[28873]  3  8  8  2 10 10  6  5  5 12  1  7  4  5 12  3 10 11  3  9 11  1  2  8\n[28897]  3  7  5  6  8 11  5  5  5  6  2  5  9  8  6  4 11  6  2  7 11  6  8 11\n[28921]  6  4 11 12  3  1  3  6 12  1  9  5  4 11 10  3 12  1 12  9 10  3  3  1\n[28945]  4 11  6  4  9  3 12  6  1  9  9  1  7  7  3  9  3  6 12 10  1  6  1  6\n[28969]  5  1  2  5  4 10 11 11  7  2 12  5 11 10  5  1  6  9  3 12  2  9  6  8\n[28993]  9  8 11  4  6  1  1 11  7 12  8  8  3 12  1 10  2  1  4  6  1  9 11  8\n[29017]  3 10 10  9  9  7 11  9 12  3  5  8  5  1  9  6 12  8 10  8  4  5  7 12\n[29041] 10 11  9  3 11 12  5  6 11 10 10  3  7  5  1  6 12  1  1 11  9  8  1  9\n[29065] 10  8  9  4 11  1  4  1 10 12  7 11  1  1  3 11  4  2  1  9  8  3 10  1\n[29089]  2 11  7  5  9  6 12  7  9  9 10  9 11  2 11  5  1  3  4  3  3  3  6  5\n[29113]  5 10  5  1 12  3 12 11 12  4  4  2  5  6  2 12 12  5  5 11  3  5  4  1\n[29137] 12  4  2  8  3 12 10  1  7  4  3 11  4  7  5  9  8  5  5 12 12 12  7  4\n[29161]  2  5  7  3 10  4  6  3  2 12  6  7 11  4  6  8  9  7  5 10 10  7  4  6\n[29185]  4  8  6  4 11 10  7  8  3  2  3  2  9  7 11  2  4  2  9  9 11  4  3  1\n[29209] 12 10 10  4 10  6  1  5  4  7  1  4 10  1  5  7  6  9 12  5  5 10 12  5\n[29233]  4  4  8 11  9  6  8  9  8  9 12  2  3 10 10  8  3  1  6  7  1  6  4  9\n[29257]  4  8 11  4  5 11  8  4 12  8 11  8 11  2  3  9  8 10  6  8  3  5  6  1\n[29281] 11  7  3 10 12  7  9 12  7 12  9  5 12  7  6 10  1  4 11 10 12  3  7  1\n[29305]  8 10 12  8  4 10  7  9  7  4  3  9  2  3  8  7 10 10  9  1 11  4  7  2\n[29329]  4  9  1 12  2  3  4  4  8  4  9  5  9  4  6  1  2 10 12  7  6  7 12 11\n[29353]  7  4  8  2  6  3 10  7  2  7  4 12  6  8  8  9 12  8  8  8 11  2  8  5\n[29377]  8  3  3  9 11 10  2  2  1  8  5 12  6  9  1  5  1  4  5  4  8 11 12  8\n[29401]  2 11  7  4  4  4  1  1  7  3  3  2 12  1  9  5  8 11 12  9  7  6  7 11\n[29425]  6  3  4  2  3  5 10  7 12 12  6  6  2  9  1 10  4  4  5 12 10  8  7  1\n[29449]  8  1  6  3 12  7  9  9  3  9  6  7  9  6  1 10  7 11 12  3  4  5  5  5\n[29473]  2 12  5  4  7 10  8  4  9  4  8  4  1  1  4  3  9 11  1  9 11  1 12  5\n[29497]  9  9  3  8  9  8  7 12  6  3  8  2  3  5  6 11  6  7  5  8  2 11 12 12\n[29521] 10  5  8  2  1 11 10  7  3  4  6 10  4  6 11  6 12  4  1  7  9 10  4  2\n[29545]  7  2  4  4  1  7  2  2 12  3  8 11  6 10  8  1  8  7 10 12  6  5  9  1\n[29569]  6  9 12  7  5  6  3  6 11 10  4  4  3  9  5  7  3  4 12  3  6  8  3  8\n[29593]  9  4  2  6  7 11  1  7  6  2  1 10 11  3  7 12  7 10  7  5 11  1  7  9\n[29617]  1 10 12  3 10  5  4 10  7  5  6  1  2  6  8  2  9  8  7  3 11  4  5  4\n[29641]  8  3  3  3  1  1  8  4  8  9  7  7  1 10 12  6 11  6  1  3  4 10 10  3\n[29665]  4 11 12 10  7  7  4  4 12  5  6 11 10  9  6  4  3  8 10  9  9  4  8  6\n[29689]  2  6  9 11  4  1  6 11  3  4  7  2  2  9  7  3  3  8  8  8  2  7  5  3\n[29713]  5  2  5  4  8  1  7  7  8  3  9  5  8 12  2  3  6  5  6  7  4  8  4 12\n[29737] 12  4 12 12  8  1  9  4  5  5  9  9  4  5  6 12  5  5  4  5  7  4  4  5\n[29761]  7 10  5  3 10  1  5  2  1 11 12 12 12  4  3  9  9 10  4  6  9  2  4  3\n[29785]  4  1  7 12  2  8  6  1 10  9  9 11  4  2  7  4  8  8  7  2  5  6  3  6\n[29809]  2  1  5  5 11  8  5  1  9  8  6  6  5 12  6 11  2  8  2  4 12 11  8  4\n[29833]  3  1  7  5  8  7  8  9  8  6  3  3 12  8 10  5  6  9  7  7 10  3  2  6\n[29857] 10  9 12  8 10 10  4  8  5  1  6 12  6  8 10  1  9  6  7  7  8  5  4  8\n[29881]  4  6 10  1  3  5  8  6  4 12  5  1  1  5  1 10  5  1  8  5 12  2  5  6\n[29905] 11 10 10  1  1 11  9  9 10 11  4  1  1  6  7  8  7 10  5  3  3  5  8  4\n[29929]  3  2  7  3  2  3  4 12  4  2  2 10  3 10  9 12  4  9 12  2  6  5  2  5\n[29953]  5  7  4  4  9  2  9  7  7  9  7  8 10  3  3  3 10  6 12  5 12 12 12 10\n[29977]  1  9 10  1  2  8  5  8  7  7  8  7  7  3 11  7  3 10  8 10  2  3  8  7\n[30001]  9 10 10  4 10  9  2  3  7  5  6  7 12  4  8  9 12 11  3 10 11 12  3  9\n[30025]  6  9  5  1  4 12  1  3 10 12 11 11  8  2  2  3  3 10  3  3  6 10  2  4\n[30049]  6  6  5  2  8 10  4  7  6  7  9 12  2  1  8  5  3  3 10  5  2  5  8  4\n[30073]  4  5  9 11 10 10  4  9  3  6  7  3 12  8  5  4  3  1  7  4  6  4  3  3\n[30097]  9  9  1 12  1  3 12 11 12  4  4  5  6 10  4 10  9  7  1 10  7  6  9  2\n[30121]  4 10  8  5  2 10 12  9  2  4  3 12 12  6 12  3  4  5 10 12  8  8  2  1\n[30145] 10 10  4  7  2  3  1  3  3 11  4  5  9  4 10  7  7 11 12  3  4  9 10  5\n[30169]  6  6 12  3  7  2  2  5  3  8 11  6  9  5  3  9  7  5 11  6  9  9 10 10\n[30193]  6 10  3  6  4  3  8 11  2  4  6  6  4  3  4  5 10  1 10  1  3  9  5  8\n[30217]  5  2  6 10  4  6  3  5  5  9 11  9 12  2  5  9  3  5 10  8  8  7  7  3\n[30241] 12 12 10  6  6  5  7  1  5  8  6  3  5  6  1  9  6  8  7 12  4  3  6  2\n[30265] 12  3  6  5 10  3  6  9 11  1  5  4  4  9  4  6  8  3 10  6  1  6  8  6\n[30289] 12 10  6  9  2 10  1  2  7  3  7  6  3  3 10  3  9  8 11  4  7 12  9 12\n[30313]  3 12 11  9  7  7  6  9  5  5  2  3  1  4  7  5  3  8  9 12 10  9 10  9\n[30337] 10  8  1 12  4 11  4  5  1 11  9 10  5  5  5  2  9  8 11  5  3  8  1 12\n[30361] 12  8  4  1  4  7  8  3  3 10  7  4  8  6 12  2  5  3  5  7  2 10  1  8\n[30385]  2  9  8  4 12  1  2  5  9  6  5  4 11  5 11  8 10  4  3  6  4  5  2 11\n[30409]  5  3  7  2  6  9  7  1  4  6  1 11  9  6  8  2  9  2 11  5 11  5 10  4\n[30433]  7  8  9  9 10  4 10 10 10  4  3  5  8  8  4  2  8  3  1  3  2  9  4  1\n[30457]  4  2 11  8  5  5  8 10  2  2  7  4  9  9 12  3  3  1 12  4  7 10  4  9\n[30481] 12  9 10  6  1  2  6  9 11  6 10  6  5 10  7  6  1  9  5  9 11  6  4  1\n[30505] 11  7  4  8  9  8 12  5  7 11  1 11  1  1 11  3  7  8  3  6  6 10  2  4\n[30529]  1 10  5  2 12  4  3  9 11  8 11 11  3 10  6 11  4  7 12  1  9  8  5  4\n[30553]  2  8  7  3  3  6 12  7 12  4  9  8 11  7  3  3  2  6  8  4  8  6 12 12\n[30577]  5  5  5 10  9 10  5  4  9 11  9  9 12  4 11  6  6  6 10  4 10  1  5 10\n[30601]  8  2 11  4  9  9  5 12  9  2  7  2  1  3  8  9  9 10 10  8  7  5  3  9\n[30625]  1  9 11  8  9  7  8  2  3  5  6  8  9 11  8  5  9 12  6  2  3 11  2  1\n[30649]  7  3  3  1  3 11  1  2  1 12  7  2  9  6  7 11  5  9 12  8  3 10  9 12\n[30673]  6 10 11  9  6 12  8  1  3 12  8  2 11  3 11  3  3  3  5 11 12 11  3  8\n[30697]  8  2  9  9  2  8  4  6 10 10 10  1 12  2 12  4  3  9  7 12  3  4 12  7\n[30721]  1  1  6 12  8  7  7  1 10  3  6  9  9  2  2 11  2  3  4  4  5 10  8 11\n[30745]  4  8  8  8  7  7 11  1  4  1  5 12 11  1  3  4  6  9  1  2  2  6  4  9\n[30769]  6 12  4 11 11 12  9  4  9  5 11  9  8 11  5 12  9  5  4  9 10  3  2  5\n[30793]  2  9  1 11 11  2 11 12 11  6  7 10 12  1  1 12  8 11  9  7 12  7  3  5\n[30817] 12 10  6  5  7  8  8  2 12  2  3  6  5  7  5 11  1  6  5  2  1  3 10  8\n[30841]  8  3  6  7  3  7  5 11  4 12  4 11  3 10  3 11 10  7  9 10 12  5  3  6\n[30865]  8 10  1  7  5  4  3  9  1  9  5  9  1 12 10  9  6  8 10  2  2  9  1  4\n[30889]  2  1  8  4  3  2 12  4  6  7 10  6  8  1  6  3 12  1  9  6  7  2  7 11\n[30913]  1 10 12  3  2  9  1  2 12  2  8  2  7  2  8  1 10  1  8  8  6  9  7  1\n[30937]  4  3  5  4  2  7  3  8  3  8 11  3  6 10 10  9  7  7 12 10 11 12  7  3\n[30961]  1 10  1  3  2  6  3  9  5  9  2 10 12 10  5  6  9  6  4  7 10 11 11  9\n[30985]  9  5  3  7  8  7  8  1  7 12 10  4  1  2  8 10  7 12  8 10  6 10 11  9\n[31009]  1 10  4 11 10  2  1  1  2 11  9  9  2  7  1  7  4 10 12  7 11 12  2  1\n[31033]  4  4  8 12 10  1  9  3  1  9  7  1  2 12  6  3 10  5 12  5 11  3  3  5\n[31057]  9  1 11  7 10  2 10  1  1  9  2 11 10  9 11 12  5 10 11  1  3  3  3  2\n[31081]  4  3  9  1 11  2 11  1  5  5  6  4  5 11 10  1  8 10  3  6  2  9  5 12\n[31105]  1  1  8 11  7  3 11  4  3  5  1 10 11  5  9  5  6  7 11  7  6 10  5  3\n[31129] 10  8  6  9  1  9  4  2  2  9  1  7  3  4  4 12  5  4 10  9  9  5  7  8\n[31153]  5  9  4  9  6  5 11  2  2  6  4  3  3  6  3  2  7  2  6 12  8  8  1  8\n[31177]  8  3  9  1  7 12 11 12  7  5  2  8  1  1  5  5  1  3  2  2 10  7  3  6\n[31201] 12  8  9  1  3  7  9  3 12  6  5 12  8  3 10 10 10  1  3  8  1 10  7  2\n[31225]  5  5  1  3  8 10  6  3 10  2  6  8 12  1  3  2  7 11  2 10  1  1 12  5\n[31249]  3 10  3  4  6 10  4  3 11  9  6  6 10  9  3  5 12  9  7 12  5 10  4  5\n[31273] 10  5  3  5  6  4 10  1 10  3 10 12 10 10 11  5 12  3  9  3  3  4  3  1\n[31297]  5  6  5  5  3  8 11  5  2  5  8  6 12 12 11  1  3 10  3  2  8 12  1  3\n[31321]  4 12 10  2  9  9  2  4 11  9  4  3  3 12  7  9  7  7  8  5 11 11 10  1\n[31345]  6  5  3  3  9 12  8  2  2  8 11  8  4 12  9  7  7  1 10  3 11 11 12  7\n[31369]  7  7  1  5  2  5  4  6 12  2  3  7  5  2  7 12  3  6  4 11  2 10  9  3\n[31393] 10  7 11  7  2  1  9  3  5 10  4  4  8  1  2 11  9  3  6  5 11  6  1  2\n[31417]  7  8  3  5  8  2  3  4  2  7  7 11  5  9  7 11 12  8  3  7  3  3  9  3\n[31441]  3  6  6  3  4  7  7 10 12 12 12  9  3 10 12 12  5  7  5  5 12  1  6  9\n[31465]  9  7  7  7  1  8  2 12 12 11  5  7  4  6  2  1 11 10 10 12  7 12  9 11\n[31489]  9 11  2 10 11  2  4  5  4  6 12  8  1 10 10 10  4  1  8  8  2 10 11  1\n[31513]  4  7 10  3  1  5 10 10  8  5 11  4  2  5  7  5  5  4  7  8  6  2  5  9\n[31537]  6  9  1 11 11  4 12  6  5  9  8  1 11  9  4  2  9  7 12 12  4  4  7  1\n[31561]  2  8  6 12  4  4  5  9  6  4  4  3  2  2  7  2  3  7  5  2  5  5  3  2\n[31585]  1 12  1  3  6  6 12  4  4  6  7  5  4  7  4  3  5  8 12  8  9  7  8  5\n[31609]  7  5  7 11  3  9  1 11 12  5  2  1  6  1  1  3 12  8  6  1  4  1  9  5\n[31633]  8  2  6  4 12  7  3  1  6  5  6  6  1  9  1  9  7  1  6 12  1  6 10  4\n[31657]  7 10  4  8 10  7  1  9  2  3  4  7 12  4  8 12  2 12 12  9  1  9 11 10\n[31681]  6  9 12  6  9  1  6  9  6  4  8  2  2  8  6 11 10  5 12  9 11  1  5 12\n[31705] 11  4  9  8  2  7 11  9  4  8  1  9  3 11  2  1 12  8  3  5  4  9  9  8\n[31729]  9  6  5  2  7  8  9 11 10  4 12 12 10  4  5  4  8  5 10 11  9  8  2  1\n[31753]  4  7  8  7  6  1  5  3  1  3  1  9 10  9  2  4  4 12  2  5  7  7 12 12\n[31777]  4  1 12  2  3  5 10  5  6  4 10 12  7  3 12  9  3  5  6 12  3  8 12  9\n[31801] 11  5  1  7  1  1  7  8  5  7  9  7  5  3  6  4  2 10  7 11 12  7  9  2\n[31825]  8  6  3  7  1  1  4  4  8 10  9  4  9  7  1  4  8  9 11  9 11 10  9  4\n[31849]  5 12 12  3  2  5 10 12  9  1  6  5 11  5  3  2  9  5 11 11  5 11  3  5\n[31873] 11  2  4  9  4 12  4  3  6 12  4  8  6  2  5  7  6  6  6  4  3  6  9  3\n[31897]  4  7  7  4  3  6  6  1  8 11  6  1  8  6  8  6 12  8  6  9  9  1  9  8\n[31921]  9  2  3  1 11 11  6 12  1  1  2  4  8  5 12  9 11  3  7  7  2  9  9 10\n[31945]  3  9  7  3  6  2 12 10  8  1  4  7  6  6  1  8  5  1  4 11  3  2 11  1\n[31969]  6  9  8 12  6  6  6 11  6  2  6 12  3  1  2  6  7  6  8  7 11  7  4  2\n[31993]  4  1  9 11  1  8  2  8  1  5  8 11  1 10  8  8 10  2  7  5 10  6 12  2\n[32017] 10 12  3  8 12  7  3 10  2  8  3  4  2  4  4  7 12  7  7 12 11  5  9  5\n[32041] 10  4  1  7  1 10  1 10  6 11  8  4  5  5  1 11 12 11  3 12  8  7  8  5\n[32065]  1  7  2 10  4  7  8 12  3  4  1  3  3  9  7  1 12  1 11 10  4  9  3  8\n[32089] 11 12  9  1  5  6 10  3  8  2  4  4  9  5  1  8 12  2  6 10 11  4  4  1\n[32113] 12  1  4  1  4 10  6  2  4  2  1  7 11  1  6  3  6 10  4  4 12  3  2 12\n[32137]  2  4  4  9 11  8  7 11  6  8 12 12  3  2  8 12 11  6  3 12 10  5  5 10\n[32161] 10  2  9  6 10 11  9  1  4  7  9  4  8 10 12 11  2 11  4  4  9  2  3  2\n[32185]  3  9 10  3  7  7  4  8  2 12  6  8  5  4 12  4 10  3  5  4 11  7  2 11\n[32209]  3  5  7  5  3  5  7  4  6  3  8  5 10  6  2  6  1  6  8  5 10  4  7  2\n[32233]  9  7  7  5  2  6  1  7  3 11 11  4  8  2 11 11 11  6 10  8 11 10  6  4\n[32257]  5  6  8  4 12 11  1  6  2  8 12 12  6  1 10  6 10  2  2  5 10  2  2  9\n[32281]  3 11 11  7 10  4  7  3  3  9  7  6  7  7  9  3  2  9 10  6  6  4  2  1\n[32305]  4 10  2  6  7 10  1  5  3 10 12  9 12  3 10  8  2 12  5  4  3  5  9  8\n[32329]  5  7  7  3  2 11  5  1 10  4  9  5  8  9  4  7  6  7  5  2 11  2  8  2\n[32353]  7 11  4 12  2  4  8  7  7  3 12 11 10  4 12  4  5  1  1  9  7  6 11  3\n[32377]  4  9  3  4 11  3  7  7  7  4  7 10  1 10  7 12  3  4 12  2  1 11  2 12\n[32401] 11 11  8 12  4  8  9  3  1  3  3  6  1  1 12  4  9  3  7  8  5 10  9 10\n[32425]  4  4 11  3  5  9  7  2  4  8  1  9  6  9  3  4  4  8  6  1  4 10  3  1\n[32449]  2  4  3  2  7  8  7  1  5  6  1  9  2  2 12  9  8  6  4  2 10  9  7 10\n[32473] 10  5  3  8  3  5 12  2 10 11 12  3  2  5  5  3  3  5  6  5  3  2  2 12\n[32497]  1 12 10  9 12  3  3 11  2 12  5 10 10  7  6  5  2 12 10  1  7  8  9  6\n[32521]  6  7  8  9  5  6  6  1  3  6  2  1  2  7  3  3 11  7  6  6  2  4  6  7\n[32545]  7 11  5  5  1 10  4 11  5 12  8  3  9  4  3  4  8 12  9  9  3 11  3  4\n[32569]  2  7  7  4  3  1 10 11 10  9  5  4  3  5  5  5  7 11 12  7  7 10  1  2\n[32593]  2  4 11  4  8  6  8  2  3  5  7  7  1 11 12 12 11  2  3  1  4  9  9  4\n[32617]  4  4  6  3  9 12  2  2  9  3  9 12  2  8 12  5  1 12  4  8  1  9  5 11\n[32641]  4  1  7  2  8 12  7  7  8  4  2  8  6 10  7 11  6  3  5  5  7  8  1  3\n[32665]  5  1  4  1 12 12  1  4  9  5  3  5 12  3 12  5 10  5  7  3  4 12 10  8\n[32689]  8 10  2  5  5 10  8 11  8  9  3  8  1  4  3  8  7 11  3  6  6  7  5 11\n[32713]  1 12  9 11  7  7  8 12  1  8  3 10  9  9  1  4  4  7  6  3 10  3  8  5\n[32737]  7  4  4  7  6  2  8  4  4  4  1 10  1  9 12  3 12  7  8  8  6  8 11 12\n[32761]  5  9 11  2  3  5 12  4  5 12  2 12 12  4  5  5  5 12  4  2  3  3  9  6\n[32785]  6  3  7  1  4 10  9  2  3  9 10 12  2 10  8  8  9  1  8  4  4 10  2  2\n[32809]  8  8  4  4 10 12  3  6  7  6 11  6  2 12  8 10  6  3 12  2  5  8  5  6\n[32833] 11 11  3  5  8  5  8  4 11 11  1  8 12  4 10 10  5  8  4  8 11 11  8  2\n[32857]  9  2  5  2 10  3 12  2  9  8  4 11 11  1  6 12 11  3 12  2  7  3 11  6\n[32881]  3  2  3  1  9  6  4  4  6  3  6  4 10  7  9  8  9  2  1  3  1 12  8  6\n[32905]  7  2  1  1  3  3  5  5  8  5  9  5  7 10 12  2 10 11 10  3  9  5  7 11\n[32929]  7 10  5  6  7  8  1 12  1  8  5 10  2  2  6  5  3  6 12  2  1  1  5 10\n[32953]  1 10 10  9  9 11 12  3 11  5  3  4  1  7 10  8  3  9  5  1  4  8 11  3\n[32977] 12  5  3  9  2 12  7  6 12  7 11  2  9  6 12  2 10  3  2  3 11 10  9  8\n[33001]  9  6  4  4  6 11 10  8  7  5 11  4  7  7  5  2  4  3  2  8  3  2 10  6\n[33025]  7  2  9  6  2 10  3  5  7  3  5  5  9  1  6  1  6  2  5  6  9 10  3  4\n[33049]  7  9  1  8  1  1  8  5 12  7  5  5 11 11 12  6  8  4 10  9  4  9  9  3\n[33073]  3  9  1 11 10  8  6 10  9  3  1  8  4 10 10  6 11 10  1  4  7  2  8  5\n[33097]  5  5  3  4 11 12  2  6  7  7  7  2 10  5  8  5 12  3  9  3  9 10 10 12\n[33121]  5  9 10  2  6  4  9  7  9  1  3  7  3  3  8 11  3 12  3  5 12 11  6  6\n[33145]  6  6  7  1  2  8  8 12 10 11 10 12 11  8 11  4  1  6  2  5  9  6  8  6\n[33169] 12  5  5  1  4 10 10  7  1  2  7  1 10 10 11  2  5 12  1 12 11 10  5  4\n[33193]  1  1  4  1  1 10  4  1 10  5  5  8 10  3  7  8  2  4 10  2  1  8  9 11\n[33217]  4  4 10 12  9  9  9 11  1  4  3  5  3 12  3  5  5  7  3  3  9  7  3 11\n[33241]  5  8  9  7  5  6  6  6  8 11  4 10  9  3 11 11  1  2 12 10  4  7  5  4\n[33265]  3  9 11 11  7  6  3 11  1  7 11 10  1  1  3  7 11  4  1  8 11 11 10  6\n[33289]  5  3 11  1 11  7  9  3  6  8  4 10 11 10  6  8  5 12  1  3  5 12 10  7\n[33313]  4 12 10  6 10  4  6  2  4  8  8  3  2  1 12  7  1  9  5  7 11  2  9  2\n[33337]  7  1  6  6 11 10  3  7 10  3  6  5  5  1  8 11  2  8 11  3  1  3  5  1\n[33361]  4  4  9  7  6  3  3  8 12  9  9 10  1 12  3  2 10  3  7 10  5  3  8  9\n[33385]  5  8  7 10 11 12  3  1 12  7  9 10  8  9  9  1  5  4  7  2 12 11 10 11\n[33409]  7  7  9  6  5  7  1  5  8 11  2  9  9  9  1  1  3  8  6  9  3 12  7  6\n[33433]  6  6 11  2  5  2  6  4 11  1  2 10 10  3  1 11  7  5 12  6  6 11  3  8\n[33457]  3  1  6  9 12  6  5  6  3  6  8  2  2  5  5  2 12  4  5  7  1  4  3 10\n[33481]  2  4  1  8  3  3  2  6  7  3  6  9 11 10 10  7  8  6  9  5 10  8  6  1\n[33505]  9  9  8  4  7  5  1  3 10 10 11  1  1  3 12 10  6 10 10  3  2  5  8  2\n[33529]  1 10  6  3  5  1  3  2  9  4  3  4  8  8 10  2  3 12  9  3  4  1  3  1\n[33553]  7  2  2  1 12  9 12  3  3  7  1  9  9  8  9  4  8  8  4  6  6 12 10  3\n[33577] 11  6  9  3  5  5  8  8  4  8  5  9 10  1  4  6 10  1  4  1 12 10  5  7\n[33601]  4 11  7 10  8  8  4  4  7 12 10 11  6  4  6  8 12  4  9  3  1  2  8  4\n[33625]  9  2  5  4  1 10  4  3 11 10  7  1  1  3  8  8 12  4  2  7 11 10  1  3\n[33649]  6 10  5  3  3 10  7  1  3  2  2  5  6  2  6 11  9 11  6  8  6  2  5  7\n[33673]  8  1  5  6  7  9  6  9  1  1  2  3  4  7 10  1  2  1 11  4  3  2 10 12\n[33697]  7  7  7  2  8  2 11  9  4 12 11  3  7  8  4  2 10  3 12  3  7  9  1  9\n[33721] 10  9  2  7 10  7  6 12  3  7  6 10  4  2  5  8  3  3  2 12  4 10  6  5\n[33745]  7 12 12  5  3  9  2  5 11  2  8  4  3  9  3  5 11  1  9 10  4  9  1 12\n[33769]  4 10  1  6  5 11  4 12 11  1  2  1 10  9  1  9  6  9  6  8  1  1  8 11\n[33793]  5  3  4 10  2 12  6  2 11  3  4 11  7 10  7 12  6  6 10  4  1  8  2  7\n[33817]  4  6  3 12  2  6 11  2  3  1  8  8 11  1  9  8  6  5  2  4  4  2  6  5\n[33841]  1  2  3  4  7  7  7  7 10  5  5 10  1  4 10  1  3  2 10  4 10  5  7 10\n[33865]  2  9  4  9  7  3  7 12  5  4  3  5  9  6 11  7 11  9  4 12 10  4  4 12\n[33889]  2  3 10 12  4  8  3 12  3  3  2  8 11 11  2 12  3 12  9  5  4  3  7  6\n[33913]  7  4  5 12  9 11  5  4  5  1  5  8 12  5  4 12  4  4  1  4  4  5  5  5\n[33937]  5  8  6 12  3  4  8  8 10  2  9 10  3  1  1  7  3 10  4 10  6  4 10  5\n[33961]  7  3 12 12 10  2  6  2 10  7  3  8  4  9  3  2  5 10  8  8  1  1  7  5\n[33985]  8  4  8  4  3  6 10  4 12  9 11 12  6  3  8  9  5  9  2  7 11 10  9  2\n[34009]  9  6  4  1  2  8  4  6  5  1  6 10 12  6  1  8  2  2  9  9  2  1  7  3\n[34033]  3  8  3  8  1  9 10  5  8 11 11  6  5  3  3  1  1  2  4 12  4  5  6  1\n[34057]  7  4 11 11  7 12  9  5  9  6  2  2  9  1  5 10 12  6  5  8 10  3  2 10\n[34081]  7  3 11  5  5  7  9 12  2  9 10 11  5  1  1 10  6  7  5  9 12  8  9  5\n[34105]  6  6  1 10  3  6  4  5  1 10 12  6 12  8  6  9  7  2  5  1  7  1  6  6\n[34129]  2  2 10 10  1  5  9 11 12  5  1  9  4  5 10 12  6  9  5  6 10 12 10 10\n[34153]  9  3  7 11 11  3 10 12 10  3  7  6  1  2 12  7  3  2  1 12  8  6  2  2\n[34177]  5  5  1  6  1  2  6  1  5  6  8 11 10  1  4 11  2  8  4 10 11  2  1 11\n[34201]  4  4  6  9  1  7  7  8  8  6  3  7  6  3  2  7  9  5  6 12  9  8  7 11\n[34225]  4  4  4 10 10 10  1 12  6 10  9  7  2  8  3  8  7 10  3 12  2  3  3  9\n[34249]  4 12  7  8  9 10  5 12  9 11  3  9  2  1  2  8  1 10  1 11 10  9  1  2\n[34273] 12 12  8  3 10  2  8  7  4  5  4  1  5  2  2  8 10  7 12 10  7  4  1  7\n[34297]  7  5  5 12  1  5  6  1  9  7  1  9  1  7  4  2  6  1  4 12 11  8  7  1\n[34321]  8  9  8  5  6 11  3  7  5  8  1  2  8  1  3  5  1  7  7  8 11  3  3  7\n[34345]  5  3 10  1 11  3  6  8 10  7 12  1  6  1  7 11 12  9  7 10  8  6  7  2\n[34369] 10 11 11  2  2  9  3  2 11  6  4  8 12  5  9  9  9 11  8  9  9  1  3  2\n[34393]  6  5 10  4  7  6  3  2 10  5 10  7  8  8  8  3  8  6  5 11  5 12  7  5\n[34417]  9  9  9  5  2  7  3  8  8 11  4  8  3  4  2  9  8  4  9  9 11 10  4  9\n[34441]  7  7  4 11  7  6  7  1  3  4  7  3 12  5  3  3  4  9 10  2  3  1 12  4\n[34465]  2  1  7  9  7 12  6  6 10  3  2  6  8 12 10 12  1  4  4  2  8  2 12  2\n[34489] 10  4  3  5  8  1  7  8  6  8  5  4  4  6  9 12  6  9  7  8 11 10 12  4\n[34513]  3 10  1  9  2  9  6 12  3  4  7 12  2  9 11  5 11  6 12 11  7  9  4 10\n[34537]  3 10  4  3  4  6  6  3  6  4  4 11  3  7  1  4  6  2  2  1  9  4  1  2\n[34561]  3  6  4  3 12  9  3 12 11  8 12  9  1  1  3  9  1  9  9  9 10  9  4  2\n[34585]  1  6  7  8 11  9  7  9  7  1 10  3  1  4 11  1  7 10  8 12 11  3  5  9\n[34609]  1  7 10  2  2 12  1  4  7 11  2 11  1  6  6  6  9  4  4  1  8 11  8  4\n[34633]  1  8  6  4 12  4 11  7  7  7  5  5  9  7  4 11  6 11  2  6  3  1  9  5\n[34657]  7  2 11 11 10  9  2  9  1  4  6 11  4  4  9 10  6  4  6  7  7  3  7  3\n[34681] 12  9  3 11  3  1  9  7 12  8 12 11  6  9  2  9  6 10 11  7 10  2  2  5\n[34705]  5 11 11 12  8 11  4 11 11  8  3  5 12 12  3  9  3  9 10 11  5 10 11 10\n[34729]  1  3  5  4  8  8  9  4 10  4  1  6 11 10 11 10 10 11  1  6  6  2 10  2\n[34753]  2  7  6  8  7  8  3 10  3  4  7  7 11  7  2  1  8  9 12  7 10 11  1 11\n[34777]  9  3  1  9 12  6 10  6  7  7  6 10  8  9  1  4  8 10  8 10  2 12  3  4\n[34801]  9  3  3 11  6 12  1  9  2  8 12  2  8  1  6  2  2  2 11  4  4  9  6  5\n[34825] 11  5  6  3  8 10  7 11 11  6 11 12  4 11  9  7  5  8  2  6  7  2  1  4\n[34849]  9  8  3  6  7  6  2  1  7  4  5  5  7  9  6  6 10 12  4  1  8  6  1  3\n[34873]  9  9  6  1  7  5  1 11 12  6  8  2  3 11 10 12  1  7  2  9  7  9  5  2\n[34897]  2  4  2  8 12 11  9  3  4 11  5  5  6  1 11 10  2  4  9  9  3  7  9  8\n[34921]  1 10 11  4  1  8 11 10  3  7  9  2 12  2  6 11  6 10 11 11 10 10  1 10\n[34945]  3  5  6  8  7  5 10 12  7  9  8 10  3  7  3  9  5  7  8  7 10  5  1 11\n[34969]  4 12 12 10  7  1  9  2  2  7  2  2 11 11  3 11  7 11 12  3  3 10  3  1\n[34993]  6  7 10  8  8  3 12  9  2  7  3  5  8  7  8  4  5  4 11 12  6 10  7  4\n[35017] 10  9  3  4 12  2 11  7  3 10  6 12  2  6  1  2  7  8  5  3 11  9  6  3\n[35041] 12  7  6  9 10 11  4  6  3  2  3 11  9  5  6  1  8 11  6  7 11  3 12  9\n[35065] 12 11 10  1 12  3  8 12  2  7  4  2  3  1  4  3  6  6  1  5  6 12 11 11\n[35089]  2 10  7 11 11  2  1 10 12 12  5  1  6  2  5  1  4  9  2  5  7  9  2  7\n[35113] 12  9  8  2  7  3  1 10  6  1  4  5  3  6  3  4  8  2 10  3  8 12  3 10\n[35137]  7  2  1  8  4  2  8  3  8 11  8  1  6 11  7 10  1  3 12  7  2 10 12 12\n[35161]  3  8  7  3  2  3  8  1  6  6  1  7  4 10 10  9 12  5  8 12 10  5  3  3\n[35185]  7  7  8  7  2  6  1  6  4  9  5  8  4  1  7  9 12  3  6  4  2  7  9 11\n[35209]  8 12 10 11  4 10  3  2  5  7  3  5  9  1  2  4  1 12  5  8  4  4  4  2\n[35233] 10 11  9  2  7  4  6  6  3  7  8  2  3  3  5  7  3  6  3  7 12  3  6  2\n[35257]  2  7 10 11 10  2  7 12  8  8  6  5  4 12 12  8  5  4 11  8  5  6  3  2\n[35281]  7 11 10  7 11  7  2  3 11  1  5  8  8  1  2 12 12  2 10  8  1  9  4  6\n[35305] 12  1  5  1  2  4  8  8 10  9  1  8 11  5  8  7 10  2 12  4 11  5  5  5\n[35329] 11  1  3 11 10 11 11 11  1  1  2  6  3  6 11  4  3  8 11 11  7  6 11 10\n[35353]  3  1  1  4  5  3 12  6  8  1 11  1  9 10  8 12 11 10  1  9  3  3  2  9\n[35377] 12  1  1  6 12  9 11  4  2  7  6  6  6  2  4  1 11  8  4 11  9  3  6 11\n[35401]  3 12  2 11  2  6  9  4  3  4 10  3  4  4  8  1 10 12  7  9 12  4 12  4\n[35425]  6 11 11 12 10  1  6 11 12  4  9 12 11 12  4  6  1  7  5  8  8  1  9 10\n[35449]  1  6  3 12 11  2 11  3  6 11  7  4  8  8  3  4  6  7  5 10  9 12  8  9\n[35473]  2 11  4  1  3  5 12  8  7 11  2  3  1  1  7 10  2  3  9  6  9  8 12  5\n[35497] 11  2  6  8 10  3  9 11  8 12 12  8  8  2  2 10  3  8  7  3  7  1  7 11\n[35521]  7  4  7  4  5  5 10  1  4  4  7 10 12  7  6  3  6  1  7  3  1  8  6 10\n[35545]  4  9 12  3  3  8  4  1  1  5  6 11  4 11 12  4  4 11  4  4  2 12  4  9\n[35569]  7  4  5  7  4  9  8  9  5 12  1 12  4  9  9  6  9  3  8  5  5  8  4  3\n[35593]  3  8 12 11  1 12  9 10  9  7  5  7  9  3  2  8  8  7  8  2  9  8  4  9\n[35617]  1  5 10  3  2  1  9  4 12  9 11 10  3  8  5  5  1 10  5 11 11  7  7  4\n[35641]  5  3 11  4  1  4 11 12 12  3  1 10  3  6  2  2  6  1  8  7  2 11 11 10\n[35665] 12  7 11  2  9 11  2  2  3 12  3  3  8  3  3  1  7  1  6  2  4  4  6  9\n[35689] 10  1  4 12  2  8 10  3  1  4  2  7  9  9 10 12  2  8  8 12  9  9  7  9\n[35713] 10 10  1  7 12  2 10  8  8  2  3 11 11  7  9 12  2 12  6  9  8  8  6 11\n[35737]  3  4  4  3  1  3  4  4 12 11  7  2 12  9 11  6 11  5  5 10 10  1  1  6\n[35761]  5 12  6 10  6 12  8  3 10  9  7  8  5  5  9  2 10  8  7  9  1  8  8  3\n[35785]  4 10  2 12  3  5  3 10  4  6  9  9  5 11 12 10 10  6  1  5  2  1  5  4\n[35809]  9  2  6  6  9  9  3  9  3  4  9 12  6  8  6 11 11  5  2  6  1  9 11  2\n[35833] 10  2  4 11  5  3  3  1  7  9  8  6 12  7  6 12  3  2  5  9  3  8  5  1\n[35857]  3  7  8  5  2 12  7  3 12  5 10  8  1  7  1  6  5  9 12  9  6  4  3 12\n[35881]  7  2  1  6  6  5  2  9  1  1  3  7 11  1  4  5  4  3  6 12 11 11  8  4\n[35905]  8  3 12  6  9  7 10  7  3  2  4 12  7  5  1 11  3  8 12  8  5  4  6  3\n[35929]  5  6  1  5 12  2 11  1  5 10  5  9  6  9  4  6  4  1 11  4 10  5 10  5\n[35953]  4  3  4  3 11  3 11  2  2  3 10 12 12  6  6  4  7  8  2  4  1  7  4  1\n[35977] 11  8  3  8  6  9 11  1  2  1 11  7 11  5  9  5  5  5 11  6  4  6  7  9\n[36001]  9  7  5  8 11  7  5  4  9  3  6  6  2 12  2 10  8  6  3 11 11  3  2 11\n[36025]  6 11 10 12  4 10  3  7  6  8  2  3  6  9 10  1  9  8  3  7  4  9  5 10\n[36049] 11  9  1  7 11 11  6  8  5  1 10  3  5  8 12  9  6  4  4  2  8  5  5 10\n[36073]  9  7  4  6  3  8  3  7  7  5 12  9  2 12  3  3  7  2  4  2  3  2  8 11\n[36097] 11  5 11  3 11 12 10  6 10  3  7  1  1  1  9  6  7  2  8  5  5  4  3  8\n[36121]  1  8  6  5  9 11  9 12  7  5  6 10 10 12  1  2  8  4  4  3  4  8  5  5\n[36145]  2 10  9  7  5  3  9  4  9  1  4 11  4 12  5 10  1  3  9  9  4  4  4  9\n[36169] 10  8 12  1  7  3  6  4  1  5 12 11  4  5  3  7  7  1  1  5  9 10  3  5\n[36193]  8 12  1  7  1  1 10  4  1  3  1  7 11  8  6  3  2 10  5  2  8  5 11  9\n[36217]  6  1  3  4 10  3  3 10  7  4  1  9 11  7 12  5  4 11  5 12 10  5 12  8\n[36241]  4  1  4  8  4 12 11  4 10 12  2  3  2  8  1  1 11  8  5  4  6 10 11  5\n[36265] 12 12 11  8  6  2  1  4  4 12  3 10  3 10  2  8 12  8  9  3  4  2  7 12\n[36289]  9  7 12  3  2  9  6  8  8  6  9  1  8  5  2  4  1 12  6 12 11 12 11  2\n[36313]  8  6  3  5 12  6  7  2  3 12 11  5  9  7  6  2  2  9  2  8  9  8  3  2\n[36337]  2  7  5  1 12  8  9  6  3 12  2  3  8  3  7  6  4  2  1 12  6  5  2  6\n[36361]  1 12  5  3 11  5 11  4  9  2  7  9 11  2  7  5  8  2  1 11  2  8 10 10\n[36385]  4 11  4  4  8 12  2  9 10  6  9  2  2  5  2  4  7 10 10  5 11 11 11  8\n[36409]  4  7  9  8  5  7  9  7  2 12  5  5  5  9 12  8  2  3  6  1  9 11  8 12\n[36433] 12  9  3 11  2  2  1 10  1  9  7 10  8  2  2  6  3  2  9 12 10 11  3 12\n[36457]  3  5 10  4  7 10 11  9  1  1  3 11  7 11 12 10  1  4  2  5 11  2  3 12\n[36481]  9  7  9  1  9  6  3  1  4  6  1  4  7  2  5  5 12 10  7  1  6  3  5  8\n[36505]  4  7 12  7 11  9  2  2 10 10 11 11  3  5  5  4  4  4 10  3  9  5  2  8\n[36529]  6  9  6  4  1 12  9  8  8  7 10 12  5  9 12 10  2 12  4  6  8  5 12 12\n[36553]  8  3 11  3  9  5  6  3  2  1  5 12 12 10  2  3  6  5  3  5  2  4 11  8\n[36577]  7  3  8  6  1 12 12 10 12  8  7  8  8  2  4 10  3  7  9  9 12 10  4 10\n[36601]  4  2  8  5  9  3 12  1  5  3  3  9  6  9  5  9  2  5  2  1  6  3 11  1\n[36625]  5  3 10  4 11  3  8  4  1 10  5  4  7  8  9  4 10  8  7  5 12  8  7  2\n[36649] 11  8  1  3  8  6  1 11  2  7  7  3 10  9  9 12  4  2  2 11  8  3 11  7\n[36673]  4  9  9  5  1  1  6  1  4  3  8  5  1  5  6  4  7  1  7  7  3  9 10  7\n[36697]  3  3 12  8 12 10  3 12  5  5  3  8  1  9  5  4  3  2  6  3 12 10  3  5\n[36721] 11  2  4 11 10  4  2 12 11  4  3  5 10  9  4  1  3  3  2  7 12 12  9 12\n[36745]  1  2  1  7  1  4  5  8  9  7  2  2 11 10  6  8  8 10  5  7  2 12  2  7\n[36769]  7  8  3 12 10  5  5  3  8  6 11  8  3  4 12  7  9  3  2  7  6  1 11  1\n[36793]  3  4  6  2  6  5  3  2  8  4  6  6  9  8  1 12  3  4 11  3  7 12  5 10\n[36817] 11  4  7 11  5  4  3  4  4  8  5  6  2 12  2  6  8  1 12 10  4  4  2  6\n[36841]  4  2  1  9  9  5  3  9  2 10 10  5  4  7  9  6 10  3  7  2 10 11  5  2\n[36865]  3  9  9  7  3  4 10  8  3 12  7 12 11  3  1 12  1  8  7  1  2  8  8  3\n[36889]  5 12  2  2  5  6 10  1 12  5  1  1  2  3  9 11  1  4  4 12  8  8  5  5\n[36913]  4  3 11 10  7  5  3  9 11  7  3 12  5  2  7  6  5  8 11  2 11 10  4 12\n[36937]  4  8 12  5  4  1  3  5  1  7  1 11  1  3  1  6  8  6  6  3  8  4  2 11\n[36961]  8 11  1  6  1  6 12  4  1 10  3  4  3  6  7 11 12  4  5  8  1  2  2  9\n[36985] 12 12  4  7  6  5 11  1  1 11  5  7  2 12  8  4  6  1 11 10  1 12  5  4\n[37009]  5  8 11  5  9  4 11  2  5  4  2 12 12  5  2  2 10  9  5 12  4 12 12  2\n[37033] 10  4 10  6 11  5  8  7  8  8 11  6  6  7 12  6  7  6  1 10 11  1  6  1\n[37057]  2  1  4  4  6  9  8  6  8  4  7 11  5  7  4 12  7 12  9  2  8  2  5  8\n[37081]  4 12 12  3  1 11  1  3  7  3  2  6 11 10  1  8  7  9  6  5  6 11  5 12\n[37105]  4  4  9  9 12  1  2 12 11  6  1  4  7  9  6 11  6  6  4  7  8  9  5  3\n[37129]  8  5  1 10  8  8  4  4  3  2 12 10  6  8 10  3  6  5  5  3  5  4  2  4\n[37153]  9  2 10  5  8  7  8  7  3  5  7  5 10  2  5 12  9  3  4  5 10 11  3  8\n[37177]  1  7  6  8  1  7  5  9  4  5  4 11  6  5  3 12  2  8  9  6  8  3  8  7\n[37201]  5  8  5  9 10  6 11 11  2  6  3  1 11 10  8 12  9  2  3 10  7  7  8  4\n[37225] 11 12  5  6 11  7  1  4  2  8 12  1  4  9  6  9  2  8 11 10  4  8 12 11\n[37249]  3  8  4  1  8  8  5 12  3  9  1  2 10  4 12  1  8  6 10  2 12  7  2 12\n[37273]  4  5  7  2  6  3 10  9  6 12 10  3  5  6  4  1  3 11  6 12  7 11  2 10\n[37297]  4 12  4  9  5  2 12 12  8 12  7  2  6  2  5 12  9 11  1  3  4  9  7 11\n[37321] 11  3  8  8 12 12  2  8  6  7  8  4  1  9  1  3  8  6  3 10  1  1 11  5\n[37345]  3  1  7  6  4  3  3 11  6 11  1  2  3  8 12  3  5  4  8 10  2  1 12  2\n[37369] 12  1  4  3 11  9  8  1 10  4 12  5  6  9 10 11  9 11 12  7 12  6  7  1\n[37393]  6 10  8  7  3  6  3 11 10  6  3  3  1  5 12  6  9  6  8  9 11  2  6  9\n[37417] 10 11 11  4  4  5  6  4 11  9  6  8  4  9  9  8  3  3  9  1  7  8  7  7\n[37441]  9  7 10  2 11  3 10  4 10  7  4 10  8  4 11  4 12  1  2 11 11  9 11  5\n[37465] 12 12  2 10  8  1  3  4 11  8 11 11  7  4  2  5  2 11  4  5  8  5  1  4\n[37489]  6  6  3 11  4  5 12  8 10  7  7 10 12  6  3  9  8  8  6 11  4  1  2  7\n[37513]  1  7  6  1  3  6  9  3  8  3  6  2  3  4  4  6  2  7  7  5 12  8 10  8\n[37537] 12  6  2  1  2 11  6 11 10 10  7  7  4  8  9  7  1  7  6  1  2  8  3  1\n[37561]  4 12 11 12 11  3 10 11  1 11  5  8  5  5 10  8  4 10  8  9  5  1  9  3\n[37585] 12  2  1  8  4 10  3  3 12  9  2  6  9 10  9 11 10 10 11  1  5 10 11 11\n[37609]  3 11  6  5 10  8  1  1 12  6  1 11  4  9  5  9 12 12 10  3  6  2  7  4\n[37633]  2  3  9  7  1 12 10  7 10  1 11 12  3  2  8  5  5 10 11  8  1  1  3 12\n[37657]  3 12 12  2  5  2  9  4  3  9 10  7  1 12  4  1  4 10  9  2 12  1  8  3\n[37681]  9  4  5  1  3  4 10  8  1  1  8  1 11 10  1  2 10  9  7  2  2 12 10  3\n[37705]  6  8 10  3  5  2  8  8  3 12  5  2  3  8  4  1  7 11  9  2  9 10  6 11\n[37729]  7  3 11 12  3  9 12  9  8 11  5  4  4 12  5  8  5  9  5 10  9  3 12 10\n[37753]  8  8  3  8  5 10  7  7  9  1 10  7 11  2 12  4 11  4  4 10  4 11  6  8\n[37777] 12  5  7  7  3  9  1 12  2  2 11 10  2 11  5  2  9  3 10  4  6 11  7  7\n[37801] 12  3  6  8 11 10 10 12 11  1 10 12  6  5  9  2  3  7 12  6  2 11  2  7\n[37825]  5  4  1  1 12  1  2  5 12  4  7  9 12  9  2  8  3  4  9  3  8  3 10  6\n[37849]  1 11  7  8  9  3  8  8  1 10 10 11  8 10  1  3  1 10 11  5 10  2  9  4\n[37873]  1  3  5  9  3  7  9  8 10 10 11  8  5  2  7  9 10 10  1  5 12  8  7  1\n[37897] 11 11  7  3  4  2 10  5 11  8 10  1 12 11 10 12  6 12 10  1  3  4  2  5\n[37921]  5  3  9  6  6  1 12  2 11 12  8 12  7 10  4  3  4  2 12 12  9  2  4 11\n[37945]  1  7  5  8  6  1  4  9  2 10  3  6 10  8 12  5  7  2  5  3  1  4  1 10\n[37969]  7  1 10 11  1  1  6 11  6  2  1  8  6 11 11  5  3  5 12 11  3  3 10  5\n[37993]  7  5  9  8  5  6 12  7  8  2  9  9 11  2  6 10 11  8 11  2  5  9  8 10\n[38017]  6  3  7 10 12  7  1 10  6  4  2  4  8  9  9  8 10  5  6  2 12 10  9  2\n[38041]  9  2  1  1  9  3  9 11  2  9  2  1  8  5  7  7 11  3  5  9  2  5  2  1\n[38065] 12 10  9 11 11  4  3  2 11 11  2 10  7 11  5  8 11  7 12  1  2  5  2 12\n[38089]  6  7  8  7  5  8 11  9 12 12  6  8  7  2 11  8  8  1 12  3  9  5  3 11\n[38113]  9  1 10  8  8  5  6 10  8 10 10  9 10 10  2  5 11 12  8  8  3  6 10  7\n[38137]  5  3  6 10  5  2  6  5  9  6  5  9  1  5  7  8  2  8  2  3  7  8  7 10\n[38161]  5  3  1  7 10  7 12 10  7  1 11  2  1 10 10 10  6 10  7 12  6  7  3  7\n[38185]  9 11  7 12 10  2  2  5 11  4  3  5  1  2 12  8  1  4 11  2  7  9  1  3\n[38209] 12  8  6 10  7  8  8  4 10  6  4  8  7  4  6  4  7 10  6  6 11  3 12  1\n[38233]  5 12 10  8  4  2 12  4  6  1 12  5 11  1  7  9  2  5  9  9  2 12 11  9\n[38257]  6  5  9  8  4  5  8  8  3  6 10  8  5  6  4  7 12 11  7 12  8 12  8 10\n[38281]  3  9  5 10  8  1  9  7  4  2  5 10  7  9  1 11  9  6  7  3  9 10 11 10\n[38305]  3  7  9 10 11  2  5  6  5  2  1 11  7  9  3  8 11  9  7  3  5  3 10  5\n[38329] 11  5  5  5  1  4  1  9  5 10 12  2  5  7  6  4  6  2  7  8  2  1  5  5\n[38353]  7  3 12 10  7  1  1  2  3  3 10  3  9  1 12  6  6 10  5  9  5  1 10  9\n[38377] 12 10  4 11 10  9  8  9  7  1 12 11  4  3  3  9  6  9 11  7 10  6  7 12\n[38401]  9  9  2 11  1  5  5  3  1  9  3  8 12 11  1 12 10  6  4  1 12 10  7 12\n[38425]  4  7  3  9  4  1  9  8  5  8 10 12  5  7 10 10 12  8  7  1  8  8 10  5\n[38449] 10 12  6  3  6  8  7  6  7  8 11  1 10  3  1  6  7  3 10  3  1 11 12  4\n[38473] 11  1  8  5  6  3  7  8  2 10  5  5  2  2  2  6 10  5  9  4 10  9  6  7\n[38497]  2 12  6  6  8  8  6  6  7 10  1 12  5  8  7  4 10  6  8  9  6 10  3  4\n[38521] 10 11  6  3  6  9  7  4 12 12  9  5  2 12 10 11  5  3  6  2  5  7 12  5\n[38545] 10 11  9  2 10  2 10 11 11  3  8 10  4  4 10 10  4  2  7  6  2 10  4  9\n[38569]  9  5  9  5  2 12 11  3  9  8 10  9  5  1  3  9  7  7  8  7 10  8 11  1\n[38593]  7  6  8  5  2  5  9  3  6 11  2  1  3  7  7 12 12  9  5  7  3  9  3 11\n[38617] 12  3  9  7 10  8  9 11  9 10  5  1  3  8  4  4  3  1 10  6 11  9  8 10\n[38641]  7  4  4 12  5  5 12  9  7  5  9  9  2  2 11  1 11  1  4 11  1  3  2  9\n[38665]  4  9  8 10  7  6  9  4  4  1  1 12  2 12 11 12  9  6 12  5 11 12  8  9\n[38689]  4  5 11  2  4  8  1  3 11  9 11  7  2  1  7 10 10  7 12  9  8  2  3  3\n[38713]  7 12  6 11  9  7  4  6 10 12 11 11  2  2  9  4  4 11  2  7  7  2  8  3\n[38737]  7  9  5 12  7  9 10 10  7  5 10  3  3 10 11  4 11  5  5  1 10  2  8  6\n[38761]  4  9  4  1  1  8  6  1  3  1 10  6  1  1  4  9  4  9  2  7  6  3  5  4\n[38785]  7  8 12  1  8 10 10  2 12  1  7  9  4  1  3  2  9  8 12 12 10 11 10  3\n[38809]  7  4  8  9  6  9  9  3  6 10  1  9  7  8  4  9  7  3  9  7 11  6  2  7\n[38833]  3  4  5  1  6 11  4  6  5  4  4 12  6 12  6  7  8  2 10  1  2  9 10  5\n[38857]  7  8 10  3  1  3  2 11  2  4 10  2  2  5  3 10  3  4 12  6  4  8 10 10\n[38881] 12  8 12  2 10  2  9  9  5  4  7 11  1  3  5 11 10 10  1  3 10  9  9  9\n[38905]  5  8  9  8 12 11  4 10  2  5  4  3  9 12  8 10  2  5  4  9  3  9 10  4\n[38929]  5  3  2 12  3  4  4  2  3  2  9  5  7  3 10  2  5  7 11  4  8  9 10  6\n[38953]  9  6  9  3  3  7  1  6  2  9  1  1  8  5  7 12  6  9  4  5 11 12  2  3\n[38977]  7  7  1 10  4 11  7 11  3  1  6  8  9 12 12 11 11  3  1 12 11  1  1  1\n[39001]  8  9  4  7  7  2  3 12  2 11  9  6  6  1  1  2 11  2  6  7  4 10  1  5\n[39025]  1  6 11  4  6  4  9  1  2  5  5 12  3  4  2  4  3  9  9 11 10 12  9 11\n[39049]  8  2  7  1  7 11  5  4  9  4 11  9  5  6  4  1  5  4  7  4  7  4 11  3\n[39073] 10 12  5  6 11  3  1 12  9  1  5  9 10  2  1  3  1 10  6  3  8  9  9  9\n[39097]  5  7  2  9 11  9 12 12  2  3  4  1  8  8 11 11  9  8 12  5 11  5 11 12\n[39121]  7  9  5  6 10  4  7  6 10  4  1  1  9  9 12  8  1  2  2 12 10  1  1  9\n[39145]  3  8  4  7  9 11  7  9 11  7 12 11 10 10  4  3  7  7 10 12 12  4  4 12\n[39169]  6 10  6  4  4  6  7  9 12  1  3 11  1 12  7  8  5  2 10  3  7 11  8 11\n[39193] 11  2  7  5  7 11  3  1  6  3  9  9  4  6  6  9 12  2  8  8  2 10  8 11\n[39217]  6  1 12  1  3  5 11  6  3  4  8 11  7 12  5 10 10  3  1 12  1 10  1  8\n[39241]  9  3  4  2  9  6  9 11  6 10  5  1 10  7  2  8  7 11  5 11  8  6  7 11\n[39265]  2  5 10 11  6  5  2  5  4 11 10  6  1  8  4  9  2  2  2 10 10  3 10  2\n[39289] 11  8  2  8  8  6  6  7 10 10  5  2  1  2  3  9 10  2 11  4  4 10  4  6\n[39313] 11  1  1  6  7 12 12  9  8 11  4  8  4 10  9  4  1  1 10  2  2  7  9  6\n[39337]  8  6 10  7  2  1  7 12  6  6  4 10  7  5  5  5  7  7  6  8  5  6  7  9\n[39361]  1  9  9  1  3  7  7  4  6 11  9  8  5  1 11  4  6 10  5  4  1 10 10 11\n[39385] 11  1  5 12  9  5  4 11  3  8  8  8 10  6 10  1  8 11 11  1  1  9 10 11\n[39409]  2  2  5  2  3  7  7  9 11  7  7 12  9  8  2  9  8  1  6  8  8 11  5  5\n[39433] 11 12  9 10  4  7 10  4  3 12  3 12 11 12  8  9  7  6  4 10  1 10 10  9\n[39457]  4 10  7  2  1 11  2  9  5  3  5  9 11  9  2  2  8  4  1  1 10  9  6  1\n[39481]  3  8  4  5  2 10  2 10  7  5  8  6  8  3 10  2 11 11  1  7  1  5 11  3\n[39505]  6  6  9  3 12  5 12 12  6 11  2  4  1  6 12  2  2 12 10  7  6 12  2  8\n[39529]  1  4  1 11 11  4  7  5  3  9 11 10 11  9  6 11 10  9  5 11  8  5  7 10\n[39553]  6  5  9  7  4 11  2  1  8 12 10  8  8 12  9  7 11  6  9  5  3  5 11 10\n[39577]  5  3 12  9  2  3  7  4 12  8  6 12  1 12  6  2 11 10  7  1  1  9  8 10\n[39601]  9  7  9  3  7  1 12  2 11 10  4  8  5  4 10  3  1  3  6  3  6  5  9  8\n[39625] 10 11 12  3  8  5  6  8 10  1  9  1 11 11  3  4 10  1  2  1  5  7  5  7\n[39649]  1  1  1 12 12  8  1  7  7  7  3  1  3  9 11  3 12  4  5 12  1 10  4 11\n[39673]  8  1  7  2  1 11  3  4  6  1 10 11 10  7  8  8  9 10  9  2  2  3  3  6\n[39697] 10  6  5 10  3  2 12  3 10 11  3  9  1  6  3  5  5 12  3 11  3  5 10  9\n[39721] 11  3  5  7  2  9  4  3  4  5  8  9  1  6  7  8  1  7 12 11  4  9  3 12\n[39745] 10 11  5  1  2  1 12  7 12  4  4  4 11  5 11 12  8  3 10  1 11  8  2  5\n[39769]  5 10  6  8  7  1  1  3  1  6  5  8  1 11  8  1 10  8  8  3  1 12 10 10\n[39793]  2  7 10  7  8  7 10  8  4  9  8  4  1 11  2 12 11 11  9  6  9  2 11  8\n[39817]  1  3  8 11  4  3 11  8  7  9 11  3  3 11  6  7  1 12  4 10  8  2  4  4\n[39841] 12  9  5  9  4  1  1  5  8  6 12 10  8  6  4  8  8 12  2  1  3  8  2  3\n[39865]  3  8  1  1  2 12  3  6  3  6  9 10  6  6 12  9  5 11  6  3  2 11  7 10\n[39889] 12  1 10 10  8  3  3 12  5  4 10 12  3 10  8  1  9  1  8  7  6  6  3  6\n[39913]  1  4  9  6  4  1  1  6  7  6  5  1  6  1  6  2  8  8  8 12  3  3  2 12\n[39937]  9  5  3 12  5  3  1 10  4  5  3  6  3 10 12  4 10  4 10  2  3  5 11 11\n[39961]  2  8  7  8  4  6  2  1  8  4 12  6  4  2  8  9  9  5  5  8  3  2  6  4\n[39985]  6  8  6  6  4  8 11  8  6  4  3  9  9 12  9  2  4  8  4  2 12  3 11  2\n[40009]  3  9  6  3  8  4  3  4  9 11  5  8  6  4  4  9  2  6 11 10 12  3  8 11\n[40033]  8 11  7  1 10  7 11 11 11  8  8  7  1  7  6 10  4 12 11  2  6 12  3  2\n[40057]  8  5  1 11  6  5 12  5  4  7  1  8  6  8  3  7  8  3  9  2  8  9  7  1\n[40081] 11  6  6  7  1  4  8  3  6  5 12  9  8 11  5 10  5 11  2  4 10  9  8  1\n[40105]  1  5  3  6  7  7  4  6 11  3  6  4  1  1  7  2  4  7 10 10 10  7  2  6\n[40129] 10  7  5  9  1  5  9  9  2 12 12  4 10 11 12  5  7  8  6 11  4 10  6  5\n[40153]  6  8 11  4  7  4 10  9  5  3  8  8 12  8  8  9  4  4  7  5  3  4  3  9\n[40177]  9  7  8  6  6  6 12  6  6  6  5  8  7  7  4  6 11  6  4  1  9  9 11 10\n[40201] 12  6  3  4  9  1 12  4  4 11  6  1 11  5  1  7  8  8  8  9 12  5  7 10\n[40225] 11  8  7  1 10  2  2 12 10  3  6 10  9  2  8  2  5  8 11  6 12  7  3  5\n[40249] 10  7  5 12  5  5  8  8 11 12 10  6  4  9  6 12  1 11  8  8  9  8 12  2\n[40273]  9 11  5  9 10 12  4 10  9  6 12  9 11  3  6  7 11  2 10 11 10  6  9  7\n[40297]  2  2  5 10  9  7  9  3  1  7  3  3 11  9  5  9  9  1 11 12  7  7  8 11\n[40321]  2  4  3 11  4  3 12  6  4  8  5 10  8  2  1  1  8  1 10  6  7  5 11  8\n[40345]  7 12  7  6  3  9  2  4  5 10 12  3 11 12  4 12  4  8  8  7  3  9  7  5\n[40369]  7  6  9  5  3  3  6  7  9  9  8  6  5 10 12 10  4 12 11  5  2  9  9 12\n[40393]  5  7 11  7  3  3  6  9 11 10  8  7 10  3  5 10  1  8 10 10 11  3  4 12\n[40417]  3  2  2  3  2  9  2  5  9 10  5 11 10 10  8 12  5  3  4  7  9  7  1 10\n[40441]  8  1  2  2 12 11  4  5  1  1  7 11  8 12  8  3  8  8  8  5  3  8  3 11\n[40465] 12  6  3  1  2  5  4  4  3  2  8 10  5 10  2 12  1  8  6  6  8 12  3  9\n[40489]  5  6  9 10 10 10  7  1 10  5  4  2  8  3  1  5  1  1  6  1  9  4  1 11\n[40513]  3  6  9 11  6  7  9  8 11  4  2  3  2  3  5 12 11  3  4  6  3  6  4 10\n[40537]  6 10  8 10 10  8  4  6  7  1  9  8  9 10  3  3  4  6 12  8  6  5 11  8\n[40561]  7  6  2 10  4  9  9 10  2  2  1  7  1  2  9  5 10 11  8  3  3  2  4  3\n[40585] 11 11  9  7  1  6 10 10  3  1  8 11  3  6  4 11  9  7  6 11  1  8  8  7\n[40609]  9 10 11 12 10  8  1 12  8 11  2 10 10 10  3  9  5  4  6  3  2  6  1  1\n[40633]  6 12 12  1 12 11  5  9  5  9  2  4  9 10  6  2  7  1  5  6  7  5  7  9\n[40657]  4  8  3  3  3 12  5  4  2  9  1  4  6 12  5  7 12 11  2  4  6  1  2  9\n[40681]  8  4  1  4  8  1  5  6  8 11  9  5  7  7  3  4 12  6  6  4 10 10  9  7\n[40705]  4  9  7 11  8  9  3  9  4  2 12  7 11  6  1  2 12  8 12 12 11  1  4  1\n[40729]  7  8  4  1  2  6  3 12 12 12  4  2  2  7  9 12  5 10  5  4  2 10  5  4\n[40753]  3  8 11  5  5  5  5  7  8  8  5  3 12  9  9  6  4  5 12 10  6 10  1  9\n[40777]  4  4  4 10 11  4  8 11  9  3  9  9  4  9  6 11  8  8  4  2  3  5  7  8\n[40801]  3  6  4  2  7  9 12  3  9  7  4  5  3  3  7  4  4 10  5  9  3  1  7  3\n[40825] 12  6 12 10 10  6  3  4  1  7  2  1  5  9  8  1  3  5  3  3  2 12  7  6\n[40849] 12  7 10  7 10  7  9 12 10  9  9 12  3 10  1  5  2  9  3  6  9  6 12 10\n[40873] 11  7 12  9 12  2 11  3 12  2  1 11  8  4  7  8  9  4  1  6 12  9  9  9\n[40897] 11  8  2  9 11  2 10  5  3  3 10 10  1 11 12  7  5 11  9  9  9  8  9 10\n[40921]  9 11 10 11  7  7  3  4  6  4  9 11  3  7  5  9  1  5  2  8  5  5  7  8\n[40945]  2  2  6  5  3  1 10  3  3 12  4  3  1  3  6  8  5  9 11 10  1  7  6  9\n[40969]  5  2 10  9  1 11  9 11  7  5  1  1  3  3  6  7  2 12  7  7  2 12  9  1\n[40993] 10  1  7  9  1  4  4  6  9  1 10  2  4  9 11  8  5 11  7 10  6  6  9  3\n[41017] 12  6  1  2  7 12  5 11  3  9 12  7  5  3  8 11  5 12  2  3  7  4 10  9\n[41041]  5 12  7  2  9  9 11  2  1  1  3 10 11  5  2  2  7  1  3 12 12  8  7  7\n[41065] 11  3  7  9  9 10  3  3  6  4  3  9  2  9  5  8  3  4  1  6  6  5  7  3\n[41089] 12  6 12 12  5  2 10 12  1  9  2  4 12  6  1  1  7  6  3 11  7 10  8  7\n[41113] 10  8  3  4 12  8  3  8  3  9 12  3 10  7  4  2 10  7  5  8  5  5  8  6\n[41137]  3  3  3  8  1  7 11  6  7  5  9 11 11 11  4  4  3 10  4  9  3  7  4  2\n[41161]  1  6  3  1 11  6  9  2  1  7  3 10  1  1  7 10  3  1  4 10  4  6  6  7\n[41185]  7  2  8  2  1  3  2  3  3 12 11  4  3  1  7  6  9 12 12 12  5  1  1  1\n[41209]  6  6  6  5  1  1  8  5  3  9  4  9  8 12  3  1  5 10  5  3  1  4  5  2\n[41233]  7 12 11  8 10  2  8  8  3 10  2  9  7  3  2 12  4  7  5 12  5  4 10 12\n[41257]  3  4  7  3  5  4  3 10  3 12 10 12 11  8  6  8  1  9  5  5 10  2  6  1\n[41281] 10 12  7  7  8 10  2  3 10  6  9  6  1  3  4  3  3 12  1  4 10  7  9  1\n[41305]  8  8 12  1 12  1  5  9  8  8 12 11  1  9  2  8  8  4  1  7  5 11  5  6\n[41329]  5  6  7  7  5  7  5  5  5  6  7  7  6  7  5  7 10  5  7  6  5  7  6  3\n[41353]  1  7  3  6 12 10  8  7  3 10 12 11  9  9 10  6  9  4  8  7  9 11  1  4\n[41377]  2  9  4  2 12  5  2  7 12  4  5  9  2  9 12  8  3  5  5 11 10  5  1  4\n[41401] 10  3  7 12  1  2  7  8  4  7  9  8  5  6  6  5 12  9  8 10  2  4  4  5\n[41425] 12  8 11  2  3 12  6  1  5  2  1  7  1 11  2 12  7  1  1  9  5  1 11  5\n[41449] 12  8 11 12 10  6 11  8  6  4  6  3  7  8 10  1  8  2  5  7  2  8 11  9\n[41473]  1  8  5  7 12 11  8 12  3  8 10 11  4 10 12  8  5  7  7 12  6 11 10  7\n[41497]  2  7  8 10  1 10  6  3 10 10  9  2  5  6 10  7 12  1  8  5  8 11  2 11\n[41521]  8 11 12  2 11  6  8  5 11  2  6  2  1 11 11  2  3  7  1  4 11  5 11 10\n[41545]  7  3 11  9  7  4  4 11  2  3  3  3  3  3  2  9  6  7  3  2 10  5  8 10\n[41569]  2  1 12 10  6 10  3  3  2  5  8  2  8  1 11 11  1  5  6  5  8  3  3 11\n[41593]  5  2 10  2 10 11  8  9  8  4 10  8  8 12  3  1  8  4  7  7  5  4 10  2\n[41617]  1  2 10  2  4  6  3  9  3 11 11  3  9  7  8  8  7 12  9 11  3  6  2  7\n[41641]  6  5  1  1  1 11  4 11  5  8  2  1 11 12 11 12  5 12 11  8  1  1  9  2\n[41665] 10 10 12  4  9  7  9  5  2 12  1  7  5  6  1  6  3 10  8 10  1  3  1  3\n[41689] 10  3  5 11  2  3  2 11 10  1  4  7  3 10  7  9  8  9  1 11  4  8 12  7\n[41713]  1  4 10  5  1  8 11 10  7  8  7  5  2  9  6  7 12  6  5  8  3  9  7  8\n[41737]  6 11  3 12 10  1  2  3  5  8 11  9  2  7 10  4  1  6  1  5 11  9  6 10\n[41761] 11  9  9  6  7  9 10  9 10  8 10  1  5 12 10 10  2  4  2  9 12  3 10  3\n[41785] 12  4 10  4  4 11  8  3  3  6  3  2  5 10  6 12  9  3 12  4  1  2  9  5\n[41809]  6  6  5  2 12  2 10 11  4  8  1  9  9  8  8  3 11  8  4  7  9 12  7 12\n[41833] 12 12  3  4  4  6  9 10 10 10  9 12  5 12 11  2  4  6  6 12  7  9  8 12\n[41857]  7  4 11  6  5  7  1  3  2  2  4  1 12 12  1 11  2  2  5  5  4  5  3  3\n[41881] 10  9  9 12  8  9  6  3 12  7  1  8  6  2 12  9  2  1  8  9  2  6  6  2\n[41905]  8  1 10 11 10  1 11  8  8  3  9  5  6 11  9  9  4 11 12 12  7  9  1  5\n[41929]  8  7 11  5 11 12  4  3 11 10  8  7 10  7 10 10  7  4 12  7 10  9  8  6\n[41953]  9 11  1  2  9  1  2  7 12 10  5 12  1 12 11  7  2  6  4  8  4 12 11 10\n[41977]  5  7  7 12 11  6  6  8 10  1  4  2  9 11  9  4  9 12  3 10  8  1  6  7\n[42001]  1  4  1  2  6  5  9 12  6 10  6  5  3  9 12  3 10 11 11 12  2 10  3  4\n[42025]  3  9  7  1  8  8 10  5 10 12  3  5  4  7  5  4  5 11 12 11  3  4 10  4\n[42049] 12  1  9  5  1  2 12  9  1  6  9  4  3  3  4  9  6 11 10  3  8 12  4  5\n[42073]  5  9  9 11  8 10  5  2  1  5  6 10  4  3  2 10  5  4  4  1  5 11 11 11\n[42097]  4  3  4  8 10 10 12  5  7  2  5  7  2 10 10  7  4  2 10  7 12 12 11  8\n[42121] 11  7  5  8  3 11 12  9  3 12  7  9  2  6  6  4  5  4  8 10  2  9  8  6\n[42145]  1  6  5  6  2 10  3  5  4 10  5  5 10  5  5 12 10  5 12 11  1  1  4  5\n[42169] 11  6 10  7  3  1  4 10  2  2 11  9  4  4 10  9  1 12  7  2  1  2  3  2\n[42193]  4  3  6  9  9  8  5  6  9  7  7  7  8 12  4  2  8  3  9  6 12  1  9 12\n[42217]  6  9  2  5  4 10  6 12  1  8  4  8  2  9  3 11  9  3  4  2 12  1 11 10\n[42241]  2  4  7  4  7 12  3  4  7 12  2  8 10  5  2  9 11  4  1  9  8 11  8 12\n[42265]  7  2  9  8  2  9  4 11  5 12 10  3 12  5  8  5  2 12 12  4 11  7 11  3\n[42289]  1  5  3  6 10  9  3  9 11  8  8  5 12  3  3  5 10  7  8  3 12  1  6  1\n[42313]  9 10  6  6 10  1 11  4 12  7 10  6 11 11 12  3 12  1 10  3  9  3  6  7\n[42337]  9  7 10  5  7  3  7  2  1 11  9  8  2  8  8 11  7  7  3  3 12  5  2  5\n[42361]  3 11  4  4 10  4  5  2  4 11 11  4  8  8 10  5  8  5  4 10 11  3  8  3\n[42385]  3  5  5  4  4 10  7  8  2  8  7  9  3 11  7  8  1 12  8  7 11  2  6  1\n[42409]  7  3 12  4  8  2 10  9 12 11  5 11 12  9  7  9  9  8  9  2  6  2  4  5\n[42433]  1  9  3  8  7  7  9  2 11 12  2  8  9  3  4  8  8 11 12 10  7  1  3  7\n[42457]  6  6  8  4 12  3  8  1  3 11 11 12  3  8  4  7 10 12 11 12  8 10  9  2\n[42481]  8 11  7 10  7  9  4  1 11  2  7  7  7  1  7 12  8  6  7  1  4  1  2  3\n[42505]  3  7 11 10  4  2  2 12  2  4  7 10  1  8  8  3  7  8 10  4 12  5 11  2\n[42529]  8  4 12 11  3  4 10  2  4  1  4  6 11  2  8  7  3  5  5  5 11  7  3  4\n[42553]  3  4  4 11  4 10  9  1  8 12 10  2  5 11  9  2  8  6  5  1  1  9  4  9\n[42577]  2  4 11 11  5  8 11  3  8  2  1  7  6 11 10  9 11  7  7  1 11  3  2  7\n[42601]  8  5  5  8 11 10 12 11  7 11  5  3  3  4  9  1  8  9  9  8  2  3  3  1\n[42625]  5  6 11 11  4  1  2  4  1  3  8  8 10  8  8  9  2 11  7  8  3  6 11  6\n[42649]  2  3  9 11  5  1  7  5  2  8  1  5  8  4 10  2  3  3  2  1  2  6  9  9\n[42673]  6  7  6  2 10  6  7  8 11  7  1  3  3  8  5 11  8  7  4  1  2  7  9  8\n[42697]  8 12  8  3  7  9  8  7  7 12 10  1  9 11 12  7 11  3  8  8  4 12  3  8\n[42721] 12  2  4  3 10  2  8 10  5 10  4 10 10  1 11 12  3  7  3  3  5  4 12  1\n[42745]  1 11  2  4 10  5  5  4  1  2  2  3 12  3  1 11  3  8  8  5 10  4 10  8\n[42769]  5 11  2  9  5 10  8 12  1 11  4  7  5  3  7  9  8  8  9  3  6  7 10  6\n[42793]  1 11  4  9  2  2  4  1 12 11  4  9  5  6  8  5  3  2  3  4  7  4  2  5\n[42817]  2 11 12  3  8  2 10  8  6  3  4  3  9  1  9  9  3  7  8 10 12  3  9  8\n[42841]  8  2 10 10  7 10  5  8  7  7  1  9  7  3 12  8  2  6  6 10  3 12  9 12\n[42865]  7  1  9  4  6  8  1 10  9 12  8 12 11 10  6  5  3 12  4 10  5 11  7  6\n[42889]  9 10  3  4  1  1  9  3  7 12  4  5  7  8  5  8 10  7  4 12  8  3  4 11\n[42913]  9  4  1 10  2  8  7  5  7  4 12  6  7  4 10  7  2 12 11  2  1  6  6  9\n[42937]  6 11  9  2  7  1  4  9  7  1 10  1 12 11  3  7 10 12  9  2  8  5 10  4\n[42961]  1  6  2 10  9  3  6  7  8  6  2  3  2  7  4  7  5  8  7  6  5  7  8  3\n[42985] 11  5 12  9 10 10  3  8 10  8  9  7 12  2 11 11  1 10 12  1  6  4  9 12\n[43009]  6  2 10  3  3  2 11 12  7  9 12 12 10  1  1 11  8 12  6  5  5  2  7 10\n[43033]  3 10 10  5  6  3 10  8  8  4  4  9  5  7  9  9 11 12  2  6  6 11 10  8\n[43057]  8  3  3 12  2  9  5 12  7 10  2  9  7 11 10 10 12  5  1  9  1  4  5 12\n[43081]  7  6  7  7  6 11 11 11  3 11 11  6 10 10  8  9 12  8  1  7  2  3 11  1\n[43105] 12 12  5  5  1  6  9  9 12 12  2  3  7  7  6 12  3 12  2  2  2  3 10  6\n[43129]  6  2  7  8  8 12  9  8 12  4  1 12  2  9 11 11  9  5  9  4  6  5 10 10\n[43153]  4 11  5 10  3  9 10  2  4 12  8  9 12  5 12  7  1  7  1  9  4 11  1  2\n[43177]  6  8  8  6  4  4  7  4 10  1  2 11 11  8 10 10  5  5  5  2 11  1  8  4\n[43201] 12 10  8 10  1  7 10 11  3  8 10  1 11  9 11  3  4  2  3  9  8 12 11  5\n[43225] 11  4 10 12  1  1  7  1  1  7 12  6 10 10  6  4  9  4  5 10  9  6 10  9\n[43249]  6  3  5  3  7  1  8  9  9  7  2  3  1  2  5  6 11  3  3  7  8 11  6 10\n[43273]  4  8  8  3 10  9  6  7  8  7  5  6  7  9  9  1 11  9  8  8  7  3  5  6\n[43297]  8  7  2 12 11 10  7  9  9 11  6 11 12  1  1  6  6  1 12 10  3  8  8  9\n[43321]  8  6  9  3  8  1 11 10  8  7  1 10 11  8 12  1  6  4  8  5  9  7  3  8\n[43345]  4 12  4  9  5 10 11  8  1  2 12  4  1 11  3 11  5  1  7  9  5 11  3  1\n[43369] 10  9  5  8  1 12  3  9  8  5  1 12  7 10  8  4  5  4  7  5  7  1 11 12\n[43393]  7 11  8  6  9  3  4  5  5  8  6  9  7  5  9  5  4 10  4  9  3  7  5  7\n[43417]  1  7  8  3 11  7  7  6  3  3  1 10 11  9  6  1  7 10  5  9  3 10  4 11\n[43441]  6  6  3  6  3  2  1 10  1  1  7  3  2  6  7  3  5  4  6  6  9  5  9 10\n[43465]  8  4 10  8  7  5  7  3  9  1  8 11  5 12  5  4  1  2  8  1 11  3  1  5\n[43489] 11  6  3  2  1 10  7  5 11  8  2  7  9 10 12  2 12  3  2 11  9  9 12 10\n[43513]  6  9 11  8 12  4  2  8 10 11  8  9  3  7  4  4  6  9  7  2  6 11  4 12\n[43537]  7  5  1  3 10  7  1  9 11  7  9  5 11 11  5  2 12  7  6  3 11  9 10 12\n[43561]  6  9 10  9  4 10  1  6  9 11  9  8  4 10  7  9  9  7 12  5  6  4  8  6\n[43585]  3  4  2  6  9 12  9 11  5  8  6  8  8 12 12  2  1  3  9 10  6  1 12 12\n[43609] 10  8  8  7  1  2 10  7  6  8  6  5  7 12  6 10  2  8  6  3  7  3  5  6\n[43633]  4  5  3  9  5  9  7  5  9  8  3 11  2  5 11 11  5  8  5  8  4  1  1  1\n[43657]  4 10  3  6  3  8  4  7  4 11  9  3  3  3  1  1 12  3  1  5  4  2  7  1\n[43681] 10 12  8  5  2  9  6  1 10  7  1  2  6 12  4  2  8 12 11 10  5  6 11  9\n[43705] 10  4  9  4 12  4  8  4  8  8  9  4  3 10 11  6  7  5 10  5 10  2  4 10\n[43729]  8  5 11  9  3  2  5 10  1  1  1  4  1  6  3  6  5  7 10  3  1  7  6  5\n[43753]  1  2  9  2  9 12  9  9 11  3  4  4  4  4  4  1  3  2  5 11 11  2  1 12\n[43777] 10  4 11  4  3  4 10 10 12  2 11  3  2  1  3  8  4  1 11 10  7  7  7  1\n[43801]  1  1 11  1 12  1  4  5  6  5  8 10 11  9  7  6  9  5  1  9  4  1  3  3\n[43825]  2 10  3  6  8 11 12  9 12 10  4  6 11 11  4  8  3  4  7  3  8  9  9  9\n[43849]  4  8  3  1 12  6  2  3  9 12  1  6  3  9 12  8  5  3  3 11 10  7  2  2\n[43873] 10 12  9  2 12 11  3  3  8 12  8  2 10  4 11  8 10  7  8 10  4  5  3 10\n[43897] 12  5 12 10  9 12  7  1  7  7  8  7  1 12 10 10 11  3  5  9  6  4  4 11\n[43921] 12  2  6  1  8 10  1  3  4  5 12  3  3 11  5  9 11  5  1  6  6  5  1  8\n[43945]  2  4  2  8  4 10  8 12  9  5  9 10  8 11  1  5 11  3  4  3 10  4  6  2\n[43969]  1  1 11  9 12  9  1  4  9  3  7  3  9 10  3  7  4  2  2  9 10  3  1  5\n[43993]  5  2  9  8  7 10  9 11  2  4  9  7 10  1  2  5  6 12 10 12 10  1  5  4\n[44017]  3 12 10  1 11  2  4 11  4  5  2  7  5 12  1  7  7  9 10  9  2  1  8  6\n[44041]  2  8  7  4 11  1  3  8 11  3  1  2  9 10 11 10  3  4 11  7  7  7  2  1\n[44065]  6 12  2  7  3  9  7  5  2  3  6  6  7  2  3 12  2  9 10 10  4  6 10  4\n[44089] 11  4 11 12  2  3  7  1  8  2  4 11 12  2  3  9  1  2 11 11  8  5  9  9\n[44113]  9  9  5  6  8 10 11  6  4 10 11  1 10  7  1 11  8  5  6  7  4 10 12  6\n[44137]  9  8  3  5  3  1  3  9 10 10 10  4  9  9  9  1 12  4  4  3  4  6 11  4\n[44161] 11  8  3  9  1  9  9  6 12 12  9  3  5  5 11  4  7 10  7  2  6  2  3  1\n[44185]  1  6 10  3 11  8  1  2  6  8 11  7 11  6  1  4 11  7  3 12  3  2  2  3\n[44209]  6  7  7  2  5  5  5  1  3 10 12  5 10 10  4  4  2  8  1  3  4  4  4  6\n[44233]  5  5  1  1  9  5 10  9  4 10  5  2  3  2  4  9  5  8  7  8 10 10  5  2\n[44257] 12  5  6 11  5  9  3  8 10  1 12  4  7 11  7 10  3 12  7 11  2  7 10  3\n[44281]  5  9  1  3  7  2  4  8  8  1  7  1  2 12  6  4 11  2  9  5  5  5  1  4\n[44305]  3 11  4  4  7 12 11  1 11  7  8  2  4  7 10  8  3  2  9  7 12  8  6 12\n[44329] 12  1  9  5  7  6  1 10 12 11  7  4  7 12  8  3  8 12 12  9  8 10 10  9\n[44353]  9  2 12  4 10  6  3  4  7  3 12  2  3 11  3  9  4 11  8  4 12  9  9  2\n[44377]  4  3 11  8  8  1  8  5  4  5  7 12  4  5  2  1  3 10  9  3  4  1 11  8\n[44401] 11  1  4  1  3  7  9  2  7  6  2  9  8 12 11 10  2  4  4 11 11 12  3  6\n[44425]  8  1 11 11  7  4  5  7  3  7  1  2 10  5  6  4  3  8  7 12  3  5  6  7\n[44449]  2  9  5  6 10  5  7  4 10  2 12  6  5  7  1  9  5  4  7  6 11  8  8 12\n[44473]  2  9  4 10 11  8 11  2  5  3  7 11  9  8  9  5  2  6 11  4  7  2  8 12\n[44497]  1 11 10 12 11  6  8 11 10 10 12  8  3  6  9  5  9  9  9  6  5  4  8  7\n[44521]  1 11 11  9 10  2 12  8  4  7  9  1  3 12 10  9 12  8  3  9  9  7  9  9\n[44545]  7  8  2  6  8 11  1  9  5  3  3 10  5 10  2 12  5  8  8  6  2 11 12  1\n[44569]  9  8 10 11  5 12  6  6  4  5  2  3  4  9  6 11  4  2  6  1 12 12  1  7\n[44593] 10  3  1 11 11  2  7 10  4  7 10  7  2 12  4  6  7 11  5  5  1  1 10 12\n[44617] 11  2 11  5  3  5  1 11 11  9  2  2  6  3  4  7  6 11  1  1  1 11  3  1\n[44641]  3  8  4  8  5 12 10 12  5 10  9  1 10  2  5  6  1  8 12 12 10  8  3 10\n[44665] 10  7 10 11 10  8 11 12  1 10  8  2 10  2 12  6  7  6  4  4 12 11  8  8\n[44689]  3  9  8  5  8  4 10  8  6  6  4 11 12  7  3  3 11 10  6 11 12 12  8  6\n[44713]  9  1  2  1  3  6  5  7  7  6  2 10  6  2  4  9  8  2 10  6 12  3 10  1\n[44737]  2  5 12  3  1  4 12  7  9 11  3  7  7 12  3  2 12 10  5  3  1  3 10  9\n[44761]  8  7 12 10  9  6  2 10  3  6  8 12  1  6  2  6  5  2  8 12 10 12  7  6\n[44785]  8  6 10 11  5  8 10  7  1  4 10  5 12  7  1  1  2  7  5  4  2  3  4  7\n[44809]  4  1 10  9 10  9 11  1 10  8  6  1  5  9 10 10  2  4  8  1  7  2  4  3\n[44833]  6  3  3  4 10 11 10  9  3 10  8  1  8  2 12 12  5  5  2  5 10  9  3  7\n[44857]  5  4  3 10  8  7  5  4  5  8  7 10  5  4 11 11  1  8  9  1 10  5  1  2\n[44881] 12 10  5  9 10  1  4  4  7  3  8  4  2  5  1  3  1  1 12 12  2  9  5  6\n[44905] 12 11 10 10  1  3  4 12  6  4  5  9  7 10 12 11  9  4 12  7  3 11  1  4\n[44929]  1  9  4 10  1  7  6 12  8 10  3  5 10  5  5  3 10  2 11  2  4  2 11 10\n[44953] 11  1 10 10  4 12 11  9  7 12  7 12  6  4 11  8  7  8  4  6 12 10  1  3\n[44977]  4 12 11  4 10  2  2  3 12  3  4  2  5  3 12  9  8 11 11  5 11 11  9  9\n[45001]  9  2 11  3  5  8  6  4  4 10  8  6  7 11  4  9 11  8 10  9  6  9  5  4\n[45025] 10  8  2  1  2 11  6  9 12 10  9  1  7  4 12  7  1  4  7  7  6 10  1  1\n[45049]  9  9  5  1  6  3  3  6  6  8 11  2  9  8  2  1  9  8 10  8  7  4 12  7\n[45073] 12 10  6 10  9  8  1  6 11  4  3 11 11 10 11  7  1 11  1  7  3  4 10  2\n[45097]  6  8 10  7  8  8  4  3  4  1  3  3  4  1  8 12  3  4  2  6  5 11  2 12\n[45121]  3 12 12  1  7  8  9 10  7  3  2  8  9  8  1  9  5  2  7  6  6 11 10  4\n[45145]  5  6  4 12 12  9  7  4  8  6 12  4 12  3 11  3 12  8  7  6 11  9  4  7\n[45169]  9  3 11  9  1  8  5  8  7  2 10  1  7  3 10  9  8  4  6  2  4  1  2  4\n[45193]  4 12 10 10 10 10 10  4  5  8  2  8  4 11  4  6  8  6  2  2  2  6  9  2\n[45217]  2  4  9  9 11  3 11  8  7 12  6 12 10  9  8  5 12  1  7  3  1  7  2 10\n[45241] 11 10  1  8  1 12  1  9  6  9  8  2  6  7  9  5  1  5  4 12  9  4 11  8\n[45265]  4  3  6  7  7  1  4 10  5  1 12  5  9  2  9 10  7  1  9 11  5 12  1  6\n[45289]  8  1 12  7  8  7  2  8  9 10 11  2  8 11  7  4 12  1  1 12 10 12  5 10\n[45313]  9 11  2  6 10  1  4 10 10  4  6  6  3 10  3  1  2  8 11  9  9 10 10  3\n[45337]  7  8  8 12  5  3  6  6  1 12  2  5  8  8  9  7  5  5  8 12 12  6  1  8\n[45361]  3  9  7  9 12  8  2  1 12  6  9  3  1 11 12  2  2  4 12  1  1  3  4  9\n[45385]  5 12 10  8  2  4  1  3  6  1  3  5  8 12 11 10  6  1  8  6 12  1  1 10\n[45409]  7  2  5  3 12 11  9  1  1  1  1  8  2  4 12 12 12  6 12 11 11 12  4  6\n[45433]  1  3  7  3  2 10 11 12 12  1  9 10 11  3  9 12 11  5  3  9  4  2  4 10\n[45457]  5  1 10  1  3  4 12  6  8  2  1  5  3  8  4  2  8  4  2  5  7  3 10  1\n[45481]  7  5 11  6  3 12  5  2  5  2  5  1  2  9  5 12  7  8  7  6  4  3  6  6\n[45505]  4  3  2  3 11  7  6 12 10  1  8 11  9  4 10  7  2  4 10  6  9  2  5  3\n[45529]  7  9 11  7  5  2  7  4  2  3  2  3  9  8 12  4  9  3 11  1 11  5  6  7\n[45553]  8 12  1 10 10 10  5  6 11  6  9 10  8  6  3  9 12  6  3  4  9  9  1 11\n[45577]  4  8  2  8  2 12  9  8  7 10  8 10 12  6  2  7  4  7 11  1  8  3  1  6\n[45601]  8  2  9 10  1  4 10  6 11  5 12  8  4  3 11  8  3  4  1  2  3  2  8  8\n[45625]  8 10 11  6  3 11 12  4  7  4  5 12  7  8  3  7 11  6 12  3  3  1  9  8\n[45649]  1 12  6  1  9  5  2  1  3  5  9  4 12 10  8 10  1  8  8  6  1  1  9  2\n[45673]  6 11 12  5  9  3  5  8  1  3  9  3 12  5 12  3 10 11 12  7  7  3 10 10\n[45697]  3  4  4  9  1  5  9  3  5  5  2 10 12  4  5  5  3  4  9  6  9  7 11  1\n[45721]  4  5  7 10  7 12 10  2  1 10  5  9  7  7  1  5  3 11  6  3  7 10  5  7\n[45745]  1  1  4  8  2  7  9  6  9 10  3  1 12 12  7  6  4  8  1  1 11  9 11  2\n[45769]  8 12 11  2  6  9  1  7  8 10  7  9 10  1  5  8  9  4  8 11 10 11  5  8\n[45793] 11 10 11  8  8  1  8  4  9  9  5  5  5 12  6  1  2  6 10  4  3  6  8  4\n[45817]  6 11 12  3  5  1  2 10  6  8 10  6  1  4  9  5  7 10  4  2  4  2  7  4\n[45841]  8  3  7 12 12  6  2  6  6 11 12 11 10 10 10  9  8  6  1 11 10  1  2  9\n[45865]  2  7 10 12 10  8 12 10  7  6  4  6  3  1  3  4  5  3  8  8  2  8 12  8\n[45889]  6  6  4  2 10 11 12  2  7 10  9  5  8  2  4  7  6  2 11 10  5 11  4 11\n[45913]  3 12  6  9  9  1  4  9  5 12  3  2  7  6 12  9  1  5  5  9  6 12  4  9\n[45937]  6  8  4  8  5  1  9  5  4  3 11  8  5 11  7  9  9 10  1  3 12 11  2  6\n[45961]  8  6  1  2  6 10  8 11  7 12 11  7  4  7 11  8  3  5 10 12  6  9  1  4\n[45985]  2  6  8  8 11 11 12  5  1 11 10  1  4  6 12  9 12  7 11  1  9  4  4  5\n[46009]  2  2  8  1  2  7  1  1 10  2 12  5  1 11 12  9  7 12  4  5  3  3  2 10\n[46033] 10  5  9  7  8  2  8 12  1  4 12  8 12  2  1  5  9  5 10  3  8 12  3  7\n[46057] 11 11  3 11  4  6  9  6  3  7  9 10  5  1  6  6  8 12  4 12  6  7 12  6\n[46081] 12  2  3  3  1  1  2  7 10  1 12  5 11  3  7  3 10  9  2  6  8  8  3  9\n[46105]  6  7  5  4  7  1  7 10 10 10  6  8  4  9  3  5  5  5 11  3  7 10 12  9\n[46129]  1 10  7  8  2  4 11  5  9  5  7  2  5  1  2  7  6  8 10  1  5 11  7 12\n[46153] 10  8 12  8 10  4  6  3  5 11  5  9  1  4 10 11 11  3  5 10  2 10  6 11\n[46177]  9  4  8  3  5  9  4  4  5  2  3  2  3  2  9  5  7  1  8  8  6 12  7  4\n[46201]  7  4  7  1  8  7  3  2  1 11 10  5  4 10  8  9  2  3  4  2  7  3  8 11\n[46225]  6  2  2  6  9 11 11  3  8 12  5 10  5  5  3  6  7  7  6  6  9  1 10 11\n[46249]  3 10  2  8 10  2  6 11  6 10  5 11 11  7  7 11 11  9  3  7  3  3  5  3\n[46273]  6 10  4  8 12  1  4  5 10  5  3  4  4  8  6  2  1  9  3 11  6  7 12 10\n[46297]  8  6  8  9 10  9 11  5 10  7 10  6  6  7  1 10  3  5  6  5 11  5  7  1\n[46321]  9  5  7  4  9  1  3 12  6  5  1 12  6  4  9  1  4  6  2 10  2  1 11  8\n[46345]  2  8  8  3 12  6  8  2 11 12  5  9  1 12  4 10 12 11  1  8  3 11 12  1\n[46369] 10  1  7 12 10  7 12  9  9  9 12  1  1  1  1  7 11  7 12  9  8  8 11  2\n[46393]  6  8  5  9  9  6 11  6  2  1  8 10 10  3  3  4  1  9 11  3  3  3  3  2\n[46417]  3  4  4  2  5 11 10 12 10  1  7 12  6  3  6  5  7 11  3  7  4  4  1  1\n[46441]  5  7  5 11  5  7  2  8  6 11  8  1  4  6  3  8  4 11  9 12 10 11 12  3\n[46465]  2  7  5 11  1  1  2  8  4  5  1  2 10  5  3  5  8  7  9 11 11 10  2 11\n[46489] 10  7  2  9  2  9  7  2  2  7  6  6 10  6  5 12 12  1  8  1  3 11  4 11\n[46513]  7  3  4 11  6  7  9  8  6  5  8  1  7  4  6  2  4  5  8 10  9 12  1 10\n[46537]  3  3  8 11  4 11 10  4  7  7 10 12  3  8  2 11  3 11  5  2  6  1  2  3\n[46561]  4  1  1  3  7  2 10  2 10 11  5  3 10 11  4  8  8  2 11 10 11 12  3 10\n[46585] 12  2  8  2  7 11  6  6  6  8  6  8  3  5  4 11  3  7 12 10  7  5  1  6\n[46609]  8  2  1  1 12 10  5 12  1  2 11  3  3 10 12  3  6  7  4  7 12  2  9  3\n[46633]  5 11 12  3 11  2  4 12 10  6  8  9  8  1 11  6  3  2  3  6  3  7  9  7\n[46657] 12 10  5  1  6  7  6  9 11 12 12  2  3  7  2 11  6 12  4  6  2 10 10 10\n[46681]  2 10 12  6  8 11  8  2  1  8  4  8  2  3  3 10 12 11  2 12  3 12 11  9\n[46705] 11  9  6  3 10  2 11  4  5  9 10  2  1 12  7  3 11 11  2 10  7  6 12  8\n[46729]  7 12  1 11  3  8  8  1  7  4  7  1 11  9  3 10 10  3  6  8 12 10 12 12\n[46753]  2  9  7  7  1  8  1  7 12  2  2  8  1  4  5  4  1  4  8  1 11  2  5 10\n[46777]  4  9  9 11 10  1 11 11 10 10 10  3  1  5  1  6 12 10 10  6  8  5 11 10\n[46801]  6  6  1  6  2  7 10 12  9  5  4 12 10  2 12  2 12 12  3  4  7  8 11  8\n[46825]  9  5  1  1  4 11  5  2  8  3  8  4  2  3  7  2  6 11  4 12  6  5  7  4\n[46849]  4  8 12 11  3  6 10 12  8  9 12  2  5  4  9  1  8  2  1  5  3  1 12  9\n[46873] 11  4  1  2  9 10  3  6 11  6  4  6  4  1 12  9 11 12  5 12  5  8  7  6\n[46897] 12  6  7  3  8  1  6 12  3  5 10  4 12 11 10 10  2  7  4  6 10 12  1  7\n[46921]  2  7  5  8  6  1  9  4 10  7  3  5  7 12  7 12  4  8 11 10  8  7  8  5\n[46945] 11  7  9  8  8  5 10 11  2  8  1  9 10  6  2  3 10 11  1  4  4  8  6  4\n[46969]  7  6 12  7  4  6  4  9 12  5  1  8  2  9  4 12  8  4 12  6 12 11  1 10\n[46993]  7 11  2  7 11 11 10  6 12  9  7  6  5  9  3 11  8  8  9  6  8  9  8  9\n[47017]  3  1  8  7  9 11 10 11 10 11  6  4  9  9 10  7  5 10  9  3  2  4  7  9\n[47041]  4 12  8  3  7  6 12 11  7  2  9  9  2 12 10 11  2  9 11  4  7 11  4  6\n[47065]  8  4 10 10  3 10  4 11 10  7  3  2  7  1  5  8 11  3  3  9 11  9 10  5\n[47089]  6  9  4 10  9  2  7  6  1  6  1  9 12 11  4  7  2  2  8  8  5 11  3  4\n[47113] 10 10 11  4  3 12  8  1 10  7  6  1 10 10  7  1  2  6  8 10 10  7  2  8\n[47137]  3  7 11 12 12 10  9 10  3  9  1  9  2  6  5  9  1  9  1  3 10  3 12  4\n[47161]  2  6  9 12  8  7 10 10 10  3  7  5  7  7  4 10  2 10 11  5  1  5  5 12\n[47185]  5 12 12  7 11  9  1  6  9 11  9 11  7  1  1  7  7  9 11 12  5  5 12  3\n[47209]  3  8  8 12 11  9  3 12 10 10  4 11  9 12 10  7  8  3  8  2  6  5 11 10\n[47233]  1  8  4  4 12  6 10 12  2  3 12  3  5  1  8 11  9  6  7 11  7 10 12 11\n[47257]  1  5 10  9  3  5  2 12  5  8  9  4  9  7  6 10 10  5  7  2  5 11  1 11\n[47281]  9  8  7 12  5  9 11 11  3  8 12  4 10  7 10  1  1  3 10  1  3 12  4  6\n[47305]  4  9 10 10 12  3 11  8  2 11  2  3  7 11  2  7  8 10  2 11 10  1 11  4\n[47329]  1 11  5  1  8  8  9  1  1  2  7  6  3 10 10  6  8  7  4  2 12  3 12  1\n[47353]  9  3  9  2  8  5 10 12  9  5  4  6 12  8  8 11  1  4  8  5  7 11  4  1\n[47377]  5 10  9 10  5  9  4 11  1 10  9  4  8  3 12  5 10  7  1 10  5  1  4  9\n[47401]  2  6  4  3  9 10  4  5  8  8  2 10 11  2 12 12  7  9 12 10  6  7 11  1\n[47425]  6 11  5  5  7 11  4  1  8  4  7  2 11  5  1  7  4  2  1  3  9  6  7  5\n[47449]  1  5 12  5  4  3 12  8  1  5 11  8  3  5  1  7  3  8 10  3 10  8 12  7\n[47473]  8  9  7 10  8 10 12 10  4  1 11  8  1  4  3 12  7  3 10 10 10 11 12 11\n[47497]  5 10  7 12 11 11 11  2 10 11  8  6  3 11  8  8 12 12 10  7  8  6  8  6\n[47521]  8 12  3 12  8  7  3  9  1 10  6  1  3  4 12 12 11  3  9  2  5  3 10  3\n[47545]  9 11  3  4 12  3  1 12 10 10  5  8 11  3  1 12 11 12  6  8  2  4 12 11\n[47569]  4  5  3  1  1  1  7 10 10  2  6  5  7  3 12  3 12 12  8  6  8  9  7  5\n[47593]  1  3  9  6 10  1  3  8  5  3 11  6  1  7  5  7 12  3  5  9  7 10  7  2\n[47617] 12  5 12 12  4  2  8 12  2  8  9  5  7  9  3  5  3  5 11  5  1  5  8  3\n[47641]  6 10  8  9  5  3 10 11  8  8  7 10  6 12  2  4 11  2  6  7  5  6  9  7\n[47665]  7  9  4  3  2  2 11 12  9  1  4  8  2  9  5  7 11 10  4  9 10 10 12  1\n[47689]  9  7  5  3  7  1  1  1  3  3  3  7  1  4  1  1  3  3  1  4  5  4  7  3\n[47713]  3  5 12  9  6 10  8  6  5  6  3  9  8  4  2  5 10  9 12  4 10  8  5  4\n[47737] 12  6  3  8 12  5  1  9 10 12  7 11  6  8 11  3  2  8 11 11  5 11 12 11\n[47761]  4  4 12  5  4  7  4 10  6  8  3  3  5  4 10  9  5  8  8  1  1  2  4  2\n[47785] 11  4  9  5 10  3  6 10  8  9  9  1  3  4  8  4  1 12  1  9  1  4  2  2\n[47809]  3  6  4  7  6  2 12  2  5  4  5  3  3  5  7 11  5  1  8  6  7 10  7 12\n[47833]  6 11  1  6  9  2 10  6  7  2  3  3 11  4  7 12  2  2 12  3 12  1 10  3\n[47857]  3  6  7 12  6  6 11  3  1  7  4 10 10 10  9  4  3  2  2 12  7  6  4  2\n[47881]  9 12 10 11  6 10  4  7  2 10 12  7 12  9  4 12 12 12  4 11  9  3  5  7\n[47905]  9 11 10  3  6  2  5  7  8  7 10  6  9  2 10  6  8  4 10  1  7 10  3  5\n[47929] 12  3  4  3  3  5 10  2  2 12  6  1  6  5  5  1  7  2  9  4 10  6  6  2\n[47953] 10 12  7  8  4 10  9  9  3 12  4 11  4 11  7  7  2  1  3 10  6  3 11  3\n[47977] 10  2 12  6 12  7  2 10  8  1 11  8  9  8  9  3  1  4 10  3  6  6 10 10\n[48001] 12  2  3  1  1 12  3 10 12 10 10  8  9  3 10  9  3  8  4 10  5  8 11 11\n[48025] 10 12 12  6 12 12 11  7  7  2  3  5  2  3 11  3  7 11  8 12  4  7  6  6\n[48049] 12  7 12 10 11  5  2  6 12  5  6  8  1  3  4  2  4 11 11  8 11  3  9 11\n[48073]  3  4  3  3  3  1  4  2 11  3  7  5  3  1  6  6  6  7  2  6 10 12  8  9\n[48097] 10  1  2  5  6  3 10  5  8  6  3  3 11  9  2 12  9  8  7  4  8  8  1 10\n[48121]  4  8  9 10 11 12  3  7  5  5 10  1  7  5  9  4  6  2  9  5  8  8  7  8\n[48145]  5 10  3  7  2 12  5  2 11 10 10  1  7  7  4 10 12  7  6  2 11  6  5  6\n[48169]  3  2 12  7  2  3  6  1  3 10  9  3  8  6 12  1  1  8  7  5  3  7  5  9\n[48193]  6  4  7  3  9  9  4  5  9  7  5  8  5  5  5  3  3  1  1 11  8  4  1  5\n[48217]  3  6 12 12  5 10  8  4 10 12 10 10 10  7 12 12  5  3  4  2 12  1  5 11\n[48241]  4  4  7  7  7  7 12 10  5  3  8 10  7  1  1  5  6  7  3  7 10  1  8  9\n[48265]  6  2  2  8  5 10  3  2  4  6  5  4  3  9  9  8  2  5  6  1 12  9  2 12\n[48289] 12  3 10  8  3  9  8  7  9  5  8  7  8  9  7  4  7  2  3 10  7 10  8  5\n[48313]  9  7  5 12  6  7 12  9  2  2  7 10  3  7  1  8  4 12  5  4  2  5  2  9\n[48337]  5  4  4  3  8  4  6  5 12  8  7 10 11  2 10  4  2  3  8  9  2  9  8  8\n[48361]  8 10  5 11 11  7 11  6 12  4 10 12  4 12 11  5  6  4  9  6 12  4  5  5\n[48385]  3  2  5 12 12  7  6  4  5  6  6  2  2  5  5  7 12  2  5  5 10  6  8  3\n[48409]  6  5 10 11  1 10  4  4  5 12 12  3  4 11  4  2  4  1  2 10  3  4  3  4\n[48433]  3  3  3  4  3  5 10  3  5 10 10  7  1  7 10  4 12  2  8 12  7  3  1  3\n[48457]  8  6  1  9  3 12  2  8 11 11 12  6  8 11  6  5 10  5  4  2  7  3  9  2\n[48481]  1  2 11 12  8  5 10  9 12 12  5  1  2  3 11  8  6 11  3  5  4  4 12  7\n[48505]  4  3  2  2  6  3  6  6 12  4  8  4  7 11  9  7  8  9  2  2  8  7  1  7\n[48529]  3 10  7  9  6  3 10  1 10  8 11 10  6  3  1  7  4 10 11  6  3  1  3  2\n[48553]  7  7  7  2  6  1  9  3  6 11 12 10  1  2  1 10  2  2  8  9  8  2  8  8\n[48577]  3  8  1 12  8 11  3  5 12  2  9  7  6  5  2  4  9 12 10  1 12  8  1  5\n[48601]  6  4  4 10  5  4  2  9  2  7  4  2  2  1  2 11 11  6  2 10 10  2 10 12\n[48625]  3 10  2  5  9 12  3  4  6  4  2  7  7 12  5 10  5  2  4  7  9  9 12 11\n[48649]  1 12  4  3 11  9  9  1  3  7 11  6  9  1  8  7  9  8  2  3  9  5  6  9\n[48673] 12 11  8 11  4  9  1  7  1  9  7  7 11  8 12 12 12  8  2 10  6  2 11  3\n[48697]  9  8  7  9  9  3  2 10  7  3  4  8  3  4 11  7  8  4  6  7 11  6 12  9\n[48721]  1  4  9 11  2 12 12  9  7  1 12 11 11  9  1  2  4 12 12 11  6  9 10 11\n[48745]  8  1  4  4  1  3  9  6  7 10  2 11  5  9 11  7  8  9  6 10  5  8  1  9\n[48769]  9  6  8  4  1 10  7  1  7 10  2 11  7  7 11  4  4 10  2  2  7  5 12  3\n[48793]  8  3  7  6  3  5  9  6  1  6  2  4 10  4  2  6  8  6  3  7  4  1  7  4\n[48817] 10  6 11  2  4 11  2  9 10  1  8 11  8  8  7  1  6  4  3  3  5  8  8 12\n[48841]  2  2  1  3 12 12 12  1  6 10  3  6 12  8  4  1  9 10 10 12  2 10  7  9\n[48865] 12 12 11  8  4 10 12 12  9  9  7 10  6  1 11  5  6 10  3 10  8  1  1  2\n[48889]  7  4  1  5  4  5  9 12 12  3  2 10 10  7  1  2  4 12  8 10  5  7  8 10\n[48913]  3  6  6 12  1  7  1  8  8  5 10  7  1  1  9  5  5  2  4 12  2  8  3 10\n[48937]  9  8  6  9  5  7  9 10  6  4  7 11 12 11 10 10 12  8  3 11  4 12 10  7\n[48961] 11 10 11  8  9  8  5  4  5  2  3 11  8  9 11  8  5  2  7  2  4  6  5 12\n[48985]  5 12  1  7  4 10  4 12  8  1  5  2  2 11  2  8  6  4  7  3  6 10  1 11\n[49009]  8  7  2  1  9 10  3  2  6 12 12  1  1  1  1 12  7  2  6 11  3 10  3 12\n[49033] 12  2  4  4  1  4  8  9  6  7  9 11  5  6  6  1 12  1  9  4  9  9  3  3\n[49057] 10  9  3 10 11 10  7  4  5 11  6  4  8  7  8 12  4 11  6 10 12  8  3  6\n[49081] 12 11  1  1  1  3  2 10  6  8  5  7  1  7  9  4 11 12  2  1  5  5 10  7\n[49105]  9  3  1  8  3  1  1  3  7  4  2  1 12 11  8  8 10  2  8 11  8 11  6  1\n[49129]  4  2  7  6  8  6  3 12  2  2 11  8  5  3  5  5  1  5  2  8  9 11  2  9\n[49153]  8  4  8 12  7 11 12 11  4  3  5  8  3 11 10  8  7  2  7  7  2 12  4  8\n[49177]  4 11 10  1  2 10  3 10 10  4  5  1  5  6  9  6  1 12  3  6  2  9  8  3\n[49201]  7 12  8  7  3  4  1 10  1 12 11  7  6  2 11  2  2  6 12  2  2  5  6  2\n[49225]  6 12  2  2 11  4  2  3 11  4  1  2 10  4  2  3  1  4 12  4  3  3  3  3\n[49249] 11  3  4  3 11  4  6 10  9  6  5  8  3  4  5  1 11  7  7  6  1 12  5  2\n[49273]  8  4  5  7  4  6  5  6  9  3  2  5  3  9  3  9  5  9 12  3  1  5  6  9\n[49297] 12  8  2  5  5 12 11  9  8 11 11  9  5 12  2  7  8  4  1  7  9  1  1 10\n[49321] 12  3  7  6  7  1  8  7  5  5 10  6  8  3  8 10  2 10  5  9  1  7  5 12\n[49345]  9  1  4  5  4  1 11 12  8 12  2 12  3  8  3  3  9  9  1  1  7 10  6 12\n[49369] 11  4 12 12 12 12  5  5  1  3  2  3  2  2  7  1  4  6  5  9  5  7 12  6\n[49393]  9  4  6  4  2  7  9  1  8  3  5  5  4  7  7  4  1  7  9  3 10  9  8 11\n[49417]  3 12  9 10  6 12  8  4  1  5 10  4  7 10  4 12  8  2  9  6  8  4 10  6\n[49441] 10  6  7  3  1  4  8 11  6 11  4 10  8  9  8  3  3 11  5  6  5  9 10  1\n[49465]  8  7  5  6  7 10  7  8 12 12  7  5  1  8  1 11  1  8  9  8  2  6  6  6\n[49489] 11  6  7  6 12 11  9  7  5 12 11 10  6  5 12  8 12  9  9 10  8  7 11  8\n[49513]  4 11  5  8  6  2  2 11 10  1 12  1  3  1 10  8  3  5  2  6  6 10  8  1\n[49537] 12  5  2 11  7  4  1 10 10  4 11 10 11  1 11  4  9  2  3 12  7  6  2  6\n[49561]  9  9  6  3  4  8  8  1  5  1  6  7  2  4  3  1  1  4  1  5  7  8 10  3\n[49585]  7  8 10  5  6  9  1  2  3 10  7  6 11  8  6  1  5  6  5  9  1  7  2  2\n[49609] 12  2 10  5  9  6  3  3  5  1 12  3  7 10  9 11  3  6  9 10 10  7  1 10\n[49633]  1  6 10  1  3 12 10  6 10  8  8 11  1 11  6  2 11  2  7  8 10  1  5 12\n[49657]  9  4 12  4  3 10 12  8  3 12  4 10  9 10  9  1  6  2  1 12  2  1  9 10\n[49681]  3  4  5  5  2  8  1  6  2  2  4  6  8  8  9  8  1 12  4  6 12  5  1  6\n[49705] 11  9  7  3  7 12  3  6 12  8  5  1  1  1  7  8  7  6  9  3  3  3  2  3\n[49729]  9  4  2  3 11 12  4  1  5  1  1  2 10  6  9  2  4  6  9  8  9  9  1 12\n[49753] 11  3  9  7  1  1 11  2 12  4  6  6  7  3  9  8  6 10  6  1  9  3  2  3\n[49777]  6 12 10  5 10  9 12  3  2  7  4  2  1 11 12  7  7  8  7 10 10 11  1 12\n[49801]  4  8  1 11  6 12 10  1  3  1  3  6  1  9 11  1 12  8  7  4  2 11  7 12\n[49825]  1  9  7  9  8  3  5  9  9  3  9 11  5  4 11  1  6  4  4  2  5 12  1 11\n[49849]  3  4  6  7 11 11 11  9  9  2  1 10  7  8 10  1  6 10  6  7  8  4  9 12\n[49873]  2 11  3  2 12  3 10  2  8  3  1  2 10  5  9  3  6  3  9  6  3 11  9  8\n[49897]  8 10  3  9  8  6  6  3  4  2  5  8  6  6 12  7  6 10 11  5 11  1 10  9\n[49921]  4  2  9  4  9 10  3 11  2  5 12  9  6  5  8 12 12  9 12 10  8  6  2 10\n[49945]  5 12  6 10  1  6  9 11  2  6  7  2  4 11  9 12  2  6  9  5  5 12  6  3\n[49969]  3  5 12  9  3  5 10  3  2  4  8  7  2  1  1  5  4  2  5  6  5  1  9  9\n[49993]  3 12  3 10  7  7 11  8  2 10  8  4 11  9  3  1  7  9  1  9  2  3  8  7\n[50017]  2 11 11  9 12  5 10  8  8 10  3  5  3  6  2  2  2  5  7 10  1  8  4  1\n[50041]  3 11  6 11  8  1  3  9 12  8  3  6  5  4  9  4  5  2  6 12 10  2  1  8\n[50065] 12 12  1  1  7  1  4  5  7  1 11  3  1 11  1  7  5 12  9 12 11  3 12  2\n[50089]  6  4  3 10  1  3  7  2  7  1  2  4  5 11  2  1 12 12  2 12  7  9 10  1\n[50113]  5  8  3 11  2  2  9  6 11 10  3  3  1  5 10  8  3 11  2  1  8  6  1 12\n[50137] 10  8 11 12 12  3 11  5 12  6  6 12  5  5  2 11 11  1 11 12  8  3  4  6\n[50161]  6  9  6  9  5  8  4  7  5  4 10 12 10  5  4 12  3  5  2 12 12  9  9  7\n[50185] 10  4  9  1  2  7  9  1 10  2  9  3  7 10  6  9  9  5  5  1  1  3  2  8\n[50209]  5  8  7  8  2  8  7  1  6  2  9  1 12  5  4  5  3  1  3  1  7  6  3  3\n[50233]  4  9  3  3  8  6 10  1 10  8  4  1  2 12  3 11  1  7 12 12  9  6  6  8\n[50257]  3  4 12 12  1  4  3 10  2  9 10  7  1  6 12  2  4 11  1  3  9  6  2  7\n[50281]  1 11  4  9  3  4  7  7  2  7  5  6 10  7  6  2  3  2  6 11  4  3  8  4\n[50305]  1 12  2 11  7 10  4  5  1  7  5 10  3  2  7  6 11 12  1 10  3  7 12  1\n[50329]  8 10  6  7  1  3 10  8 11  7  2 11  6  2 10 12 12  1 12 11 11  6  7 11\n[50353]  8  1  4  3  1 12  8 10 11  1 12  4  8  6  4 12 11 12  1  2  9 12  9  9\n[50377]  4  3 11  2  9  4 10  1  7  6  3  1 10 10 11 11  9  5  7  7  6  6  2  4\n[50401] 11  6  5  6  5 10 11 12 11  7 10  8  3  1  1  7  6  7  5  8  7  8  8 12\n[50425]  4  3 12  3  1  3  2  8  4  2 12  3 12 11  8  4  5  3  1  5  3 10  9 11\n[50449] 11  8  7 10 12 12  6  8  5  3  1  4  9  8  4 12 12  7 12  9  3 11  5  1\n[50473]  3  4  8  6  4 10  3  1  2 11  2  8  5 12  8 10  5 12  5  7  9  1  4  9\n[50497]  2  3  6 10  1  9 11  5 11  5  5  7 12 12 11  8  4 11  5 12  9  2  4  7\n[50521]  7  9  2  6  1  5  7 12  9 11 11 11  1  3  2  6 10 10  8  5 11  6  6  8\n[50545]  2  9  2  3  9  6 12  5  1 11  5  4  8 10  8  7  5  9  5  8  1  3 12 10\n[50569]  1  5  9 11  2 10  6  6 11  7  3  9  8  7 12  2  7  7  8 10  3  6 11  7\n[50593]  3 11  2  8  4  8 11  4 10  9  2  6  8  9  4  5  8  2  8  1  2 11  9 12\n[50617]  5 10  6  4  8  7 10  9  1  2 11 12  5  6  7  5  9  8  7  2  6  6  5  5\n[50641] 10 11 12  2  6  6  9  8  9  7 11 12  5 10  7  8 11 11  9 10 10 10 10  1\n[50665]  4  5  9 11  4  6 11  6 12  2  1 10 10 12  9  7  5  2 12 10  2  3  8 12\n[50689]  8  4 10 11 10 12  1 10  8  5 11 11 10  8  9  1  9  9 10 12  1  7  5  3\n[50713]  5  7  2 10  5 11  8 10  8  1 11  7 10  3  3 11  2  8  9  4  1  6 12 10\n[50737]  5  9  5 12  8  3  3  6 10  9  7  3  6 12  2 12 10  3 10 11  3  2  6  6\n[50761] 12  3  3  7 12  1  2  3  8  4  9 10 12  4  3  2 12  7  4  4  1  1  8 12\n[50785]  9  7 12 11  2 10  9  5  4  8  7  1  4  9  1  4  3  5  5  7 10  9  5  4\n[50809]  3 11  1  2  1 12  6  3  7  6 12  8  9 11  2  4  9  9  8  5  8  9  9  6\n[50833]  2  2  2  5  4  1  8 11  7  3  5  2  7  3 12 11  8  8 12  4 12  3  1  8\n[50857] 11  8  7 10  9  2 10 11 10  9  6  1  6  2  1  4  1  2 10  1  8  4  9 11\n[50881]  4 10  9  2  3  1  6  2  1  1  7  9  3  5  9  2  1 12  8  2 11  5  2  1\n[50905]  4  5  1 12 12  9 11  7  6  9  1  8  8  6  9 12  2  3  7  6 12  6  6 12\n[50929]  3 10  6 10  6  4  1  2  8  8 11  6  1  1  7  7  1  8  8 10  5  8 12 12\n[50953]  2  1  1 12 10 11 11 11 10 10  4  8  8  4  7  1 11  2  7  4  7  6 12  4\n[50977]  2  1  2  8 10  3 12  4  5 10  1  7  6 10  2  1  4  3  3  3  6  3 10 11\n[51001] 10  5 10  8 10  6  1  3 10  5  2  9  4 10  3  3  5 12  3  7 11  7  6  2\n[51025] 10  2 11 11 10  4  2  4 12  7 12  7 11  8  7  5  4 11  7  1  4  3  2 11\n[51049]  3  8 11  4 12  2 11  7  3 10  7 10  3  5 12  7 11 12 11  3 10  6  3  4\n[51073] 10  6  8  4  2  4  3  6  6  4  2  2  8  8  8  8  3  1  2  8  1  8  1 12\n[51097]  7 12  7  9 11  8  8 12 10 11  7  5  1  9  2  2  8  9  1  1 12 12  3 10\n[51121] 10 11  4  5  9  2 10  5  5 10  4  5  5 10 11  9  7 11 12  5 11 10 11  4\n[51145]  2  6  4  4  6  2  9  9  2 12 12 11  2  9  9  6  7  8  5  9  2  8 11  8\n[51169] 12 11  2  7  5 11 10  6  2  4  5  5 12  2 10  1  5  6  3 12  6  7  7  2\n[51193] 12  6  7  9  5  9  3 12  6  3  9 10 11  8  3  2 10  1  9  5 11  1  2  6\n[51217]  3  5  7  2  4 10  7 11 11  7  5  8  3  6  1  5 10  3  6  7 12 12 11  6\n[51241] 11 11 12  5 12 11  8 12  2 10  8  5  8 10  7 10  9 11  1  8  1  3  1 10\n[51265] 10  1  8 12  9 12  8  2 12 11 11  4 12 12  4  5  9  6  5  8  9  5 11  2\n[51289] 12  3 10  7 10 11  5  5 11  5 10  7  9 11 11  7 11  8  2  9  8 11  5  5\n[51313]  5 12  7  8  1 11  6  6 11  1  5  1 10  8  2  5  9  1 11  5  1 12  2  6\n[51337]  9  2 12 11 10  9  6 12  1  5  6  8  9  3  1 10  3 10  2  6 10  1  5  6\n[51361] 11  9 10  5  4  6  5  6  3  1  4  2  5  3  5  5 10 11 11  1  2  8  1  4\n[51385]  3  6  9 10 10 12  6  8  6  4  7  7  2  4  5  9  1  9  2  4  6  3  9 12\n[51409]  9 11  5  1  8  5  5 11  7  4  4  3  6  5  8  5  7 11  2  6  6 10  2 10\n[51433]  8  6 12  2  2  4  1  4  2 12  7  4  4  1  9  1  9  3  2  8  3  6 10  8\n[51457]  6  9  4  9  3  3  4 11  8 12  9 12 12  4  5  9  8  1  9  3 11 11  2 11\n[51481]  7 12  4  6  5  8  5  5  1 10 12  7 10  7  3  8  9  2  5  1  1  1  3  4\n[51505] 11  4  5  7  4  3  8  2  6  1  8 10  3  3  8 11  3 12  5  7  5  4  5 11\n[51529] 10  3  2 12  8  5 11  5  3  8  3 10  5  5  2  9 12  7 10  8 11  3  1  2\n[51553]  6  1 12  3  8  3  7  8  9 11  2 12  3 12  6  1  8 10  5  9  7  1  6  2\n[51577]  2  1  4  7  4  7  4 12  6  6  4  9  2  4  8  7  4  8  3  6  2  8  9 11\n[51601]  2 10  9  2  8 12 11 10  1  3  7 12  1  6  6  3  5  5  5  7 12  8  5  7\n[51625] 12  7 12  6  8 10  4  2 10  1  4  4  9  7  7 10  1  7  3  6  5  2 11  7\n[51649] 12  6  2  7  6  5  3  8 12 12 10  9 12  5  9  8 12 10  8  7  4 11  3  5\n[51673]  9 10  4  8 11 11  3  7  1  5 10 10  3  9  6  4  6  4  7  9  9 10  9 12\n[51697] 10  1  4 12  5  6  1  3 11 10  9  5  9 12  1  6 10  7  9  4  7  3 12 12\n[51721]  4 11 12  3  9  8  1  9  5  1 10 12  8  8  8 10 12 12 10  2  4  1  4 10\n[51745]  8  6  3  3  9  6  3  3  3 11  3  3  3  2 10  3  8  2 11 12  8  8  8  9\n[51769]  1  1  9  6 10 12  4  5  2  4 10  7 10  7  7  7 10  4 12 12  4  1  7 12\n[51793]  6 11  6 11 11 12  3  9  4  9  1 11  3  5 11  1 11 11  1  9  6  8  3  5\n[51817] 12  6 10  5 11 11  8 10  9  6 11  5  3  3  2  7  9  4  5 10  4  2  7  9\n[51841] 10  3  1  5  5 10 11 12  5  6  7  1  8  7  8  3  5  7  9  6  1 11 12  7\n[51865]  2  9  7  9  5  4 12  4  3  7  7  1 11 12  9  4  3  8  6  8  4  5  2  1\n[51889]  2  8  7  9  4 10 11  7 12 12  6  5  1  5 11  2  3 10 10  2  4  8 11  6\n[51913]  8  1  2  9  4  2  1  5  8  7  8  5  1  2  7  2  3  1  4  8  3  1  8  3\n[51937]  5  2  8  5  6  6  7  2  5  1  1  7  6  6  2  5  6  4  5  6  6  7  2  4\n[51961]  5  2  3  7  1  8  4  7  1  3  1  8  8  5  3  6  7  8  7  3  4  8  6  7\n[51985]  3  5  4 10  2  6 12  8  7  9 12  4  5  9 10  8  3  6  1  5  1  5  9  9\n[52009] 12  5 12  7  9  2  8 12 12  1  1  9 10 12  7 10  4  8  5 10  2  6  9  8\n[52033]  1  1  9  9  8  2  4 10 11  9  3 12 10  4  3  1  8  7  1 11  6  4  7  1\n[52057]  9  9  3  9 10  3  6  5 10 10  9  1  5 10 11  9  6 11  4  9 12  4  5 11\n[52081]  8  6  8  9 11  9  6  7 10  5 10  8  8 12  8  5  3 11  8 10  9 11 12  9\n[52105] 10  3  9  7 12  3 10  7  2  6  6  6  7  7  4  1  6  2  6  1  6  5  2  5\n[52129]  6  5  5  5  1  5  6  3  5  6  8  8  6  8  4  3  3  1  6  1  9 10  9 10\n[52153] 12 11 12  9  9 12 11 10 12 10 10  5  8 10  2 10  6  1  3  7  8 10  6  8\n[52177]  3  8  8 11 12  6 10  6  2  8 12  7  5  1  7  9  1 11 11  1  4  5  6  6\n[52201]  3  5  4  5  3  2  6  2  2  7  4  5  7  2  8  4  7  2  2  1  2  8  7  1\n[52225]  4  6  5  8  5  9  4  9  6  2  1  1 11  4  4  2 10  5  1  5  1 10  4  5\n[52249]  4  2  5  8  9  3  3  7  6 11  6  8 11 10  4  4  5  9 11  9  3  2  4  9\n[52273]  6  9 12  4 10  7  5  8 10  7  5  6 10  1 10  9  3 11  9  5  9  4 12  5\n[52297] 10  7 10  6  4 12  3  1  1  4  3  1  8  1  9  9  1  2  7  7  4  2 10 10\n[52321]  9  9 12  4  5 12  4  3  9  7 10  1 10 11  5  9  9  7 12 10  8 11  7 10\n[52345]  8  5 10  7  8  5  6  1  4  4  8  8  6 12  8  6  9  5  9  7  2  7  1  5\n[52369]  1  9 10 11  5 12  4  6  9 10  4 12 11 10 11  2  3  9  7 11  8 11  1 10\n[52393]  8  8  8  9  5 12  6 10  2  1  5  3 11 11  9 10  3 10  9  9  1  4 10 10\n[52417]  8  6  2 11  5  2  3  2 12  7  1  1  8  4 12  1 12  4  1 12  6  9  6  4\n[52441]  2  8 10  4  3 12  5  1  8 11  8  3  6  1  7 12  7 10 10  7  9  7 11  8\n[52465] 12  9 12 11  8 10  3  5 10  1 10 12  6  2  8 12 10  2  4  9 10  7  4  6\n[52489]  7  4  8  5  1  5  5  9 12  1  8  7 10  8  7 10 12 10 11  4  3  8 12  4\n[52513]  6 12  1  4  6 11  4  6  4  5  5 11 10  9  6  6  3  5  8 10  2  1  5  8\n[52537]  3 10  9  9  5  3  7 11  9  7 11 10  9  7  4  7  9  4  9  9  9 10  2  3\n[52561]  7 10  2  4 11  9 12  2 12  9  7 11  7 10  2 10  5 11  8  3 12  9  7  8\n[52585] 10  9  8  6  5  7  2  9 12  8  8  4  1  3  3  4  1  9  4  8  9  8  9  5\n[52609]  7  7  3  7  3 12  3 12  4  8 12  7  6  3 10  1  8 12  3 10  5 10  2  5\n[52633] 12 12  9  8  9  8  1  7  3  2  3  4  4  4  6  6  1  5  6  8  6  2  1  1\n[52657]  5  1  3  8  5  4  3  5 11 12 10  7  3  4 12  4  6  3  2  7  5  6  2 10\n[52681]  5  6  8  6 10  9  3  7 11  9  9  1  2  2  7  5  6  9  7  5  3  1  8  6\n[52705]  9  9  2 12 11  8 12  1 12  7 11  7  6  3  7  5  8  6 10 11  9  4  5  8\n[52729]  9  9  6  3 10  9 10 11  5 12 10 12 11  9 11 12  5 10  7 11  3  5 12  9\n[52753]  1 12 11  8  7 10 11 12  2  6  6  1  7  5  6  4  8  2  2  8  4  1  5  9\n[52777]  1  5  7  7  1  4  5  3  2  7  1  8  3  6  2  2  7  1  3  1  5  8  6  1\n[52801]  1  4  1  2  3  5  3  1  8  3  3  1  6  7  5  6  4  3  5  1  4  3  6  8\n[52825]  3  9  4  1 11  2  8  4  3  2 11  4  3 10 12 12  7 10  2 10  8  6  1  6\n[52849]  6  2  9  3 12  8 11  1  9  6  9 12  5 10  2  6  8  9  4  9 10 10 10  8\n[52873]  5  3  5  9  7  9 11 11  3  3  1  3  2  2  1  2 12  2  9  1  3  5  8  6\n[52897]  9  1 10 11  9  8 11  4  7 11  8  6  9  1  1  8  9  7  3  9  5  3  5 11\n[52921]  1  3  7 11  1  7  9  2  4  3  7  4  1  6  6  7  3  8  5  4  5  9 11  9\n[52945] 11 10  3  1  3  2  3 12  5  5 10 12  1  4  6  5  8  5 12 12  1  4  7  2\n[52969]  1  7  2  3  5  7  8  8  1  6  3  7  6  1  7  4  6  1  8  8  7  7  4  1\n[52993]  9  2  9  9  1 11  6  4  1  4  4 12  4  1  2 11  9 10 12  2  6  5  5  2\n[53017]  9  3  3  7 10  1  2  8  6  1  1  9  6  7  4  6  2 12  9  3  9 11  3  1\n[53041]  3  9  9  9  6 11  5  9 10  6  3  4 10 11  6  9  6  4  9  9  7 11  9  9\n[53065]  7  9  7 10  9 11  1  4  9  6  6  8  3  3  3  5  1  8  6  6  7  6  2  8\n[53089]  7  7  5  2  3  6  7  4  2  4  7 10  5  3  1  8  2  5  2  5 12  3 11  3\n[53113]  7 12  3 12  7  5 10 12 10 11 12 11  9  3  6  8 12 11 11 11 10  8  5 10\n[53137]  7  8  8  6  1  6  3 11  6  8 11  1  8  3  6 10  9  5 12  1  1  4 10 10\n[53161]  3  8 12  2  9  8  5  9  3  3  2  4  9  1  2  6  4  6  1  8  3  1  5  8\n[53185]  8  3  5  3  5  4  3  2  3  3  2  8  2  4  4  8  1  4  5  5  7  8  1  5\n[53209]  1  6  9  8 11 10  4  9  4  5 10  7  5 10  5 10 11  5  5  1  9 12  9  6\n[53233] 12  3  7  6  1 10  1  7  6  9  8 11  6 12 11  1 10  8  1  3  9  1 11  6\n[53257] 12  2  5  7 11  5  1 12  1  5  2  6  5  2  7  5  5  8  1  3  1  8  3  6\n[53281]  8  8  7  4  4  2  5  2  7  5  3  7  2  7  8  8  3  3  5  4  1  2 10 12\n[53305]  3  2  9  3  7  6  2  6  6  9  3  7  1  1  5  9 12  1  8  2 10  3  8  4\n[53329]  6  1  1  7  6  5  4  7  2 11  8  9  6 10  6 10  1  4  6  3  5  1  6  5\n[53353]  5  4  6 10  6  3  6  6 11  4 12  4  6  9  5  1  6 12  6  6  5  4  1  5\n[53377]  7  2  8 12  7  5  9  2  8  3  9  9  7  5 10  4  7  3  6  9  5  8  6  8\n[53401]  5  9  6  6  5 12  4  9  3 10 10  6  2  4  7 12  9 11 11  2  8  5  3  6\n[53425]  8  2 12  5  2  5  6  5  1  5  4  7  5  5  2  6  8  9  8  3 12  6  6 12\n[53449]  5  5  3  2  6  5  6 10  1  7  4  3  8  3  7  4  8 12  3  5  9  5  1  6\n[53473]  9 12  1  9  6  3 12  9  8  7  1  5  6  7  4  6 10  1  1  8  4  9 11  4\n[53497]  5  9  2  2  3  8  3  1  5  2  5  7  9  9  1  3  2 10 12 11  5  1  3 11\n[53521]  9 11  4  7 10  9  1 11 11  6  8 11  4  5  3  4  6  9  7  4  9  5  3  2\n[53545]  7  4  1  8  4  6  8  9  2  1  1  5  1 11  6  7  1  5  7  1  9 12  8 12\n[53569]  7 12  5  2  9  5  9  5  1 10  5 11  2  6 11  4  3 10 12  3  6 10 11 12\n[53593]  7  5  8  6  3  1  3  7 10  3 12 12 10  2 12  9 10  9  9  7 12 10  2 10\n[53617]  5  8 11 11 10 12 10  8  8  3 11 10  9  9 10 10  9 11 11 11  9  2 12 10\n[53641] 10  6  1  4 12  4 12  1  9  2  6  4  7 11  4  5  4 12  2  5 11  2 11  1\n[53665]  2  4  2  3 12  1  4  7  2  1  8  8  8  2  5  3  5  7  6  2  8  1  6  4\n[53689]  3  2  8  9 12  2 12  3  8  2  9  6  2  3  4  6  8  6 11  9  1  9 12  2\n[53713]  2  4  4  7  6  2  3  8  8  4  8 10 11  2 12  7  8  7  6 10  9  8 11 10\n[53737] 11  6  2 12  9 10  8  4  1  5  2  6  1  7 10  4 10  3  1  1  4  9  4 11\n[53761]  9  1 12  1  1  3 11  1 10  4 12 10  4  6 12  1  7  5  5  4  9  2 10 11\n[53785]  3  6  7  2 12  4 11  4  8  6  9  9  4  5 12  2  9 10  8  5  1 11  6  1\n[53809]  1  3  8  7  1  1  1  8  7  1  4  5  3  6  7  8  5  3  6  6  7  5  8  7\n[53833]  6  2  4  2  1  2  7  4  1  7  1  7  7  1  4  6  3  8  8  5 11  4  4  8\n[53857]  6  6  2 12  5  1  4  4  1  5  7  7 11  3  3  8  8  5  5  9  7 12  9  7\n[53881] 10  8 10  3  6  3  3  5 11  7  8 10  4  8  8 11  6  4  5 11 10  2  8  4\n[53905]  6  1  1  3  2  2 10  3  4  4  7  1  5 12  4  7  7 10  7  5  1  5  9 10\n[53929]  1  9  6  3  8  6  5 11  4  7  4  9  9  7 12  2  7  3 12 10  7 11  2  3\n[53953] 11 12 11 10  6  3  5  6 10  1  4  4  8  3  9 12  9  8 12  1  9 12  7 12\n[53977] 12  6  4  5 10 10 10 10  3  9  8 12  5  9 11  9 11  5  6 11  4  3  8  5\n[54001]  8  5  8 11  5  3  8 12  1  3  2 10  7  9  3 10  9  7  7  9  1 12  8  3\n[54025]  9  7  6 12 10  7  1 11  7  3  9  8  7  8  4  2 10  9  9 10 10  1  5  6\n[54049]  7  2  1  9 11  3  4  1  7  1  1  1  5  5  6  6  9 11  8  7  3  6  6  7\n[54073]  2  7  1  7  4  6  2  4  2  1  7  5  1  8  4  2  7  4  2  7  3  6  5  5\n[54097]  6  3  2  3  5  1  7 11 10  3  8  1  3  4  9  3  2  4 10  4  8  5  2 12\n[54121] 11  3  2  5 12 12  6 12  4 10  7  1  1  8  4  1 12 12 12 12 12 12  9  1\n[54145]  4  8  9  9  9  9  2  7  3 11  2  5  7  2  1  2  4  3 10  9  7  2  4 12\n[54169]  8 12  3 10  7  2  6  9  9  9  5  9 11  8  8  2  8  1  7  7  6  4  8 11\n[54193] 12  2 12  7  2  6  4  9  7 12  5  6 10  1 10 10 10  8  7  3  8  4  7  1\n[54217]  3  1 10 11  7  7  2 10  7  8  9  3 11  6  8 11 12  3  4  8  6  2  8 12\n[54241]  4 11  3  2  9  3 10  8  8 12  9  7  7 12  8  7 10  6  9 12  9 12 11  3\n[54265] 10  1 12  5  1 10 11  3  6 11  2 10  4 11 12  3  9 10 12  1  1  8  9  5\n[54289]  9 10 11 10  2  7  4  4  2  3  1  8  8  2  2  1  1  5  8  3  7  2  1  8\n[54313]  8  2  3  3  6  6  1  7  1  2  8 12 11 11 11  2 12 12  2 10  9  8  5 11\n[54337]  9  6 11  5 10 12 10  9  7  4 12  3  3 12  5 11  4  5  3  7  7  4  3 11\n[54361]  1  5 10 11  6  3  9 10 11  8 12  4 10  4 12  3  3 11 10  7 11  5  4 10\n[54385]  7  1  7  8  3 12  1  1  6  8  8 10  4 10  7  1 12  1  2  1 11 12  2  8\n[54409] 10  9  9 11  9 11  7  5  4  4  6  9  7  1  6  3  6  8 12 11  7  1  6 11\n[54433]  1  3  3  6  8  5 12  9  8  5  8  4 11  4  3  5  5  9  8  2  9  8  6  7\n[54457] 12  5  1  4 11  7  6  1  9  5  9  3  1 12 10  5  1  3  9  9  6  5 10  6\n[54481]  9  8  5  3  6  9  7  3  3  2 11  5  7  4  8  8 10  4  8  1  8  1  2  6\n[54505]  1  3  6  3  7  5  8  8 11  9  2  3  4  9  7  4 11  8 10 11 11  8  7 11\n[54529] 12  9  9  9  9 10  3 10 12 10 10  9  9  9  6 12  9 11 12 12 12 12  8 11\n[54553]  1 11  9 10 11 11 10  4  7 10  3  4  1  3  1  5  1 11  4  4  5  8  1  7\n[54577]  2 12  7 10  5  6  8  8 12 12  9  4 10 12  8  9 10  4  3 11  2  9  9  6\n[54601]  2 12  6  5  4  8  3  3  8  9  1  2  7  1  6  6  2 10  9  7  5  4 12  5\n[54625]  6  5  4  2  5 12  1 11  4  9  1 11 11  5  8 12  9  8 12 10  2  5  3  3\n[54649]  5  4  4  5 12  9  4  3  8 12 12 12  3  9 10  2 11  1 10  1  8 11  4 10\n[54673] 10  2  9  7 10 10 11 11  5  4  8 11  9  5  9 10 11  4  2  3  9  3  5  2\n[54697] 10  9 10  3  4  3 11  6  9  6  5 12  8  9  2  7  9  2  5  5 10  1  6  3\n[54721]  5 11  2 10  7  3  7 10 11  3  6  6  2  1  6 10  5  1  3  5  7  4  7  7\n[54745]  9  9 12  9  8  3  5  7  5  7  1  2  2  6  4  8  4  2  6  7  4  6  4  7\n[54769]  5  5  6  1  6  8  1  2  4  8  3  5  5  3 12  5  4 10 10 12  6  1  4  9\n[54793] 10  1  4  1  9  3  8  7  5 12 10 12 11  7 11  6 11 12  9  3  7  1  3  4\n[54817] 11  6  5  9  1  5 10  2  5  7 10  8 12  5  1  4  8  7  7  9  1  3 10 11\n[54841]  6 11 11  2 12 11 11 10  7 11 10 10 12  9  7 10  8  5 10  5  6  7 11  9\n[54865] 11  4  2  7  9  3 11  4  2  3  9  3  2  3  2  1 12  6  6  3  3  9  9  6\n[54889]  1  2 12  3  3  9  2  9  3  9  3  2 12  4 12  8 10  6  5  4 12 11  8  3\n[54913]  1  5 12  5  1  7  2  3 10  6  5 10  4  6 11  4  1  9  1  2  9  4  8  1\n[54937] 10  9 10  8  8  5  1  9 11  4  4 10 10  6  5  9  9  4  5  6 10  4 11 10\n[54961]  9  9  7  9  6 11 11  6 11  8  8  6  3  8  3 10  1 10  8  9 10  5  5  2\n[54985] 12  9  7  3  8 10  3  4  2 10  1  7  3  7  3  8  2  2  1  4  9  7  1 11\n[55009] 10  7  3  6  4  7  7  4  4 11  3  1  2  3  4  2  4  3  2  9  7 11  2  5\n[55033] 10  9 12  5  9  9  8  6  8 12 10  7  7  7  6  2 12  8  8  2  3  4  7  2\n[55057]  6  5  2  3  2  1  2  1  5  5  4  6  3  3  4  4  8  5  6  6  6  5  4  8\n[55081]  9  3  7  1  2  5  3  3  7  5  2  5 11  7  7  2  1  7 11  2 11 11  7 10\n[55105]  3 11  8 12  6 12  2  9  6 10  9  4  6 10  6 10  2  8  4  5 12 10  8  1\n[55129] 12  3  7 10  9  2 11  3  5  2  7  4  3  3  2 10  7  4  4 12  2  6  7 10\n[55153]  1 11  8 12  5  9  1 11 10  6  5  3  6 12 12 11  9 10 10  8 11 10  9 10\n[55177] 10  9 12 12 12 10 10 10  7 11  8  5  5  3  2  8  6  2  1  4  5  5  2  8\n[55201]  8  7  1  2  1  3 11  3  6  2  6  2  7  8  5  2 12 10  3  4 10  3 12  5\n[55225]  7  4 12 11  9  5  6  3 10  1  1  3  1  1 12  8  2  9  6 10  9 11 10  6\n[55249]  4  3  6 11 11 12 12  3  4  5  1  3  1  2  3  3  8  4  9  7  9  8 10  3\n[55273]  1  3  7  7  6  6  7  3  3  6  8  2  7  1  4 12 12  6  5 12  4 10 11 10\n[55297]  4  7  8  7  6  6 12  6  1  5  9  4  5  2 12  7  3  9  9 10  8  8  5 10\n[55321]  3  9 10  3  3  5  3  4  4  6  8  5  1 12  4  4 11  2  3  7 12  1  7  9\n[55345]  7  1  8  6 10  6  7  7 11  1 10  1  1  7  6  8  6 12  8  7 11  2  2  9\n[55369]  7  9  9  5 10 11  5  5  4  4  8  4  5  8  1  7  4  9  5  3  8  1 12  4\n[55393]  8  2  8  4 11  7  7 12  9  9  5  9 12  9  5  5  5 12 12  4  5  6  3  4\n[55417]  6 10 11 11  3 10 10 10  9  8  3 12  7  7 11  7  6 10  5  2 10  7 10  9\n[55441]  4  6 12  7  4  6  9 12  5  8  6 11  8  2  4  5  6 10  6  9  3  7  7  9\n[55465]  8  3  9  2 11 11  2  1  8  9  7  4 10 12  7 10 10 10  4 12 12 11 12 10\n[55489]  3 12 11  9 12  9  5 11  4  8  9 11  2 10 12  9  9  4 11 11 12  7  7  4\n[55513]  8 10 12 10  9 10 11  6  4  8  5 11  8  8  6  5  1  5  4  7 11  3 10 12\n[55537]  9  1  8  9  1 10  1 10  4  1 12 12 12 10  8  9 12  3  3  8 10  4  6  5\n[55561]  6  2  7  9  2  9  7  9 12 11  5  6 11 10  4  4  8 12  4 12  3  7  9  3\n[55585]  4  6 10 11 10  9  8 11  2  4  5  1  1  5  3 11  3  7 11  9 12 12  3 12\n[55609] 11 11 12  7  8  2  7  3  5  7 11  4  8  2 11  4  3  8  9  5 10  7  7  5\n[55633]  4  6  6  3 12  6  1  7 12  3  1  6  2  5  2 12  6  2 12  4  4 12 12  2\n[55657]  3 11  2  1  7 12  1  8 12  5  8  3  7  9  6  1  7  1  1  3  5  4  4 11\n[55681]  7 12  1  4  6  2  9  3  8 11  8 10  9  2  6 11  1 10  9  2  1  5 10  9\n[55705]  4  2 10  5  5  1  9  9  4  1  7  7 11  2  2  9 12  8 11  4  3  2 11  1\n[55729]  1  8 11  9  3 11  8 12  2  2 11  1  6  9 10  9 12 12 10  9 10  3  8  9\n[55753]  5  9 10  4  7 10  4 12 10 12  7 11  1  6  1  6  8  3  8  2  9  2  9  5\n[55777]  3  9  6  4  9 12  2  4  5  2  2  4  7  8  1  3  6  8  7  6  6  7  2  4\n[55801]  6  8  6  5  1  3  3  7  4  1  4  2  3  3  7  9  6  9  3  7  5  7  6  9\n[55825]  6  3  1  6  9  7  5  6  3 10  1  7 12  9  2  8  8  1 11  4 12  4 12 11\n[55849]  9 10  8  9  4  4 10  7  8  9  9  7  2  8  7  8  3  3 12  3  9  6 10  6\n[55873]  7  2  9  3 12  6  8 10  1  1  5  5 10  7  6  4  5  9  9  5  1  7 12  8\n[55897] 12 10  9 12  4 10  6  4  1  6  2  1  1  9 10  8  3  1  1  2  8  1  6 11\n[55921] 11  4  1  7  2 10  2  1  4 10  4  6 12 11 10  4 10 11  4  1  6  8 11  3\n[55945]  2 12  6  6  4 10  3 10  6 11  4  7  5  5 10  7 11  2  2  8 11  1  2  2\n[55969] 11  8  6 12  3  4 11  7  2  3  2  4  7  5 11  2  4  6  4 12  3  5  3  4\n[55993] 12  3 11 12  1  4 10 12 12  7  3  5 11  8  6  6  7  2  7  4  3 12  6 11\n[56017]  7  5  6  9  3  2  5  1  2  8  5  4  4  4  2  1  5  1  7  3  1  5  3  4\n[56041]  6  7  7  6  8  5  1  2  6  3  3  7  3  2  8  2 11  9  6 12 12  1  6  7\n[56065]  2  8  2  5  9 11 11  4 11  5  1 10 11  1  2  8  6  5  3  2  7  1  4  4\n[56089]  1  3  4  8  6  5  1  3  1  2  4  7  6  5  8  5  6  3  1  4  4  6  8 10\n[56113] 11  9 11  6  1  8  4 12  2  2  2  6  1  6  2  6  7 10  6  3  9  5 10  1\n[56137] 12 12 12 12 11  2 11 11 11 11 12  2 10 11 10 12  7  9  9  9 10  9 11 11\n[56161] 12 12 12 11 12 10 11 12 12  9 11 11  2  1  3  5  8  6  8  1  6  4  4 12\n[56185]  9  4 11  2 10 10  6  8 12  4  9  1  1  4  7  4 12  7  5  9  5  6  1  2\n[56209]  9 10  2  3  1  6 10  7  7  1  7  4 10  3 10  2  5 11  3  8 11  3 12  7\n[56233]  5 11  1  3  9 12  9 11  2 12  2 12 11  9  6  8  9  9  9  8  4  6 10  3\n[56257]  6  7  7  6  4  8 10  2  2  9 11 11  6  8  7  3  6  8 12  6  1  2  8 12\n[56281]  2 10 11  3 10  6 11  8 10  7 11  1  1  9  5  6 11  7  3  6 11  7  6  2\n[56305]  4  8 10  1  3  1  1  7  9 12 11 12  5 11 12  7  3  6  8  5  4  3 11  5\n[56329]  6  8  6 12 10  8  1 11  5  2  6  7 12  3 11  1 10  1 10  9  5  2  3  3\n[56353]  7  7  3 10  7 11  1 11  4  3  2  3  4  7  7  9  4  8  2  6  1  8 12  8\n[56377] 10 10  1 10  4  4 11  7 12  9 12  5  8  8 10 11  5  1  6 12  4  7  8  1\n[56401]  5 11  6  8  8 12  9 11 10  8 10  9  9  4 10  5  8  9 10 10  5  7 12  6\n[56425]  9  9 11  1  4  2  5  9  2  8 10  5 12  7  8  1  3  7 10 12  9  2  3 10\n[56449] 10  5 12  8 11  1 11  8  6 11  2  7  3  1  6 12  1  8  3 12  9  6 12  4\n[56473]  9  6 10  2 11  5  2 12  5  7 10 10  8 11  9 11  6  7  5  3  6  5  3 11\n[56497] 12  5  5  9 10  1  2  6  3  1  3  4  4  3  3  1  7  3 10  3 12  6  4  7\n[56521] 12  9  1  2 12  8 11  9  2  9  3 12  3 10  5  6  4  6  4  4  7  3  5  4\n[56545] 12 12  5 10  7  2  3  1  9 11  5  9 10  8 12  1  2  5 10  4  1  6 11  4\n[56569] 11  7 12 12  3  4  1  8  8 11  8 10  1 10 10  9 12  1 10 12 12 11  9 10\n[56593] 10 11 10  7  7  6 12  1  5  8  4  6  3  5 11 10  8  8 10  2  7 11 10 11\n[56617]  4 12  2  2  5 11  1 10  8  8 12  4  5  4  6  7  9 10  1  3  7  6  7  8\n[56641]  9 12  4  1 11  7  1  1 10  1  9  7 11  7  9  4  7  5 12  1  9  7  3  2\n[56665]  1 12  2  5  7 11  8  3  1  6  3  2  2 11  6  4  2  5  9  7  5  9  6  9\n[56689]  3 12  9  6  6  2  9  3  8  1 12  2  8 12  9  2  8 12  2  6  5  1  8  6\n[56713] 11  2 11  2  9  4  5  1  6  8 10  3  2 11  4  5  3 11 11 12  2  6  9 12\n[56737]  2  5  6  7  1 11  5  8  3 10 10  2  2  7  8  5  5  2  9  4 12  8  4  5\n[56761] 11 12 12 10 10  1 10  4 12  6  4  6  6  8 11  9  9  9 11  9 12  3  3  3\n[56785] 12  4 12 11  5  5  9  3  7  1  5  4  4 12 12  3 11  3  4  2  5  9  8  9\n[56809] 10 12  5 10 12 10 12  2 10  2  8  3  6  2  9  3  7 10  9 10  2  4  1  3\n[56833] 11  7 11  9  6  2  1  5  2  1  9 10 12  9  8 11 11  5  6  4  7 11 10  6\n[56857]  6 11  7 12  2 10 12 12  9 10 11  8  4 11  4 10  7 12 11  1 12  9  3  7\n[56881]  2  7  5  1 11 12  6 11 12 11  5  4  4  1  8 11  5  9  2  9  2  2 10  4\n[56905]  6  7 10  2  1  4  4  8  5  3  9  6 10  3  9 10  9  3  7  5 12  9  4  4\n[56929]  7  7  4  5  8  2  4  8  4  4  4 12  1 10  2  6  8  7  7 10  1  9  1  6\n[56953] 12  1  8  6  3  2  3  4 12  1  7 12  8  8  1 10  7  5  7  6  5 11  7  2\n[56977] 11 10  2  3  9  5  9 12  6  7  5 11  7  7  9  4 12  3  3  9  7  5  6 10\n[57001] 10 11 11  7  5  1  6  3  2  9  3  5 12  6  2  5 12  3  4  1  2  7  6  2\n[57025]  4  9  9  1  4 11 12  4 10 11  7 10  3 10  9 11  8 10  5  5  7  3  8  6\n[57049]  5  7  4 10 11 10 10  7  3  1  5 11  6  4 10  9 12 10  3  2  5  7  5  3\n[57073]  8  1  2 12  7  5  5  3  2  7  8  3 11 12  2  5  8  9  9  1  4  9  7  4\n[57097]  5  2  9  6  2  8  1  9  6  4  6  9  9  3 12  7 10  3 10  7  2  2  1  5\n[57121]  2  5 12  6  7  2  2  7  5  1  2  8  3  6  1  3  3  5  1  3  3  9  7  1\n[57145]  4  2  1  9  5  7  3 12  9 11  3  5  9 10 12 10  9  9  6  8  8  7  3  6\n[57169] 10  8 11  4  6  4  6  8  8 10  8  9  3  5 11  1  1 10  4  2  9 10 12  6\n[57193]  2  8 10  5  5  7 10  3  4  7 12  4  4  5  6 10  9  8 12 10  3  2 10 11\n[57217]  3 10  9  7  9  8  5  5  3 11  8  3 12  2  7 11 12  5  9  3 11 10  5 12\n[57241]  6 12  5 12  1 12  1  5  6  7  9 10  7  7  2  8 12  6  3 11 10  3  4  3\n[57265]  4 11  2  1  2  7  7 11  8  5  4  4 10  5  3  1  9 10  5 11  3  6  2  3\n[57289]  4 10  4  5  9  1  6  8 10  7 10 11 11  2  3  7 12 10  3  6  8  5  7 11\n[57313]  9  6  3  7  9 12  2  3 10  7  9  5  2  4  8  5  1  8  8 12  5 10  1  2\n[57337]  9  5 10  3  6  7  6  7  6 12  1  9 10  3  4  1  1  7 11 11  1  6  2  7\n[57361]  2  2  4  7  4  3  1  6  1  3  5  7  3  3  1  8  7  5  4  6  5  2  2  7\n[57385]  2  7  2  2  4  5  4  8 10 11  7  6  6  4  2  6 11  6 10 10 11  1  9  6\n[57409]  3  2  3  1  7  1  7  1  9  3  4  6 10 10  8  7  8  6  2  3  4  3  7  4\n[57433]  1  3  6  4  7  5  8  2  3  3  5  1  2  4  7  4  5  4  5  5  8  3  7  7\n[57457]  1  4 11  7  4 10  3 11  7 11  3  3 11  8  5  2  9 10  1  8 11  5  3  1\n[57481] 10  7  4  5  4  1  8 10  8  3  6  8  2  7  4  7  6  6 10 11 10  4  6 11\n[57505]  8  1  1  8  5 11 10  3  9  1  7  5  3  2 11 10 12  8 11 12  5  3  8  9\n[57529]  7  8  5 12  3  5  7  8  1  6  3  6  7  8  9  1 12  4 10  1  7  4  7  2\n[57553] 10  6  1  2  3  5  4  5  8  7  3  8  8  7  7  4  7  3  3  4  4  1  2  3\n[57577]  2  3  5  4  1  6  4  8  4  3  3  2  4  4  3  5  4  6  8  2  1  5  3  9\n[57601]  4  2  2  2  5  7  2  1  4  1  7  3  6  2  4  7  8  6  8  2 12  8  7 10\n[57625]  9 10 10 10  5  2  5  6 10  7  2  6 10  5  7 12  7 12  3  3  9  7 12  9\n[57649] 12  3  6  1  7  7  1  2  5  6  9  1  4  2  6 12  2 10  4  5  4  2 12 12\n[57673] 11  4  9  7  3  8  5  4  9 12  1  8 12 10  9  6  2  3  6  7  8  3  1  9\n[57697]  4  2  9 11  5  5  6  6 10 12 10  2  4  5 11  8 10  5  5  7  5  6  2  1\n[57721] 11  3  5  3  1  5 11 10  7 10  5  5  1 12  1 11  1  5  9 12 10  1 11  3\n[57745]  4  3  6  2  9  7  3  3 10  4 12 10  7  6  1  4  8  9  1  7  5  4  8  8\n[57769]  1  9  5  1  3  3 10  1 10  2  4  5  4  2  5  8  9  8 12  9  9  1  3  8\n[57793]  4  4  6 10 11  3  7  1 10  9  8 10  7  3  9  3  9  6  5  8 10 12  6 12\n[57817]  6  9  4  5  4  9  3  3 11 12  5 10 11 11 10 12  3  9  3  6  9 10  9 11\n[57841]  9 10 11  4  2 11 10  7 11  7  9  4  2  4 11  9 11 12  2  2  6  2  2  7\n[57865]  1  9  7  3  3 10  6  7  4  4  3  6 11 11  1 12  4  2  3  4  8  5  1 10\n[57889]  8 10  9  9 11  8  7  3  9  9  3  1  3  6  4  8  7  6  9  3  3  7  6  7\n[57913] 10 10  4  9  4  9 11  5  9  3  7  2  8  4  5  3  6  8  5  1 11 11  9  3\n[57937]  9 10  1 12  9  6  6 10  9 12  6 11 12  8  4 10  8 11 11 11  7  4 12  6\n[57961] 12 10  7  5  4  3  1 11  3  1  2 11  1  1  8 10  5  9  5  1 12 10  3 10\n[57985]  2  3  1  2 12  5 12  9  2  9  3 11 12  4  1  5 11  5 12  4  7 11  3 12\n[58009]  9 12  1  8  4  9  7  3  9  5  1  7  6 12  9  2 10  9 11  2  9  2  3 11\n[58033]  2  2  8  9  6 12  8 12 12  6  8  4  1 11  7  2 11  5  2  7  3  3  4  8\n[58057]  3  5  1 10  3 10 11  8 10  1  7  9 11  8  6  7  5  4 10  5  6  6 10  9\n[58081]  2 10 12  9  2 11  1  6  3  5  7  3 12  8  3  3 10  4 11  1  6  6  9  2\n[58105]  6  1  4 10 11  6 12 10  3  1  3  6 11  2  9 11  9  8 12  8 11 10 11  9\n[58129]  2  5  3  4  7  9  8 11  1  4 12  5  5  2  1  3  7  3  3  7  4  7  3  2\n[58153]  5  8  6  8  4  7  6  4  4  4  9  5  3  9 12 10 11  6  9  7  1  6  1  7\n[58177]  3  7  4  8 12 10 11  4  1  9  6  4 12  9  4 12  9  9  1  4  3  3  7  9\n[58201]  1  7  5  6  7  5  4  8  3 11 10  5  9  8  9  5 10 12  9  8 11 10 11  1\n[58225]  8  9  5  7  5  7  6  1 10  5  4  7  3  4  1  1  9 10  6  5  3  8  2  2\n[58249] 11 11  4  9  1  9 10  8  1  1  3  9  5  5  4  7  7  6  7  9  3  2  2  2\n[58273]  9  8  2  8  5  7 10 11  3 12  4  4  9  4  4  9  7  7  5  3  6 10  6 11\n[58297]  6 11  5  7  5  8 12  6 10 11  9  8  1  1  7  4  3  7  5  1  9  2 10  3\n[58321]  4  4  6  9  3  9  3  4  4  9  1  5 11  3  1  9  1  7  5 12  3 10  2  4\n[58345] 10  3 10  7  3  1  1 11 12  5 11  1 12  4 11  9  1  1  1  2  1  4  5 12\n[58369]  8  7 11  9  3 10 10  1  4 11  3  2  9  1 12  3  6  5  5  9  7 11  5  5\n[58393] 12  2  5 11 12 11 10  6  7 10  9 10 12 12  9 12 11  8 12  9 10  8 12  8\n[58417]  2  9 12  9 12  7 10 10 12  8 11 10  1  4 12  1  9 12 11 11 11  5  8  4\n[58441]  5  2  9  5  6  8  7 11  3  4  9  9  9 12  1  3  9 11 10  3 11  6  4  3\n[58465]  7  4  4  9  1  4  1  5  7 11  1 12  5 12  1  3  3  1  2  8  2 12  9  9\n[58489]  2  7 11  9  7  6  9  7  9  4  9 12  7 11 12 11  7  4 10 11  7  6  1  5\n[58513] 12  3 10 12  1  8  1  6  3  3 12 11 10 11  4 11 12  8  4 11  6 11 10  7\n[58537]  2  5  9 11 12  7  1 11  5  8  6  7 11  1  3  7  4  1  5  1 12  3  5 10\n[58561]  6  3  8 11  4  1  8 11  3  1 12  8  2  1  4  8  7  9  9  7  5 11 11  7\n[58585]  4 12  1 10 11 12 12 10  1 12  4  1  4 10  2 10  1  4  1  2  8 12 10  4\n[58609] 11  4 10 12  3 12  9  9  6  4 11  9  9  9  3 12  6  1  7  1 11 11  5  2\n[58633]  7 12 10  7 11 10 10 11 11 10 12 10  4  8  6  7  1  6 10  7  8  7 11 12\n[58657] 10  5  1  7  4  8  7  6 12  7  2  2  4  6  2  8  7  6  2 12 10  9 11 10\n[58681]  9 10 10  5  8  9 10 12  2  5  8 11  8  7  6  5  3  4 11 12 11  7  4  3\n[58705] 11  6 11 10  6  3 12 11 12  5  8 10  7  1  3  5  1  7  9  5  9  9  1  5\n[58729]  9  2  1  9 12 11 10 10 11  2  1  1 11  2  6 10 11  9  3  2  2 12  4  4\n[58753] 10  8  1  1 10  9  8  3 10  7  4  3  5 10  3 11  3  7 12  7  7  2  9  2\n[58777]  7  8  7  2 10  2  9  4  2 10  4 12 10  5  9  1  2 10  6 11  2  5 11  4\n[58801]  8  1  6  4  4  2  4  4  2 10 10 12  8  1  4  2 10  3  5 10  6  1  9  4\n[58825]  4  9  8  9  9  8 12  1  5 11  3 11  1  2 12 10 12 10  6  6  4  4  1 12\n[58849] 10 11  7 11  8  9 10 11  5  7  4 12  8  3  9  2  1  8 11  8  6  7 10  2\n[58873]  7  2  7  4  8  6  1 12  6  4  1  7  8 10 12  4  7 10  3  3 10  7  6  8\n[58897] 11  7  3  4  5  1  9  7  4 10  1 12 11  4 12  2  6  6  5 12  9  7 12  3\n[58921]  2  1  6 12  5  9 11  9  8  9  7  1  7 12 10 12  3  8 12  9  7  9  3  2\n[58945]  8  1 10  8  4  2  9  2  6  5  6  9  5  7  3  3  2  8  2 10 11  3  7 11\n[58969] 10 10  3  4  9  9  3  8  8  2  2  8 12  8  6  1  5 11  1 11 12  7  1 11\n[58993]  5  6  4  7  1  8  4  5  1 10 10  1  8 11 12  2  7  4  8  1  7  6  1  2\n[59017]  9  1 12 12  1  6  6  4  7  3  8  8 12  4  3  1 12  1 10  2  3 12  6  2\n[59041]  3 10  8  3  3  4  7  1  6  5  9  9 12  5 10 10  2 10 10  1  8  4  2  4\n[59065]  9  2  7  7 12 10  5 12  1 12 12 12 12  1  1  6  5  7  7  6  8  8 11 12\n[59089]  7 12  8  1  7  4  4 10 10  9  4  1  7  4  8  1  8 11  7  7  3  4  9  3\n[59113]  4  9  1  4 11 11  9 11 11  6  3  7  3  9  4 11  6  7  9  1  8 10  8  5\n[59137]  2  5 12  2 10  2 11  6  6  2  2  1  2  3 10  1  5  5  5  4 10  9  8  5\n[59161]  9  8  6  6  5 10  7  4 10  4  9  6  5  1 11  7  2 11  2  1  1  5  1  6\n[59185]  2 12  7  5  8  3  5  6  6  2  8  8  3 10  9  7 11 10  5  2 10  5  6 10\n[59209]  5  9  6  4  8  1  4 12  6 11 11  9  1 12  3 10  8  1  4 11  8 10 11 10\n[59233]  9 10  7  4  6  2  6 11  5  7  9  8 10  1  4 11  7  6  5  8  8  9 12  8\n[59257]  7  5  2 10  7  3  8  9  6  7 10 11  4  4  8  1  4  1  1  5  9  9  8 10\n[59281]  5 11  4 12 11  5  1  1  7  8  4  7 10  7  6  7  1  7  3  1  6  9 10  8\n[59305] 10  8  5  3  9  8 11 11  6  3 10  8  4  3 11  4  6  6  3  5  2 12 12  9\n[59329]  8 11 10  7  3  8  7  2  6 11  9  5  3 10  5  8  1  5  4 10  9  6  3 11\n[59353]  8  8 10  3  7 12  1  7  2  1  4 10  1  5 12  4  3  9  8  4  2 11  4  4\n[59377]  2  3  4  4 11  2  3  5  1  3  9 10  8  5  8  5  2 10  2 10  4 11  1  3\n[59401]  1  3  1  9 10  7 10  8  2  7  2  4  2  5 11  8 10  8  6 12 12  7  5 12\n[59425]  5  4  3  4  4  6  3  5  7  5  5  4 12  6  9  8  4  4  4  5  5  2  4 12\n[59449]  9  1  9  4  3  4 12 11  4  1 12  7  4  1  1  3  4 11  3  5  2  4  2  2\n[59473] 10  2  9  6  3  5  7  4 11 11  5  5 11  3  1 10 10  3  6  8 10 12  7  5\n[59497]  3  3 12  5  5 11  2  2  7  9  6  6  9  8  2  6  7  4  5  3  1  5 12 10\n[59521]  6 12  2  5  5  7  4  6 10  7 11  2  7 10  1  7  3  3  1  5  7  4 12 10\n[59545]  1 10  2  4  2  5  1  6  5  3 11  8  5  2 12  4  9  8  7  5  6  5  2  7\n[59569]  1  9  8  5  9  2  8  9  7  2  3 10  6  5  4 10  9  9 11  4  7 11  5 10\n[59593]  2  9  6  4  6 10 11  5  4  4  3  2  5 11  8  1  4  2  3  8 12  7 10  4\n[59617]  3 10  9 10  2  1  7  7  5 12  8  2  2 11  7  9  8  8 11  9  2  8  6  6\n[59641]  8  6  3  8  9  8  2 10  9  3  4 10  5  1  5 10 12  4  1  2 12  8  6  5\n[59665]  4  3  7  9  5  5 11  7  8  2  2  9  4  5 10  4  6  5  7  4  1  1 10  3\n[59689] 12  9  6  3 12  4  3 11  7 12  3  6 11  2  5  6 12 11  3  5  9  5  7  4\n[59713]  5  4  2  1  4 11 10  5  2  1  8  1  9  4  4 11  5  3  4  5  5  7  2  8\n[59737]  5  4 10  8  7  3 10  5  6  7  7  3  4  4  3 10  8  9 11 10  7  6  5  9\n[59761]  8  8  6  3 10  4 12  3  7  7 11  3  2 12  2  2  1  8  8  6  7  3  6  3\n[59785]  3  6  2 12  5  5  2  7  2 11 12 10  6  5  3  7  7 10  8 10  1  1  2  8\n[59809] 10  5  8 12  9  2  9  1  7  8  5 11  4  2  8  1  6 12  2  2  9 12 11  5\n[59833]  9  7  1 10  8  3  4  9  6 11 10  3  1  4  5  6 10 11  7  1  9  4 10  1\n[59857]  2  2  4  3  5 10 11  9  7  3 10  3  9  3  4 12  2  5 12  3  1  8  6  3\n[59881]  9  1  9 12  2  2  2  6  3  6  7  4  8  5 10  2 11 11 12 12  4  1  4  1\n[59905]  6  7  2 12  7  2 12 11  1  2 12 10 11 12  3 11  2  2 11  1  3 11 10  8\n[59929]  4  7 12  9  8  7  7  3  6  5 12  1  8  4  6  4  5  2 10 11  3  1  3 10\n[59953]  6  9  5  2  4 11 12  3 12  8  5  6 11  9  2  6 12  3  8  5  5  9  5  2\n[59977]  6  8  2  6 12 10 11 10  3  5  5  3  6 10  1  2  9  6  5  4  4  7  5  1\n[60001]  6 10  7  3 10  5  9 11  6  3 10  9  9  3  8  3  2  3  7 12  6 12 11  3\n[60025]  3  4  7 10  1  5  3  6  9 11  3  2  4  8 10 10  7  2  4  6  1  5  7  6\n[60049] 10  1 11  9  4  3  5  2  3  5 12 11  4 10  1  3  5 10  4  7 10 12 10  8\n[60073] 11  2  3  5  5  1 11  3  2 10  1 11  6  8  6 11  2 12  1  3  6 11  6  1\n[60097]  7 11 12  7  3  9  7  7  5  3  7 10  9  5  7  8  9 11  1  1 11 12  2  9\n[60121]  9 11  5 12  2  8 12  9  2  4  2 11  7 12  5  5  2  6  6  9  4 12  4  4\n[60145]  8 11  8  7 12  9  4 10  2 11  5  7 10 10 12  8 12  5  4  9  6 11  1  7\n[60169]  3  1 11  3  1  3  2 12  7  2  9 11  1  7  6  4  2  7  5  4  1  7  1  1\n[60193]  6  4  1  5  9  8  5  5  8  2 11  4  9  3  7  3  3  5  6  8  7  2 10  3\n[60217] 10 12  9 11  1  1 10 12 11  1  4  5  4  1  1 11  4  8  6  5  8  8  2 10\n[60241]  6 11  1  1  8  5  3  7 12  9  4  7  3  7  6  2  1 10 10  9  9 12  3  7\n[60265]  2 11  3  9  6  1  1  7 11  2  9 11  8 10  9  5  6  6  9  5  4  7  1  5\n[60289]  2  5  1  1  6 10  2  7  1  3  6  5  9  2 11  9  3  9  6 11  9 12  1 12\n[60313]  5  3  6  5 10  9 12  8  6  8  6  8  8  3 10 10 12  4  6  3  4 12  8  6\n[60337] 11  9  2 10  4 12  2  2  9  3 12 11  4  3  5  9  4  3  8  1  5  9  6 11\n[60361]  3  5  9 11 10  2 10  3  3 11  6  3  3 10  4  4 10  1  6 12  7  5  2  6\n[60385]  6  6  5  7  2  1 11  5  5  1  4  4 11  5  1  7  3  4 12 11  3 10  4  9\n[60409]  3  4  9  8 11  6  8  4  5  4  6  1  4  5  1  3  4 12 10  9 12  9  5  2\n[60433] 11 11  4  6 12 11  8 11 11 10  7  1  5  3  1 10  2  1  2  7  8  3  6 10\n[60457]  5  9 10  8  8  6  1  3  2 11  7  4 12 11  6  1  7 11  5  9  7  6  1  3\n[60481] 10  7  2  1  9  5  2  5  8 11  5  2 12 10  8 12  4  9  6  4 10  5  5 12\n[60505]  6  5  8  8  1  6 12 12  2  3  7  6  7  9 11  1 10  5  6  4  6  2 10  4\n[60529]  2 12 11  1 10 11  7 12 12  7  4  9 12 12  1  6  1  8  2  5  9  2 11  2\n[60553]  9  7  9  2  7  5 11  7 12  8 11  8  2 12  6 10  2  8  3  9  1  4  6 11\n[60577] 12  8 11  6  1  1  9  6  4  6  5  1  8  5  8 11 11  7 10  7  8 11  8  3\n[60601]  2  6 11  6 12  6 12  2 10  3  5  6  3  7  6 10  6  4  6  7 12  8  6  8\n[60625]  6 11 10  3 10  8 12  7 12  3  3 12  4  3  1  9  4 10 11  4  5  5 11  6\n[60649]  3  5 10  1  1  3 12  1 12  6  4 11  4  5  3 11  1  5  7  7  3  4  9 10\n[60673] 11 11 11  8  5  4  3  5 12  8  6  3  8  8  5 12  8  9  4  3  7  7  7  7\n[60697]  1  3  5  2  6  3  7  3 11  2  9  3  8  9  6  2  9 12  5  1  6  9  2 10\n[60721] 11  1  8  8  2  6  2  7  7 12  1  6  4  5 10  7  8  3  1  5  2  2  1  8\n[60745]  2  4  5  1  9  9  6  5  9 12  8  1 11  9  4  3  2  4  8  3  2 11  2  4\n[60769]  2 11 11 12  3 11  1  5  2 10 10  7 12  7  9  7  5  8  4  7  9  5 10  1\n[60793]  8 10  7  1  5  5  7  4  7  7  6 11 12  6 10  9  6  5  4 12 11  8  3  9\n[60817] 12 11  1 10  6  9 10  7  1  8  8  1  3  7  4  3  9  3  8 10 10  1 10  1\n[60841]  9 11  3 12  4  5  4  5  3  7  4 10  3  6  8  1  6  6 11  4  5  6  1 10\n[60865]  6  8  1 11 10  5  8 10  7  2 12  3  2  8  6 11  1 12  2 11  9  6  6  1\n[60889]  7  6  4  4 11  4  8  2  2  8  6 10  9 11 12  7  2  1 11  8  7 12  9 11\n[60913]  6  2  2 11 11 12 11 10  1  6 10  4  2 12  6  6 11  8  3  2 12  7  6  9\n[60937]  1  4  7 11  2  1  4  2  5  1  3  2  5  5 10  7  3  6  8  4 11  1  2  6\n[60961]  5  2 11  4 10  5 10  9 12 10  2  7  7 12  9  7  8  4  4  3 11  3  9  1\n[60985]  2  8  4  6  8  1  9  8  1  6 10  3  4  6  1  2  1  6  6 11  5  1  4  8\n[61009]  4  1  4  6 10 12  3 11  3  9  7  5  1 11  1  7 10 12  7  8  9  8  7  5\n[61033]  9 11  8 12  7 11 12  4  7  3  9 11 11 12  4  8  7  6  1  1 10  6 10 10\n[61057] 10  6  1  2  3  7 12 10 12  9  7  4  7  6  8  4  5  1 12  5 11  9  9  4\n[61081]  4  4 12  5  5  8 12  7 10  1 12 12  3  7 10  2 12  9 11  3  7  2  4 12\n[61105]  1  9 12  1  7  7  7  2  4  5  2  8 11  2 12  6  2  4  7  9 12  6  3  5\n[61129]  3 12  8  9  9 11  6  2  2 10  5 12  1  9  8 12  6 11 11  1  7  1 10  6\n[61153]  5 10  8  6  7  4  4  1  7  2  8  8  4  5  4  3  9 10  3  6  3  2  7  5\n[61177]  3 12  5  7  9 10 12  4  9 11  8 11  2 12  6 10 10 10  9  3  6  8  1  9\n[61201]  3 12  2  7  8 11  5  4  9  1  1  9 10  5  7  3  7  9  6  2  4  3  8  7\n[61225]  9  5  7  7  6  4 10 10  8  9 11  9  5 11  2  7  8  7  5 12 11 10  4  8\n[61249]  7  3  7 10 11  5  5  1  9  5  6  9  4  9  5 10  5  3  3  8  7 11 10  5\n[61273] 10  9  1  4  3  9  2  5  2 10  5 10  8  2  4 10 12  8 10  8  7  1  7 11\n[61297]  8  6  9  1  5  7  6 11  1 10  8  3 11  8  8  4  3  3 12  6  5  3  7 11\n[61321]  4  1  3  7  3  9 10 10  3 11  3 12  7  2  4  5  6  6  3  1  8  9  8  4\n[61345]  4 10  1  2  4 11 11  6  1  3  5  5 10  7  9  8  8 10  5 12  4  5 11  5\n[61369]  4 12  5 11 11  4  3 12 10  1  6  4 11  5  6 11  2  4  7  5  7  7  5  6\n[61393]  5 11 11 11  6 12 11  1  2  4  4  6  9  7  7  8 10 12  8  5 11  7  4  7\n[61417] 10  8  7  4  9  1  8  7 11  7 12  2  5  2 10  8  2  2  6  4  1  7 11  3\n[61441]  8 10  1  1 10  6 10  2  3  2 11 11 10  2  1 11  7  6 11  6  1  7  4  9\n[61465]  8  1  3  8  3  7  7  1  9 11  7  7  7  6 10  1  8 12 11  4  7  8  4  1\n[61489]  3  1 10  8 12  4  4  1  2  7  6  6  9  9  9 11  1 12 11  1  1  1 10 11\n[61513]  2  7  1  2  7  7  1 12 11  2 10 12  6  6  3 10  3  5  1 11  7  5  5  8\n[61537]  7  8  7  7 12  5  5 11  1  3  5  9  8  4  8  3 11  6 11  2  2  6  8  8\n[61561] 12  3  7  6  3  1 11  7  1  4  7 10  9 12 12 10  9  4  5 10  1  3  4  1\n[61585] 12  5  9  4  6  2  5  1  6  3  8  6  9  7  9  6 10  8  3  5 12 11  8  3\n[61609]  4  2  3  9  7  6  9  6  1  3 12  2  4 12  2  8  7  4  1 10  9  4  7  6\n[61633] 11  9  1  9  5  5  8  2  7 11 10  8  3  4 12  7  3 11  4  1  2  4  3  1\n[61657]  7  5  7  2  5 10  7  8  7  8  7  8  2 11  4  1 11 10  4  8  8  2 11 12\n[61681]  2 11  4 11  1  5 10  6 11 10  2  9 10  9 11  7  3  9  4  8 12 11  9  2\n[61705]  3  8  9  3  1  6  5  9  8  4 12  1  3  5 11 12  7  7  6  4  8  2  1 11\n[61729] 11 10  7  7  1  4  5  9  7 10  6  2  5  6  9 12 10 10  7 12  8  5  7  6\n[61753] 11 10  5 11  1  8 10  3  5  9 12  3  7  5  7 11 12 10  5  4 10  7 10 10\n[61777] 12  2  8  9  8  8  1  9 11  9  3  1  6  5  3  3 11  2  2  7  8  1  9  5\n[61801]  6  9  8  8  3  1  1  3  1  7  8  3  1  7 11 10  7 11 10  8  8  8  8  1\n[61825] 10  5  1  9  4  9 12 11  8  9  2  2 10  9  2  3 11 11 12  5  4  2  4  4\n[61849] 11  7 10 11  3  6  6 12  9  7  7  7  5  3  2  5  8  6 11 10  1  5  7  8\n[61873]  3  4  8  4  2  5  3  2 12  3  4  8  1  4 11  1  4  6  5  3 10  2  2  1\n[61897] 10  9 12  2  3  4  1  3  9  3  2  8  9  9  1  8  3  7  9  2 10 12  8  2\n[61921]  9  3  7  4  3  4  6  4 11  7  6 10  2  8  7 12  5 10  5 10  4  3 11  1\n[61945]  3  9  8  5  4  7  3 10  3 10  9 12 12  5  1  3 11  7  6  3 11  4  5  3\n[61969]  6  9  8  1  7  6  6  3 12  8  3  6  8  8  2  3  4 12  7 12  7  5  5 12\n[61993]  5  6  3  4  2  9 12  4  4  8 10 12 11  7 10  7  8  2  6 11 10 10  6  3\n[62017]  2  2  5  3 11 11  6  3  9  2  5  8  5  7 10  5 10  9  5  1  3  7  6  3\n[62041]  2  8 10  7 10  6 12  4 12  5  5  6 11  3  2  7  9  1  4  9  7 10  5  3\n[62065] 12  1 11  2 10  6  2  2  8  8  2  7  9  5  9  1  9  7  6  1 12  4  1  1\n[62089]  3  6  7 11  2  1 10  8 11  3  6  6  1  8  6  6  2  6  4  9  8  3  2  1\n[62113]  9  8  3  7 11  6  8  3  2 11 12  5  3  2  6  4  7  9  2  2 11  2  5  4\n[62137] 10  3  8 10  2 11  7  3  2  1  8 12  9  6 11  1  4  3  9  3  5  2  5  3\n[62161] 11  9  3  8 10  7  7  8  2  8  1  3  9  3  3  4  6  3  8  9  5  8 10  5\n[62185]  9 12 10 11  4  2 11  4  8  2  3  6  3  4  9  8  8 12 11  7  8  2  5  3\n[62209]  6  7  8  5  7  7  7  5  9  4 10  2  2  7 10  7  8  7 10  8  4 11  3  5\n[62233] 11  5  1 10  7  1  2 12  5  3  4  9  5  6  2  9 12  5  3 10 12  5 10 11\n[62257] 10  4 11  7  7  2  1 12  2  4 12  4  3  5 12  3  4 12  9  2  8  6  6  3\n[62281]  4 12 12  3  1 12  7  3  1  2 11  5  6 12  6 10  7 12 10  8  3 10  2  7\n[62305]  8  7  7  7  2  6  2  8  2  4  9  2  8  8  4 10  4 12  4 11 10  7  7  7\n[62329] 11 11 11  7 11  6 11  9  5  3  7  9 10  4  4  1 11  8  4 10 12  8  4  1\n[62353]  9  7 11  5  3  6  5 10  2  8 12  3 11 12  4  8  1  9  9  2  8  5  8  3\n[62377]  6 11  4  6 12  4  2  7  3  6 11  1 10  8 10  8  5  2  1  2  8 10  3  8\n[62401]  9  1  1  9  2 12  8  3 10  3  2  8 11  6  6  8  2 10  8 12  6  3  4 10\n[62425]  7 11  8 10 10 11  9  2  7  5 11  2  8  6  8 10 10  1 12  3  9  2  1 12\n[62449]  3  4  4  2  1 12 10 11  7  6  7  1  9  1  4  5  2  6  4  6 11  8  7  8\n[62473] 12  3  9  6  8  6  5  7  3  1 11  3  8  7 11 11  2  8  3  6  6  3  2  5\n[62497]  4  7 12  9  8 12  6  2  1  7  4  9 12  1  5 11  4  3  3 12  4  5 12  2\n[62521]  8 10  1  7  2  8  1  8  5  7 12 11  2 10  7 12 10  7  8  8 10  8  1  6\n[62545]  4  9  1  6  6  8  2  7  1  3 12  1  5  4 11  1 10  8  9  1  4  4 11 11\n[62569]  5  7  3  2  3  3  9  2  7  1  4  6 12  1  6  1 11 12 10  8  5  3  3  7\n[62593]  2  3  2  8  9  5  9  7 11  4  8  3  4  3  8 12  8  7  2  4  8  2  3  3\n[62617]  1  3 10  3  2  3 11  6 10  1 11 10  7  4 12  5 12  7  6  7  6  1  8  4\n[62641]  3  4  6 10  8  1 12  7  3  9 11  5  2  8 11 11  9  2 12 10  1 12  2  8\n[62665]  4  8 12 11  3  1  9  6 11 10 11  6  1 10  1 12  7  4 12  7  1  1  3  5\n[62689]  5  8  3 11  5  8 11  8  9 12 12  8  9  9  8  3  5 10  4  4  1 10  5  9\n[62713] 11 12 12  1  9  3 10  2  8 11  6  1  2  3  9 11 10  4  4  1 12 10  8  8\n[62737]  7  4  1  6 11  2  8 12  7  8  3  8  8 12  4 10 12  6  8  8 11  4  2 12\n[62761]  4  1  9  2  5  6 10 12 12  7 11  4  6 10  7  9  4  7 12 10  3  1  9  9\n[62785] 10  2  2  3  5  1  5  4 11  1  6 10  8  8  8  8 12  4  4  3  7  4  8  8\n[62809]  9  4  4  4  3  4  9  9 11 10  8  1  5  9  7  2  1  7  9  2  7 11  5  4\n[62833]  5  7 10  6  7 10  6  2 12 11  9  5 11 10  6  6  2  1  9  1 11  6 10  9\n[62857]  9  9 12  6 10  4 10  1 12  8  4 11  2 12  8  1  4  3  6  6  4  7  8  6\n[62881]  5  8 12  7  9  8  3  6 11 11  9  3  7  2  8  3  1  7 11  7  7  2  8  9\n[62905] 11  6  3 12  7  9  8 10 10  3  7 10  8 10  5  4  6  2  6  2  8  5  1  6\n[62929]  7  7  7 11  9  3  1 10 10  7 10  6 10  5  7  1  5  1  6  4  8  1  5 11\n[62953]  2  5 12  9 12  3  8  1 10  2  8  5  6  3 12  1  2  6 10  9  1  8  3  8\n[62977] 12  7  2  6  8 11 12 11  6  1 10  6 11 12  2  5  7  1  8 11  5  6  8  9\n[63001]  6  7  2  5 10  9  4  6  8  8 12 11  6  8  6 10  6  4  5  7  7  7  7 10\n[63025]  7 11  2  1  2  3  8  4 12  5 12  5  1  7  9 11  8  9  7 10 10  2 10  5\n[63049]  5  3 10  9  7  8  1  9  1  4  2  1  4  5 11  1  6  4 12  6  7 12  9  3\n[63073]  2  2  4 12  2  8  8  4  7  4  6  1 11  5  2  7  2  2  4  9 11  8  7  4\n[63097]  6  5  1  6  3  6  1  6  1 10  4  8 12  4  7  4 10  8  6  7 10  9  1  2\n[63121]  5  4 10  2  1  1  3  5  5  8  7 12 10  1 12  2  1 12  1 11  2 10  7 11\n[63145]  1  8  6  5 10 10  7 12  5  5 11  7  2  2  9  8  3  5  8  4 12 11  8  1\n[63169]  1  1 12  3  3  4  8  9  1 11 12  9  8  1  1  7 10 11  3  2 10  3  9 10\n[63193]  8  5  3  6  4  6 11  1  9  3  1  8 10  8  2  7  3 12  6  5  4  9 11 11\n[63217] 11 11  8 10  8  1  8  7  4 10  2 11  9  9  9  4  7 12  8  3  7  4  6 10\n[63241]  9  8 12 11  1  3  2  4  3  2  3  9  7  1  6  3  8  3 12  7 11  6  1  4\n[63265]  2  6  9  5  2  4  9  4  7 11  7 12  5 10  1  4  4  1  1  1 12  6  2  3\n[63289] 12  2 10  2  3 11  8  2  1  8 12 11 11 12  7  9  9 10  3  5  4  9  7  6\n[63313]  5 12  1  6  6  9  1 12  9  2  2  6  4  3  3  6 11  1  7  1 10 11 10 10\n[63337]  3 12  7  1  1 11  5 10  7  2 11 10  7 10  2  7 12  1  7 10  4  5  6  4\n[63361] 12 11 12  3  9 12  5 11  4  6  8  3  9 11  5  6  5 11  9  6 12  1 11  1\n[63385]  5  3  7  5 12  7  6  6  6  2  2 12  5  1 12 10  4  4  5  6 12  3  1  2\n[63409] 11  7  9  6  1 11  4 12  9  2  9  3  4  7  7  4  7  2  6 10  5  3  2 11\n[63433] 11  7  7 10 12 12  4  6  3  8  1 11 10  6  8  7  3  2  5  5  4  2 12  6\n[63457] 12 10  9  4  7 10  4  3  8  4  9  5  8 11  7  1  8  1  4  5  5 11  3  9\n[63481]  7 11  2 11  4  3  8 11 10 11 10  1  3  9  1  7  9  8  9  3  1  2  5  3\n[63505]  2  6 11  6  5  2 12  7  4 12  6 11  8  9  7  7 10 12 10 10  2  6 12  8\n[63529]  6 12  7  4  5  4  7  3  1  9  8  5 12  4  4  6  6  8  2  7  2  7 10  3\n[63553] 10  9  3  5 11  9 10  8 10  1 10  7 12  2  3 11 11  8 10  6  7  5  9  8\n[63577]  5  9  7  4  7  1  2  6  2  6 12 12 10  8 11  2  2 12  3  9  2  4 11  3\n[63601]  1 12  5  1  5  1  7 12  2 11  6  3  2  7  1 10  2  5 10  4  9  3 12  1\n[63625]  6 10  3 12  3  6  4  2  1  2  6  1  4  8  4  3 10 11 10  4  1  3 12  4\n[63649]  6  5 10  3  9 11 12  5 11  3  6 11  8 12  9 10  2  3  4  9  1  7  4  5\n[63673]  5  5  1  3  9  7 11  4  2  4  6  3 12  2  7  7  6  7 11  8  1  6  5  2\n[63697]  9  2 10  6 11  1  3  8  1 11  6 11  1 11 11  5  8 10 10  3  6  4 11  7\n[63721] 12  6  5 11  1  9  9 12  8 11  5 12  8  8  1 12  1  2  9 11 12  4  5  5\n[63745] 11  7  3 12  8  7  8 12  7  4  7  5  8 12 12  3 11  9 12 11 10  8  6 11\n[63769]  2  1  4  7  8  4  2  3  8  7 11  3  5  1 12  2 12 12 10 11  5  2  5  5\n[63793] 12  5 11 10 10  5  5  5  9 10  6  5  7  3  5  1 10 10  9  1  1  3  9  2\n[63817]  9  1  2  3  6  6  8  5  7 11 12 11  2 10  6  5 12  9  9  1  8  1  1  5\n[63841]  8  4  6 12  2  5  8  5  5  9 10  6 10 11  4  4  1  3  1 12 12 11 12  1\n[63865]  7  6  1 12  7  3 12  1  3 11  6  1  1  1  2  7  6  2  3  7  6  4  8  5\n[63889]  7  2  3 11 11  4  1  3  9  7 10 12  4 12  3 10 12  2  4  9  2 12  5 10\n[63913] 11 12  5  5  8  8  9 10 11  5  2 11  7  9  4 11  1  9  1  7  3  2 12  6\n[63937]  7  6 10  3  9  7  3  8  1  7  7  7  5 12  9  7 10  2 10  8  5  8 12  9\n[63961]  7 10  7 10  3 12  8  1  8  1 11 12  8 11  4  6  2  2 10  3  3  8  8  8\n[63985]  7  3  9  3  4  2  7  3  2 12  8  2  8  9  2 10 11  4 10  6  2 11 11  4\n[64009]  2  1  6  2  2 12  4  2  4  6  5  4  8  8  7  5  6  5  8  3  3  7  4  9\n[64033]  3 12  5  5  3  6 10 11  2  6  3  2 11  3 11  2  1 11  9  6  6  1 10  7\n[64057]  7  6  5 12  2  5 12  4  8  5 11  9 11 10  8 10  8  1  9  8 11  2 10  3\n[64081]  3  5 12  2 11  8  7  1 12  6 11  4  2 10  7 10  5 12  6  1 11  4  1  4\n[64105]  5  1  8  4 12  4  9 10  4  5  7  6  8  1  3  1  2  7 10 10  3  2  3  5\n[64129]  8 12  1  3  4  3  3 11  4  6  6  2  3  5  5  8 10  1  9  2  5  4  2  7\n[64153]  5  7  2  3  1  9  4  2  4  4 11  6  3  2  9  1  7 12  9  9  1  4  1  8\n[64177]  2  9 12  1  3  9  8  7  9  5  7  2  9  2  6  1  9  1  7  8  7  5 11 11\n[64201]  6  9  5  7 11  2  4  2  5 11  8  2 11  1  7  9 11  1  8  8  4 10  6  2\n[64225] 10  6  8 11 11 11  8  7 11  6  1  9  7  4  1 10  3  5  2  9  2  4  7  5\n[64249] 10  2  4 10 11  7  6  8 12  9  1  8  3 10  7  6  3 10  8  9 10  1 11  3\n[64273]  7  4  5  7  6  3  3  5  7 10  8  2 11  8 11  4 12 10 11  4  7  3  7 11\n[64297]  8  2  8 10  7  9 12  7  5  5 11 12 10  4  6  5  1  1 10 10 12  2  9 11\n[64321]  6  8  1 12  7  3  1  8 12  6  7  2  9 12  7  6 12 12 10  6 12 11  9 11\n[64345]  7  3  1  3  1  4  1  4  6  6  7  5  3 11  2  9  3  1 11 12  6  6 12  2\n[64369]  9  6  1  9 11  5  1 12  6 12  6 10  7 11  5 10  3  8  2 11 10  4  7  8\n[64393]  8  3 12  9  4  4  2  3  5 12 11  9 11  8  4 10 11  8  7  9 10  9  6 12\n[64417] 12  4 11  5  8  9  7  2  5  2 10  8  7  5  6 12 12  1  1  8  6  3 11  5\n[64441]  1  5  1 12  5  7 12  7  2  5  8  4  2  8  6  1 10  9  1 10 10  5  9  5\n[64465]  5  8 12 10 10  2  4  4  5  2  8  9 10  9  3  8  4  5 10  5  9  1 10  8\n[64489]  3  4  3  6  7  3 10  5  5 11  6  4  9  1 10  6  1  3  4 10  7  6  2  4\n[64513] 10 10  3  1  5  6  4  8  1  2  5  5  5  7  5 10  1  1  9  1  3  6  7  4\n[64537]  6  7 12 11  4  3 11  8 10  9 11  6  4  5  2  4  9  6  2 11  5  8  9  2\n[64561]  6  3  5 12 10 12  6  7  9 10 12 10  9  8  5  4  3  8  8  6  1  4  1 10\n[64585] 12  6  9  1  1  7  6 12  9 11  2  5  8  7  2  7  9  1  5  9 12  9  7  1\n[64609] 10  4 11  1  3 11 11  9  5  8  1 10  4 10  4  6  3  8  7  8  1  3  6  4\n[64633] 11  7  2  9  4  9  5  3  7  1  4  7  2  4  5  9  2 11  3  7 12 10 11  6\n[64657]  7  5  2  7  8  5  3 10  8  9  3  3  4  8  2  7 10  2 11  5  4 10  2  1\n[64681] 11 10  8  1  8  1 12  7  6  7 12  2 10 10  6  2  1  6 10  4  8  6  8  3\n[64705] 10 10 10  1 11 12  3 11  2  1  2 12 11  3  4  2  9  2  9  7  9  7  9  6\n[64729]  1  2 10  8  5  2  6  3  3  1  6  3  4  1  3  3 10  1  7 10  7  2  6  7\n[64753] 10 10  6  3  2  6 11  4 10 11  2 10  3 10  3 10  7 12 10  2 12 11  9 12\n[64777]  2  6 11 11 12  4 12  1  2 12  8  9  7  6  5  9  6  7  7  8  3 12  9  6\n[64801]  8  3  9  7 10  6  5  7  4 10 12  7  2 10  2 11  6 11  9  7  7  5 11  2\n[64825]  5  1 10  8  6  2  5  9  3  9  9  8  3  6  3  7 10  7  7  4 10  9  8  8\n[64849]  9  4  8 10  3  6  8  3  1  9  5  1  2  5  1  5  3  9  4  6  7  9 10  8\n[64873]  4  3  3  6  8 12 11  2  1  9  8  9  8  3  8 10  1  3  7  1 11  5  7  7\n[64897]  7 12  4  8 11  9  6 11 10  3  9  2  2  9  4 12 11  6  2  9 12  5 11 12\n[64921]  5  1  8  1  6  7 10 11 12  3  2  4  5  4  4  3  1  2  6  8 12  6  6  4\n[64945] 10  9  5  7  8  9  1  8  6  6  3  8  7 12  4  6  6  6 10  5  2  9  2  2\n[64969] 12  3  4  2  2  1  3  1 10  6  3  2  6  4  8 10  6  3  6  3  7  6  8  7\n[64993] 12  9  3 12  9  5  1 10  3  3 12  7  1  4 10  9  8  7  2  5  8  3  1  5\n[65017] 11 10 11  6  8  2  6 12 12 10  1  1  8 11  1  3 11  9  8  7  9  8  8 10\n[65041] 12  6  2  4  2  5  8  3  7  6  6  3  3  5  3  6 12  5  7  1  8  4  2  9\n[65065]  7 10 12  1  3  8  1  1 12 10  3  3  1  3  9 10  4 11  5  7  1  8  8  4\n[65089]  1  3 12 11 12  7 12  3  4  1  5  5  6  6 10  7  7  3  4 12  6  2  8 12\n[65113]  4  9  9  1  5  3 12  8 10  5 10  2 12  8  5  5  9  7  7 12  8  6  9  1\n[65137]  2  1  7  8  2  5  8  5  6 10  8  8  4  5  2  2 10  1 12 10 11  1  9  3\n[65161]  2 12  7  8 11 12  7 10  1 10  9 12 11 10  6 12  2 11 11  9  7  9  6  1\n[65185]  8  1  3 12  5  8  9 11  5 12  5 10 10  3 11  6  8  8  5 12 11  9  9  7\n[65209]  1  5  7  9  4  4 10 11  7  8 10  3 12  7 10  1  9  9  3  7  3  1  7 11\n[65233]  6  3  3  4  8  4 12  7  3  3  6  2 11  3 12  1  2  8  8  4 11  3 12  8\n[65257]  6 11  8  7  3  1 10 12  4 11 10 10  1  6 11  6  8 12  3  9 12 12 10 12\n[65281]  7  4 10  7  3  4  3  6  6  7  4  4  7  6 11  1 11  8  7 11  6  7 12  5\n[65305]  7  9  1  1  2  8 10  9  2  2  2 12  8 11 10  5  2  6 11 10  1  2  1  8\n[65329]  4  8  9  4  6 12  2 12  2  7  2  5 12  1  3  9  9  3  5  4 11  4  9  7\n[65353]  2 12  8  6  4  5  5  8 10  7 12 12  3  4 11  2  8 10  3  7  9  4  6  8\n[65377] 10  2 10  8  7 12 10  6 10  1 10 10  6  6  3 10 10  7 12  7  3  4 10 12\n[65401]  9  5  2  8  9  3  5  3  4  5 12  2 10  3  3  6  4  1  1  7 11  5 11  6\n[65425]  9  5  8 12  8  1  2 10  8 12  6  7  8  1  7  6  9  1  3 12  8  3  2  2\n[65449] 10 12  4 10  6  9  5  2  3  7  5  1 10  9 10  2  7  2  2 10  6  2 11 12\n[65473]  3  8 12  6  6  7  9 12 12 11 12  5  1 11 11  6 10  6  6 11  2 11  5  6\n[65497] 10  3 10  7  9 10  8 11  7 10  3  5 10  5  9  2  2  4  2 10  6 12  4  7\n[65521]  1  8  6  8  3  3  9  5  1  8  6 12  9  9 10  7  7  3  7  5  2  2  4 12\n[65545]  8  1  1  1  4  9  3  1  1  8  9 12 10  6  8  5  6  3  6  1 10  9  9  4\n[65569]  1  5  3  4  1  6  4  1  8  7  5  2  5  7  7  7 12  9  3  4  3  3  5  5\n[65593]  6  8 10  8  1  6  7  6  7  3  4 10  9  3  6  5  4  9  8 10  2  4  1 11\n[65617]  9  7  1 11  9  8  7  6  6  5  3  6 10  2 12  1  9  9  9  4  2  7 11 10\n[65641]  2 12 12  8  6  6 10  9  8  9  3  9 11  3  9 12  1  9 12 12 10 12  3 12\n[65665]  5 10 11  7  2 12  6  6  2  7 10  4  3  1 10  4  8  8  2  4 11  7  2  3\n[65689]  3 12  7  1  1  5  2  5  2 11  4  8  1  4 11  9 11  3  8  7 12  2  7  8\n[65713]  3  9  2  1  7 11  7 11  4  8 11  5  2  7  6  5  3  6 12  9  3  6  4  5\n[65737]  5 12  7  2  1  2  2 10  5 10  2  9  6  9 12  1  1  9 10 12 11 11  1  2\n[65761]  9  1  9  1  7 12 11 12  8  4  7  3 10  3 12  6  3  3 12  6  3  6 10  6\n[65785] 12  7  7  4  2 12 10  4  9 11  9  8  7  7  4  5  3 11  1 10  4 10  1 10\n[65809] 11  4  6  5  2 10  7  8  9  6  4  2  6  8  4  9  5  4 11  7 12  8  3  5\n[65833]  1  8  4  4  3  5  4 11 12  3  8  1  1 12  6  3  5  5 12  6 10 12  7 11\n[65857]  1  8  8  2  1 10  8  8  6  5  7  7 11  2  1  5 10 10  1  5  8  3  2  5\n[65881]  1 12  3  8  7  9  2  8  2  3  6 10 10 11  2  8  6  9  4  2 12  5  3  7\n[65905] 12  7  7 11  6  7  5  4 12  8  5  6  1 11  1  5  8  8  3 10  4 12  3  2\n[65929]  8  8  7  2 11  4  5  6  1  8  9  4  7  9  7  3  3  2  4  3  8 10  9  5\n[65953] 12  9  8  8  9  1  8 11 12  7  5  3 12  7 12  8  8 10 10 11  3 10 11  5\n[65977]  3  7 12 10  8  8  7  2  7 11  4  6  5  2 10  9 10  3 12  5  4  8  2 11\n[66001]  5 10  7  5  3  8 12 10  9  5 11  2 10 12  2  2 11  3 11  5  4  9  3  5\n[66025]  3 11  6  7  8  4  3  4 10  7 12 12  1  7 10  1  9  5  7  5  1  5  1  2\n[66049]  4  2  2  2 10  7  8  1  4  5  8  5  3  1 11 11  1 12 10  9  2  4  1  3\n[66073]  4  5  3  5 12  8  5 12 10 10  6  4  1  4  6  2  6  4  8  9 11  2  8  6\n[66097]  6 12 10  2 10 11 10  8  7  3 12  9  8  7  9 10  4 12  8  5  8  8  7  2\n[66121] 12 12 10 11  8  4  8 10  7  8 10 11  7 10  6  9  4  4  9  9  7 11  5 10\n[66145]  2  8 11  6  2  1  2  8  7  8  5  5  4  9  7 11  7 11  9  2  6  4  9 11\n[66169]  1  7  9 10  2  4  3  7  3 11 10  9  1  5  2  4 12  7  3  2 11  1  9  3\n[66193]  8  4  3 12  2 12  4  6  4 12  2  3 10  1  6  9 12  4 12  1  6 10  3  7\n[66217] 12  3  5  9 11  3  2  5  3 11 10  2  2  3  9 10 11 12 10  3 11 10  8 12\n[66241]  3 12  3  7  8  5 10  8  7  7 10  1  4  4  6 12  3 12 12  3  3  7  1  2\n[66265] 11  3  5  8  7  6  3  5 12  5  4  6  8  3 10  1 11  4 10  6  5  8  8  6\n[66289]  3  6  5  9  1  3  6  2 10  5  3  7  9  7  9 10  5 10  8  1  6  7  5 11\n[66313] 11 12 10 11  8 12  9  3  7  4  5 10 10 12  1 10  7  6  9  1  6  9  6  2\n[66337]  4  8  9  7 12 10  1  9  3  2  2  6 12  7 12  4  3  3 11  1  8 10  6  8\n[66361]  4  9  4  6 10 10  4  1  7  7  8  6 10  9 12  4 10  3  6  4  9  4  2  5\n[66385] 12  5 11  4  3  5  4 12  3 10  5 12  7  2 11 11  4 10  5  5  3  6  3  6\n[66409]  2  6 10  4 12  6  1  8  6  1  8  2  4  5  6 12 11  2  5  8  6 11  4  3\n[66433]  3  3  7  2  5  5  4  5  4  7 12  6 11  5  6  3 11  7 11 12  1  1  3  4\n[66457]  2 12  9  8  6  6 12 12  9  7  1 10  7  2  2 12  3 12  5 10  4  9  9 12\n[66481]  2  4  2  9 10  4  3  3  8  1  9 12  3  9  7 11  7  8 12 11 10  1 11  9\n[66505]  6  1  3  5 11  1  3  1 12 11  6 11  9 12 12  1  6  8  2 10  8  6  4  1\n[66529]  7 10  1  1 11 11 11  2 10  9  7 10  7  5  3  3  4  3  1  8 10  3  4 11\n[66553]  6  8  9  7  8 10 11  4  2  6 10  3  6 11  1  3  6 11  7  9  7  7  1  4\n[66577] 12  8  4  3  3  9  2  6  3  6 10  4  9  8 10  8  6  8  3 12  8  5  7  9\n[66601] 11 10 12 12 11  3 10 10 11  4  6  3  6  4  6 12  4  2 12 11  9  8  1  9\n[66625]  7 11  8  7  7 11  4  8  7  1  3  5  4  4  3  6 12 10  4  2  3 11  2  9\n[66649] 12 10  3 10  8  8 10  1  9  6 11 11  3 11 10 11  5  6  1  8  9 12  8  2\n[66673] 12  4  3 12 11  1  8  6  6  2  5  3 11  7  6  8  3  4  4  3 10  7  9  5\n[66697]  8  7  6  8  4 10  3  9  2  7 11 12  1  1 10 12  1 10  9  3  5  7  9  8\n[66721]  5  5  9 11  5  4 12 12  3  8  1 12  9 11 11  3 12  5  9  3 12  7  5  9\n[66745] 10  3  2  1  2  3  9  7  7  4 12  3 11  5 11  8  7  8 10  2  9  1  7  7\n[66769]  8 12  4  8  9  3  2  8  5  7  3  2 12  5 12  7  2  5  7  2 11  1  4  5\n[66793] 11 10  5  7  6 10 11 10  2 12 10  1  1  9  7  8 12 10  2  5 11  6 11  6\n[66817]  4 11  4 11  5  4 10 12 10  2  4 11  2  7  1  9 12 12 12 11  7  4  8  2\n[66841]  6  7  7  6 11  9  3 12  9  7  2 10 10  7  5  8 10  9 11  1 10 11  5  8\n[66865]  7  1 10  7  3 10 10 11  4  3  7  3 11  7  9  2  2  7 10 12 11  7  6  3\n[66889]  7  9  5  6 12 10  8 11  6  5  6  9  3  9  8  3  9  4  9  6 12 11  7  7\n[66913] 12 12  2  5  6  4  6  9 10  7 10  4  3  1 10  9 10 12 11  7  6  8  5 10\n[66937]  3  2  8 10  6  7  1  6  4  6 12  8  4 11  1  8  5  5  9 11 11  6  9  9\n[66961]  8  7  3  4 11  5  5  4  8  8  5 10  2  5  5  1  3  8  9  2  3  1  5 12\n[66985] 12 11  8  5  8  8  7  6  7  7  5 11  1  8 10  6  9  1  6  9  6  5  8  8\n[67009]  6  7 10  8  4 11  4  8  8  8  2  3  3  1 12  3  7  3  1  8  9  7  2  7\n[67033] 11  7  9  6  6  5  4  5 11  1 11  5  4 12  9  8  2 10  6  2  6  7  2  9\n[67057]  4 11 11  8  2  1  3  2 10  5  1  5 10  6  1  2 11 11  9  9  5  4  6 10\n[67081]  3 12  9  2 12  1  8  9  9  7  8  3  1  4  9  3  7  1  2  4  9  5  1 10\n[67105]  5  7  6 11 10  5  7  9  4 12  9  6  2  4  6  1  6  1  5  6  1 12  6  4\n[67129] 11 10  7 12  5 10  2  2  1  9  1 11 12 11  1 12  3 10  4  6  8 11 10 10\n[67153]  6 10  2 12  5 10  1 11 10  8  7 10  8  8  2  7  1  3  9 10  5  7  5  5\n[67177]  4 11  7  9 12 10  5  5 10 12  1  7  7  2  5  7 12  3  9 12  8  7  2  2\n[67201]  8  9  7  6  1  9  9  8 12  6  1 10 12  9  4  7 12 11 12  7  2 10  7  9\n[67225]  5  7  5 12  3  1  4  5  8  9  1 10  5  8  2  1 12  9  5  4  7 10  9  8\n[67249]  6 11 10  4  8  2  9  4  9  7  3  1  7  1 11 11  1  4  4  1  5  2  2 12\n[67273] 11  7  3  4  2  9  7  9 12  4  5  1 10  1  5  5  2  4  6  9  2  4  4  5\n[67297] 12 10  7  7  6  7  4 11  1  2  7 12  2 10  7  3  7  2  2  6  7  4 12  9\n[67321] 10  8 11  1  4  9  7  8 12  1  5  9  8  6  3 10  5  4 10  4  5  7 10  1\n[67345]  6  1  2  2  7  2  4  9  9 12 12  6  6  3 12  1  1 10 10 12  8  9  2 12\n[67369] 12 11  9 11  4  9  1  1  6  8  7  5  6 11  9  6  5  9 10 11  9 10  7 12\n[67393]  7 10  9 10 11 10  1  2  5  3 11  2  9  3  1  3  8  9  7 10 11  5  1 10\n[67417] 10 11  7  6  2  9  8 10  5  3  7  8  6 12  9  7  7  1  6  2  2  8  4  4\n[67441]  4 12  3  3  4  8  9  5  1  9  6  5 11  1  6  9 12  8  8  4  9 10  1  7\n[67465]  9 12  2  8  1  6  4  4 10 11  5 12  9  4 10  4  7 11  8  4  7  7  5  9\n[67489]  7  8  2  1  1  1  3  3  3  5  4  1  1 10  2  5  7  2  6  2  3  2  2  7\n[67513] 10  3  4  8  1  7  4  3  2  6 11  9 12 10 10 11  3  6  1  9  8  6  6 11\n[67537]  2  5  8  1  8  3  9 12  5  6 10  9  8  8  9  9 11 10  7  8  3  5  3 12\n[67561] 12  7  4  7 10  3  5  2 12 10 11  3  1  7 10  3  4 11 11  8  2 10  4  7\n[67585] 11  5  5  1  4  8  1  9  4  6  4 12  5  5  6 12 12  5  8  8 11  3 12  7\n[67609]  9  4 11  9  5  2  5 10  3 11  1  3  5  4  7 12 10  7  2  3 12 11  7 11\n[67633] 12  3  8  6 12  6 10  5  7  9  2 12 10  4 10 10  7  2  1  6 10 12  4  2\n[67657] 11  4  8  7  9  9  6 12  3  2 11  1  5  3  5  3  7  5 12  7  3 10  7  8\n[67681]  8 11 12  7  2  1  2 11  7  7 11  2  6  4  5  2  8  4  5  4  3  3  3  4\n[67705]  8  5  5 10 11  6  8 12  9  7  7  3  3  8  4  1  8  6 12 11  5  1  5  2\n[67729]  1  3 10  6 12 11  9  7 12 10  7  9  3  7  6  5  1  7  1 12  5 12  6  5\n[67753]  9  7  1  1  7  4 10  6 10  7  9  7  8 12 12  2 11  7  8  5  2 12 11 12\n[67777]  5 11  7 10 10  8 12  7  8 11 10  4 12  8  2 12  3  6  9  3  6  7  5  3\n[67801]  3  5 12  7 12 12 10 10  5 11  6  8  2 11  8  1  4  9  4  5  7 11  7 12\n[67825]  3 11  6  9 10  2 11 12  1  4  6 11  2  4 10  4  5 10  6  7  3 12  7  1\n[67849]  9 10  2  7 11  9  1  1 12  8  2  7  7  9  2 12  2 12  1  4  6  4  5  7\n[67873]  5 10  5 12  7 11  1  4  8  1  3  7  7  5 11  3  2  3  1  7  7 11  8 12\n[67897]  9 12  1  6  6  6  8 11  3  9  2 12  7  7  6  6 12  3  2  1  1  3 12  2\n[67921]  6  9  5  5  2  1 12  9 11  2 12  9  1  7  5  1  7  7  1  2 11 10 12 11\n[67945] 11  7  2 12  9  5  9  7  2  6  9  7  2  6 11  7  9  1  5  2  7 11  9  8\n[67969]  2 10  9  6 12  7  2 12  3  5  1 10 11  9  8 12  9  5 11  6  3 11  5  3\n[67993] 12  8  9 10  6  1  3  7  7  2 12  5  2  6  1  6  4 10 10  9  6 12  2  5\n[68017] 12  1  8 12  1  4  6  6 12  7  2  3 10  9 12  4  4  9 10  5  7  7 12  3\n[68041] 11 11  6  7  6  3  3  7  5 10  7  9 10  7  6  7 10  1 10  8  5 12  6  9\n[68065]  5  4  8  2  3  3 11  8  6  3  7  1  9  6  5  7  6  5  5  1 12  3  6 10\n[68089]  2  2 11  3  7 10  8 12 10  5  5  9  7  5  5  3  8  1  4  6  9 12  5  7\n[68113] 10  1 11  5 11  4  3  9  2  8 12  4  2 11  4 10  5  7 10 10  6  3  1  9\n[68137]  8  7  8  8  1  2  7 11  9 12 10 10  4 10  1  3  2 10  8  4 12  2  1  1\n[68161]  5 11  8  8 11 10 12  9  4  2  2  5  7 11  2  1  1  8  3  9 10 10  7  1\n[68185] 10  3 10 11 10 12  3  6 12  6 12  2  7  9  8  2  5  6  4 12 10 10 10  9\n[68209]  6 11  9  5  9  3 12  2  1  4  8  3  8  4  5  7  4  2 11  1  9  5  9  8\n[68233] 12 11  3  2  9  6  5  7  3 10  4  5  4  5  4  6  5  8  3  8  7  3  7 12\n[68257]  9 10  4 10  6  9 11  3  3 12  4  4  8  1  5  8  6  3  8  4 11  8 12 10\n[68281]  3  8  4  7 10 11  5  6  4  8 12  1 10 11  6 12  2  6  2  9  1 11  7  7\n[68305] 12  3 12  6  9  6  2  9  7 10  5  1  2  7 11  5  6  4 10  9  3  8  7  4\n[68329]  1 10  8  8 10  9  3  7  8  6  3 10  4  9  2  8  1  5  2 12  9 11  7  3\n[68353]  8 10 12  7  7 10  2  7  2 11 11  7 12  2  5 10  7  4  2  8  7 12 12  8\n[68377] 11  6 10  5  9  6  9  9 10  7 10  3  8  9 11  2  2  2 12  6  5  5 12  7\n[68401]  7  7 11  3  7  6  6 10  8  6  4 10  6  5  2  5  1 12  8 10 11  6  1  8\n[68425]  1  6  3  8  1  4  4 10  4 10 12  5  4  4  6 10 11  2 11 12  7 11  6  1\n[68449]  9  4  7 10  4 11  4 10  8  8  9  9  6  1 10 11 12 10  2 11  4  2  4  1\n[68473] 11 12  1 12  8  7  1 10  5  6  5  1 10 11  7  6  4  3  4 10  2  5 11  7\n[68497]  7 10  7 10  5  9  6 11  6  8  1  8  8  5  1 12  2  3  5  9 12  1  8  8\n[68521]  3  5  2 12  7 12  7  7 10  1 10  7  6  4  9  6 10  7  9  9 10 12  8  9\n[68545] 10  7  3 10 10  2  7  9 12  3  8  1  6  2  7 10  5  5  7 12  2  5  3  7\n[68569]  5  1  7 11 12  9 11  8  5  1  9  5  5  3  5  2  9 12  2 12  4  8  1  1\n[68593] 11 11  6  8  8 10  2  1  4  3  3 12  3 10  6  4  9  4  5  4  9 10  9  7\n[68617]  7  9  6 11 12  6  7 10 12  6  5  3  4  7 12 12  6  2 12 10 10  8  3  4\n[68641]  3  8  7  9  3  3  8  6  5  3 12  9 12 10  1  8  5  8  5  3 10  2 12  5\n[68665] 12  6  6 10 12  5 11  3  1  2  9  1  8 10  9  1  2  4 10 11  6 12 10  5\n[68689]  8  3 11  5  9  4  7  6  8  3  1 11  8  1  8  7  4  6 11 12 12  2  5  2\n[68713]  4 12  2 12  3 11  1  9 11  4  2  6  4  8  6  5 11  3 10  3 12  7  8  6\n[68737]  2  1  1  5  1  6  3  5  3  5  2  1  7  4  3  7  2  3  8  8  6 10  9  8\n[68761] 11  2  2 10  9 10  1  5 11  9  7 12  8 12  2 10  4  6  8  9 11  7 12  6\n[68785]  5  5  4  9  6  3  3  7  7 11  7  5  6  6  6 10  4  7  6  2 12  6  3  7\n[68809] 11  9  8  8  2 12  7  9  6 12 11  5 12  7  3 11  6  8  7  6 11  3  5  9\n[68833]  7  8  4  2  2  1  3  1  7  4  6 11  3 12  1  9  2  6  3  7 12 10  2  3\n[68857] 12  4  3  4  7  5  1  6 10  8  9 11  5 10  9  4  3 11  6 12  4  5  7  9\n[68881]  5  4  7  2  7  3  6 10  2 12  5  8  1  7 10 11 12  9  6 12 12  1  7  9\n[68905]  1 11  7  2  1 12  2 11 11  6 11  2  5  3  7  1  3 11  4  9  7  9  7  5\n[68929]  9  9 10  9  6  5  6  3  9  5  8 11 10  7  8  5  8  4 11  2 11  3  5  8\n[68953]  5  3  9 10 11  2 12 12 12  5 12  1  8  2  8  5  8 12  8 10  4 12 11 11\n[68977] 12  8  3  5  9  3  9  2 12  1  5  1  3  7  7  5  7  6  7 10 11  8  5 12\n[69001]  1  2  2  6 12  3  8  8 10  5  3  1  5 12  1  6 10  9  8 12  5  4 12  5\n[69025]  5  4 12 11  5  5  1  2  8 10  2  7 10  5  2  2  7  8  8  8  6 10  1  9\n[69049] 11  7  1  8 11  9  9  9 10 10 11  5  2  1  4  7  9  8  8  5  1  5  4 11\n[69073]  1  5 10 11  8  2  6  4  8  6  1 11  3 11  4  8 11  4  7  3  1 10 12  6\n[69097]  5 12  7  2  3  4 10  4  1  5  3  8 12  3 10  7  9  5  5  6  4 11  4  9\n[69121] 12 11 11  1  2  1  3 10  4  5  5  3  8  4  1  1  4 10 10  6 12  4 11  3\n[69145] 12  5  2  7 10  8 12  8  5 11 10 12  3  3  1 12  6  7  4 10  1  8  5 10\n[69169]  9  7  9  5  2  3  3  4 11  9 10  7  5  9  7  6  7  6  8  2  1  5  5 12\n[69193] 11  4 10  5 12 11  1  9 12  5  8  8 11  1  2  3  4  3 10  5  3  8  6 10\n[69217]  9  1  6  9  9  5  4  6  6  6 11  2  2 12  2  1  7  7  9  7  4 12  4 10\n[69241]  7  8 11  5  8  7  2  9  9  8  5  6  3  6  2  9 12 10  6  8  7 12 11  2\n[69265]  4  8  3  7  3 12  6  2 12  1  7  3  3 11 10  9  8  3  5  2  2  7 12  7\n[69289]  3 10  8  3  9  6  9  8 11  1  9  2 12  8  7  3  9 11  9  3  8 10  2  8\n[69313] 11  5  3  1  3  6  3  1  6 10  4  8  5  6  9 11  6  3  6 12 11  9  1 10\n[69337]  7  8  1  9  5  2  5  5 11  1  3  9  1  8  4  4  4  7 10  3  3 12  1  7\n[69361]  4  2  7  1  2  4  3  6  9  4  1  7  3  8 10 10 12  5  6  3  9  7 12 11\n[69385]  8  5  6  2  5  1 10  2  8  2  4  8  5  6  6 10  9  3  3  9  1 11  9  7\n[69409]  5  6  8  8  8  6  7  7  2 10  8  4 10  3  5  5  8  3  7  6  9  3 11 11\n[69433] 11  3  7  6 11  1  6  3  5  8  2  5  7  7  3  7  2  2 10 10 10  7  6 12\n[69457] 10  4 12  3  4  2  4  9 12  2  5  2 10  3  2 12  9  7 11  8  5  9  3 10\n[69481]  5  9  8  4 12 10 10  9  9 11  7  1  4  6  3 10  1  5  6  7  5  1  9  1\n[69505]  4 10  8  6 11  9  3  2  2 10  9 12  6 10  2  7 12  8  7  9  7  2  4  4\n[69529] 11  2  5  7  1 11  6  4  1  1  5 12  2 10  3  1  1  9  7 10  1  5  3  5\n[69553]  1 12  6  7  4  6  4  7  9 12  6  2 10 12 11  6 12  5  7  4  8 12  7 12\n[69577]  8 12 12 10 12  3  5 10  4  3  9  5  7  9 12  4  5  1  2  9  8 12  7  4\n[69601]  2  6  8  6  4  9  2  3  2  9  2 12  9  8  6  4  4  5 12  6 10  3  1  6\n[69625]  2  9 11  3  7  6  1  1  4 12  3  8 12  7  9  1  3  4  7  4  8  1 12  9\n[69649]  2  9  3 10 12  6 11 11  1  8  3  2  9  4 11  5  9  6  1  1  8 10  5  6\n[69673]  5  7  2  2  5  7  1 10  5 12  7  4  7  4  1  4  3  6  8  6  2 12  1 10\n[69697]  4  8 11  5  3  6 12  9 10  1 10  3  5  1  1  4  9  7  4  4  8  8  5  3\n[69721]  4  7 12  7  2  7  8  2 10  8  6  7  4  8  3  2  2  9  3  2 11  4  8  6\n[69745]  1 10  1  3 11  9 11  7  5  8  5  3  6  9 10  6  2  1  5  3  5  9 11  5\n[69769]  7  8 12  5 12  2  6 11  5  7  9  9 11  1  9 10  7 11  3  9  8 11  2 11\n[69793]  7 12 11  8 10  5  5 11  8  6  5  6  6  3  7  4 12  7  4  8  1  7  9  6\n[69817]  8 10  6  6  4 12 10  9  8  2 12  6 10  2  6  9  6  1  3  9  6 10  1 10\n[69841]  1  1  1  8  9  9  5  4  3  5  5  7  2  8  6  3  4  3 12 10  8  7  3  6\n[69865]  9  7  3  1 12  6  7  7  3  1  4  3  1  9  5 12  1 12 10  4  7  3 10  3\n[69889]  6  2  3  6 11  7  5  8  5  8  1  1  5  9 10  7  7  6  9  9  5  1  8  2\n[69913]  6  7  4  1  3  3  8 12  9  3 12  6 11  5 12  7 11  7  2 10  8  4  5  8\n[69937]  4 12  5  7  7  5 11  1 11 12  5  1  8  6 12  5  4  8  5  7 10 11  7 10\n[69961]  6  7 12  8  1  1  7  5  3  1 11  6  9  2  4  8  4  1 10  1  5  3  2  7\n[69985]  2  6  1 11 10 12  4  9 12  1 10  9  8  6  9  3  3  8  3 12  6  3  2  2\n[70009]  5  8  7  7  5  6  5  9  8  7  3  3 12 10 12  1 12  5  2  2  2  6 10  2\n[70033]  5  8 10  5  8  3 12  3 12 11 11 10  1  9  8  8  5 10  6  9  8  7  6  9\n[70057] 10 10  3 11  4  1  4  9  6 10  7 10  8  7 12  9  4  1  5  2  7  5  3  6\n[70081] 10  9  1 11 10  8  6  3 11  5  3 12  2  9  8  5  9  3  2 11  4  6  5  8\n[70105]  1  9 11  8  4  1  7  3  1  4 12 12  6 12 10  6  1 12 11 12 12 10  2  1\n[70129]  8 10  8  6  1  4 10 12 10  1  3  4  5  2  1  8  9  1  8  6  1  9  2  5\n[70153] 10  3  1  5 12  8 10  2  2  9  5  4  1  1  8  9 10 12  2  6  7  9 11  5\n[70177]  8  7  3  7 12 11  5 12  4  3  3  7  6 10  4  1  9  9 12  6  9  5  1  7\n[70201]  3  9 11  8 11  9  4  5  7 11 11 12  3 11  6  1  6 12  8  3  5  2 10  1\n[70225]  8  4 12  8  6  1 11 10  4  1  9  4  2  9  1  6  3  9 10  4  3  9  5 11\n[70249] 10  1  8 10  9  8 10  5  8  2  6 12  2 10  7  1  5  4 10  1 10  7  8 11\n[70273]  2  3  7  3  1  8  5 12  8  6  3  2  6  1  2  3  7  6 12  8 11  5  2  4\n[70297]  2  9  5 12  2  9  3  9  8 10 11  2  2  6  1 12  1  1  9  8 11  8 11  1\n[70321] 11 11  2 12  7  9  2  8  3  4  9  1  4  6  6  9  2  1  5 11  3  3  3  5\n[70345]  3  4  8  6  1  4  8  9  7 10  8  8  6  6 12  8  8  9  5 11  8 10  1  1\n[70369] 11 12  7  9  8  9  9 11  9  7  6 11  1  2 10  5  3  3  9  9  5  1  4  6\n[70393]  3  4  5  5 11  6  1  5  9  8 11  2 12 10  2 12  6  6 10  5  4  1  4  2\n[70417]  3  9  3  5  8  6  7  4  8  1  4  2 12 10  3  4  9 11  8 12  2  3  7  2\n[70441]  7  9 11  8  2 10  7  6  3  6  7 11  1  4  1  1  1  7  7  3  3 11  8  1\n[70465]  8 12 12 11 11  7  2  8  5  4  1 11  4  1  6  7  4  5  9  8  9  7  1  6\n[70489]  6  9 10  8 12  9  6  5  6  5 11 12  8 11 12 11 11  5  2  1  5 10 10  1\n[70513]  4  1  7  6  5  5  9  2 11 11  6  7  8  4  2  8  7  1  9  9  9  9  2  4\n[70537] 10  5  4  6 11  7  9 11  5 11  4  2  5 12 12 12  2 10  4 10  5 12  6  8\n[70561]  9  4  9 11  9 11 10 11  7 12  3 12 11 12 10 10  3  9  2 10  7  8 10 10\n[70585] 12 12  6  6 11  1 12  6  2  6  4  8  3  8  5  5  5  2  4 10  4  6  1  6\n[70609] 11 10 10  4  7  8  9  4  6  8  9  6  6  8  7  8  8  4  4 11 11  2  8  9\n[70633]  8 10  3 11 12  1 12 11  5  2  2 11 12  7  6  4  1  8  1  1  9  8 11  1\n[70657] 10 10  7 10  7  2  7  8  6  8  9  9  6  6  6 11  2  5  7  2  1  8 10  9\n[70681]  1  7 12 12 10 12  7  3  8  7  6  3  8  6  1  1  6 11  3  2  9  4  5 11\n[70705] 10  1  7  2 10  8  9  7  9  2  5  9 12  1  2  5 10  5  4  4 11  1 10 10\n[70729]  9  8  2  9  7  3  9  5  2 10  2  6  5  5  1 12  6  8 10  1  9  3  2  9\n[70753] 12 11  2 10 11  6 11 10  4  9 11  6  9  1  4  1 11 11  8  7  4  8  9  2\n[70777] 10 11  7  3  5  4  4  2  4  3 11  9 11 11  1 11  3  5  7  3 11 12  7 10\n[70801]  6  7 12  2  5  2 10  6  7  9  1  7  9  5  5 10  5  3  2  8  6 12  7  6\n[70825]  8  3 11 11  6  1  7 10 11  4 11 12  5 10  5  2  8  2 10  1  9  4  5  4\n[70849]  2  6  2  8  4  7  8  6  7  2 10  4  2  6 10  3 11  9 12  7  7  1  3  1\n[70873]  2 12  4 11  1  2 12  8  3  1  4  8  7 10  7  1  9  4  8  5  5  4  8  1\n[70897]  1  6  9 12  8 12  8 11  9 12  2  8  4  6  2  5  4  1  9 11  4 12  4  9\n[70921] 11  5  4  6  3  8  1  8  9  1  9  4  3  7 10  6  3  9 11  4  9  5  9  2\n[70945] 11  1  4  5  3  7  6  7  3 12  5  9  8 11 10  3  5  6  7  3  4  2  4  7\n[70969]  8  1  6  5 12 10 11  9 11  1  8  6  4  9 12  5  1  6  3  9 10  4  8  1\n[70993]  1  7 12  7  4  9 12  1 12 12  4 12  7  6  9 10 11  3  4  7 11  7 11  2\n[71017] 12  6  3  4 11  4  4  9 10 12  7  3 11  9  3  1  7 12  8  3  9  3 12  4\n[71041] 12  6  1 11  9  9  7  4  9 11  7  3 10  1  7 10  4 12  7  5  6  4  2  5\n[71065]  9  3 12 11  8 10  9  8  9  3  3  4  3  9  5  5  9  8  4  8  5  2  4 11\n[71089]  6 11  5  1  2  7  3 12  7  2 11 12  8  1  4  9  2  7 11 12  7  2  4  6\n[71113]  9  9  8  9 10  9  9 10  4  7  4 11  5  9 10  5  9  1  9 10  1  9  4 12\n[71137]  4  5  1  7  1 12  1  3  7  7  4 11  3  8  2  8  3  6 10  8  2  6  8  5\n[71161]  9  9  3  6  8  7  3  9  2  5  9  2  8  6  3  8  3 10 12  4  3 10  5  1\n[71185]  1  1  5  9  4 10 10  1  9  8  9  4 12 12  5  8 12  3  8  8 12  8  1  3\n[71209]  9  8  9  5  7  8  2  4  5  1  6  9  9 11  2  2  3  9 10 11  5  8  7  5\n[71233]  2  7 10  8  7  2  8  1  5  3 11  7  4  3  8  2  3  7  8 12  5  4  4  3\n[71257]  9 11  4  2  4  8  2  4  3  2  6  8  1  2  9  9  8  4  1  9 10 11  8  5\n[71281]  3  1 12  7  1  9 11  9 12  6  3 12 10  4 10  9  3 12  9  3 10  9 11  6\n[71305] 10  3  9  7  9  8 12  9  7 10 10  6  6 11 12  3  1  1  8  8  6  8  8  4\n[71329]  5  9  5  5 11  9 12 11  8  4  7 11 12  6  4  4  2  2  3  5  6 12 11  5\n[71353]  3  2  8  9  6  2  4  7  4  3  5 11  7  5 12 11 12  9  7  3  4  6  3 12\n[71377] 10 11  9  2 11  1  3  6 10 10  6 11  2  3  6  8 12  7  9  6  9  2  2  5\n[71401]  7  9  9  8 11  7  2  8  3  9  3  7  8  3  9  7  5  6  9  1 12  9  3  4\n[71425]  6  9  7  4  2  6  3  3  1  9  3  8 10  2 11  7  6  1  6  8  8  3  9 11\n[71449]  7  5  9  4 12 12 12  8  3  1  1  8 12  5  8  8 11  2  8  7  7  2 10 12\n[71473] 12 11 10  1 10  8  3 10  9 12  5 10 12  1  3  3  5  5  8 10  1  7 10  8\n[71497]  6 11  7  9 10  4  9  8 10  4 10  5  8  6  7 12  5  5  2 10  4  2  5 10\n[71521] 11  7 12  4 11 11 10  7  6 12  2  9  8  9  8  6 11  5  6 10  6 10  3  3\n[71545]  7  4 10  2  4 11 10 10  9 11  6  3  6  8  6 11  6  3 10  6  6  5  6 10\n[71569]  2  1  6  4  6  6 12  6  8  2 10  2  3  3  1  9  4  5  9  4  2  4 11 10\n[71593]  5 12  2  5  1 10  6  6 10  9  5 10  7  4  2  6  7  6  5 12  8 11 11  1\n[71617] 12 10 10  5  9 12  3 12  6  1 10  6  9  2  2  1  9 12  7  3 10  8  5 12\n[71641]  3  7  3  4  2  6 10  9  4 10  9  2 10 10 11  2 11  2 10  6 12  3 11 11\n[71665]  7  3  9 10 10  9  4  8  7  9  2  6  3  4  8  7  2  6  2 10  3  1  4 12\n[71689]  3  5  5 10  5 12  9  6  7 11  9  9 10 10  3 10  5  3  8  3  4 10  3  4\n[71713]  6 10  8  1  3  8 11  6  8  6  9  3  8  7  6  8  3  5  2  8  6  1  8 12\n[71737]  7  9  5  2  6  7  9  6  6 12 11  6  8 12  8 10  1  4  7  9  2 12 10  4\n[71761]  7  8  7  8  6  2  9  6  9  8 11  8  4 10  7  8  8  4 12  1  6 10  5  3\n[71785]  2  8 11  8  5  5  6  8  7  7 11 12  5  1  5  9  3  9  2  1  8  7  5  1\n[71809]  8  4 12  2  3  6  1 11  1  3 10  3  7  7  3 12  8  3 11  3 12 12  8  5\n[71833]  6  9  9  9 10  4 11  5 12  1  7  7 10  1  5  3 12 12  5  7  8 10  9  9\n[71857]  7  8  2  5 12  7  6  8  9  8  9  4  9 12  1  1  1  5  3  6  1  7  8  4\n[71881]  5  4  7 12  6 11  9  4  2  5 11  3  9 12  8  1  9  8  9 11 10 11  2  4\n[71905] 11 10  3  8  4  3  9 12  8  4  2  9  3  5  9  5  9  1  1  9  2  8  4 10\n[71929]  4  2  8  1 12 10  6  3  2 12  8  1  6  3  4  1 11  4  5  7  4  4  8 11\n[71953]  2  1  6  1 10 10  9 11  4  3  3  3  9  1  2  8  4 10  9  5  5  7  8 10\n[71977]  3  5  4  2  8  7  6  3  4  6  9 11 10 11  2  7  1 12 10  8  9  9  5  1\n[72001] 10  9  2  5  8  2  4  1  5 12 12  6  9  7  2  9  2  4  3  4  4  4  6 10\n[72025] 11  2  8  4  1  9  4  4  8  8  5  9  5  1 10 12  9  9  5  1  8  6  3  7\n[72049]  6  2  2  3  7 11  4 11 11  5  2 10  7 10 12  5  6  4 11  2 10  8  7  8\n[72073]  2  7  4  8 12  7 11  3  8  4  5  8  9  9  7  5  9  5  5 12  2  1  5 10\n[72097]  4  2 10  4 11  6  8  4 10 10  6  5  4  1  6  6  8 10  5 12  6 11 10 11\n[72121]  2  7  9 11  7  4  8  7  6 10  6  2 11  2 12 11  6  3  9  4 11  6  8  5\n[72145]  5  6  3  7  9  8  9  9  7  7  8  7 10  1 12  3  7  4  6  3  1  4  4  2\n[72169]  2 12  9  7  7  7  7 11  6  8  7 10 11  1  8 11  5  9  5  3 11  6 10  2\n[72193]  7  5  1  2  2  8  5  7  1  1  7  5  2  7  7 12 10 10  6  4 11  5  6  6\n[72217] 11  5  6 10  7  3  4  4  6  3  4  7  5  8  8  5 12  8  9 12  6  9  4  2\n[72241]  3  9  7  2  8  3  7 12  9  1  8  9  4  8 12 11  8  5  6  5  4  7  9  6\n[72265]  8  8  4  2  8  8  8  1  9  1  5  2  6  5  8  2  9 10  3  2  8 11  1  8\n[72289]  1  8  6  9  5  7  4  9 11  3  7 12  2  7 11  8  7  1  2  4 11  3 11  3\n[72313]  1  7  3 10  1  8 10 11  6 10  5  7  6 11  7  3  9 12  3 10 12  3  5  1\n[72337] 10  9  3 11 12  8 10  1  2 10 11  9 12  1  7  3 11  9  2 12  5 12  3  8\n[72361]  3  6 12 10  7  6  1  9  3  8 10  7  7  5  2 10 12  2  3  7  3  6  4  4\n[72385] 10  1 11  1  5  7  6  9  9 12  3 10 12  2  3  1  9  9  4  9  7  8  4 11\n[72409] 12  3  5  9 11  5 12  8  8 11  6  5  4  6 12  9  4 10  9  5  9 11  8  6\n[72433]  9  7  9  9  7  3 12  6 10  7 10  1 11  2  7 11  4  7  1  4  7  5  5 11\n[72457]  8 11 11 11  8  6  7  7 11  7  7 10 12 11  7  8 10 11  9  6  3 11  4 12\n[72481] 12 10  8  7 10  4  7  9 11 10  6 11  5 11 11  7  6  7  8  9  5  7  4  4\n[72505]  1  6  5  6  1  8  2  3 12  3  7  4  2  6  2  2  9  1  4  5  3 12 10  6\n[72529]  4 10  2  1  6  9  6  1  5 10  3  5  4  6  7  6  5  1 10  8 12  4 10  9\n[72553]  8  2  9  9  1 12  3 11  2  7 12  7  8  3  4  3  8  9  3  4  1  7 12  7\n[72577]  1  5 11 11  3 10  3  9 11  9 11  3  1 11  4  7 12  9  6  9 12 10 11  8\n[72601]  6  5  7  1  9 10  3  5  5  6  2 10 10  2 10 10  1  3 10 10  2  6  5  8\n[72625]  8  8  6  2  5  2  6 10  5 11 11  9  1  6  5  2 10  3  3  4  5 12  1  7\n[72649]  9  7  4  9  2  2  2  5  8  8  2  8  7  5 12  8  8  9  7  5  8  3  4  4\n[72673]  7  7  5  8  2  8  8 12  5 12  5  1  6 10  4 11  9 11  9  4  4  3  8  5\n[72697]  2  4  5  6  2  8  8  5  1 10  7  8  5  7  8  3  9  1  4  3  1  9  2  3\n[72721]  5  3  6  5  2  7 10 11 10 11 11 12 12 10 11  8 10  1  7  3  5  5 11  9\n[72745]  9  8 12 11  4  9 10  2  7  2  3 10  6  7  6  7  6  3 12  3  5  5 11  7\n[72769]  8  6  6  6  8  6  1  1  7  8  4  7 11 10 12 11 12 12 12 11 12 12 11 10\n[72793] 10 11  2  5  3  5  8 10  2  1  4  2  2  8  2  9  4  9  9  2  3  2  1 11\n[72817]  5  4  3 10  2 10  4 12 12  9  2  3  3 11  2  8  7  9  9 11  8  5 10  4\n[72841]  4 10  2  7  2  7  7  8  5  8  7  4  7  7  4  2  8  7  6  1  1 10  2  1\n[72865] 10  6  4  4 11  6  9  6  9  1  7  5  3  2  8  2  6  8  2  6  4  2  1  6\n[72889] 11  9  5  5  1  2  8 10 12  8  7  1  9  6  8  8  3  2  6  2  9  8  4  6\n[72913] 10  6  2  4  8  2  4 10  1 10  2  2  5  8  9  7  5 10  6 11 10 12 11  8\n[72937]  9 10 11 10  6 10 10  8 10 10  7 10 11  4 10 12  3  7  8  8 12 10  7 11\n[72961]  4  9  8 12  7  4  1  4  2  8  8  9  5 11  5  9  7  9  9 12 12  3 11  6\n[72985]  3  1  1  5  1 11  6  6  7  1  3  4  9  5  5  5 10 12 12 11  5 12  9 11\n[73009]  5 11 12 12 11 11 11 12  7  6 10 12  7  9  5  9 10  8 10 10 11  5  2  6\n[73033]  5 11 12  6  7 10 10  3 10  8  7  3  7  7  9 10  9  9 11  7 11  9  7  7\n[73057]  1  5  5  9  6  1 11  1  3  6  4  4  6  5  9  6 11  4 11  8  9 11  6 10\n[73081]  9  7  3  2  4  3  3  4  9 10 11 11 10 11  7  8  5  3  8  5 10 10 12  9\n[73105]  5 12  4  7 11  8  9  9  3  7 11  4  2 10 10 10  7 12 12  7  9 12  5 11\n[73129]  2 10  4  7  9 12  7 10  5 10  7  4  5 12 11 11 10 12 12 10 11 12 11 12\n[73153] 12 11 12  6 10 10 11 12 10 10 12  9 12 11  9 10  6  9  6  6  7  2  7  7\n[73177]  6  4  4 10  3  4  2  2  1  3  4  3 12  4  5 10  3  1  7  8  4  2  2  6\n[73201]  6  5  2 10  2  7  3  9  8 11 11  6  6  3  8  2  8  1  9  2  4  7  1  6\n[73225]  7  9  2 12 11 12  5 11  8  3  2  5  9  9  7  4  1 10  4  7  1  6  5  2\n[73249]  7  7  7  8  8  6  6  5 10  9  7  7  8  2  9  2  4  4 12  5  4  2  3  6\n[73273] 12  8  4  9  4  6  3  2 10 11  1  2  5  2  5 11  8  4  6  7  1  4  1  1\n[73297]  6  3 11  8  4  5 12  7  9  8  5  4  8  8  6  8  8  6 11  9  8 10  3  3\n[73321]  8  6 10  4  4  8 10  7 10 12  9  6  4  7  6 11  8 12  4  9  4 10  7  6\n[73345]  9  9  9  7 10  6  9  7 10  7  7  6 11 10 12 11 12 12 12 12 12  7 11  7\n[73369] 10 12  3 10  4  7  3  6  5  4  2  4  4  4 12  3  7  1  2  6  9  4  7  8\n[73393]  1  9 11 11 11 12  7  8  9  4  9  2  9  8  5 12 11 10 12  8  2 10 12 10\n[73417] 10 10 11 12 12 12 11  4  6  6  2  3  1  9  8  2  4  6  7  8  9  7  5  1\n[73441]  9 10 12  1  1  7  4  4  9  4  1  7  7  9  8  1  7  8  1  8  6  7  8  8\n[73465]  2  6  4  9  1  6 12 11  8 12  1  5  7  1  6  7  2  8  7  6  1  9  1  1\n[73489]  9  8  6 10  1  2  1  5  6  8  1  5  9  1  1  5  6  4  7  1  4  8  1  2\n[73513] 10  9  2  7 10  1  2  3  1  7  3 12  9  7  2  9  2  5  7  3  2  4  6  7\n[73537] 10 12 10  5  6  2  5  8  8 10  5 10 11  6  6  7  4  7  3  8  8  7  6  5\n[73561] 10  1  6  7  4  7  7  3  4  1  7  1  2  5  6  5  6  8  7 12 10  8  8 10\n[73585]  8  8  8  3  5  6  2  8  9  9  6  9  3  5 10  5 10 11  8  2  1  2  9  4\n[73609]  5  3 12 11 11 12  8 12 11 11 11 10 12 11 11 10  7  7 11  1 12 11  9  4\n[73633]  9  7 12  9  7  9  9  7 12  7 10  7  6  6  8  8 10  7  7  6  4 12  9  4\n[73657] 12 10  5 11  7  3 10  8 10  2 12 12 12 12 11  3  8  6  4  6  2  9  2  7\n[73681]  4 10  3  2  3  6  9  6  9  4  3  2  5  1  6  4  5  4  4  9  3  7  6  8\n[73705]  5  3  6  5  5  9  2  9  5  7  6  9  9  7 11 11  9  6  9  7  6  8 11 10\n[73729]  8 10  7  7  8  6 11  7  7  7 11  7  3  6  6 11  3  7  7 11  4 10  8 11\n[73753]  9  8 11 11  6 10 12  7  5  3 12 11  5 10  4  8  7  2  2  7  2  1  7  3\n[73777] 11  5  2  7 11  9  9  7  4  9  1  7  3  9  9 12  5  7  5  4 10  7 12  9\n[73801]  8  3  1  2  7  2  3  5  8  2  8 10  4  9  5  6 10  6  6  7  3  8  7  5\n[73825]  7  3  7  2  4  8  7  1  7  1  7  6  6  4  2  2  5  3  5  4  3  8  6 11\n[73849]  6  7  7  7 10  3  8  7  2 11  1  9  5  8  6  5  4  3  8  8  8 10 11  3\n[73873]  1  8  1  4  4  6  8  9  9 10  4  3  6  1  4  5  3  3  5  5  7  9  1  2\n[73897]  7  3  5  8  7  4  9  2  9  1  8  7  7  4 10 11  9  3  2  9  6  7  7  9\n[73921]  9 10  6  4 11  3  8  7  9  9  7  5  1  7  4  4  8  3  2  5  8  3 10  2\n[73945] 12  8  9 10  2  8  5  7  7 10  6  8 12 12  5 10  8  8  2  1  1  7  8  8\n[73969] 10  4  9  5  3 11  9  4  6  8 10  2  8  2 11  6  5 12  7  3  7  4  4  1\n[73993]  1  8  2  4  4  7  4 11  8  8  1 10  4  8  2  7  3  1  2  7  1  7  7  3\n[74017]  3  3  2 10  7 10  5  3  5  6 10  7  4  7  3  7  5  2  2  2  2  4  9  4\n[74041] 11  6 12  4  6  6  2  4  6  2  9  2  2  5  4  6  6  6 10  7  5  3  6  6\n[74065]  2  7 10  1  9  9  8 10  7  7 10  9 12  8 11 11 11 11 11  6  7 12 12  9\n[74089] 10 10  9 11  7  9 12  9  9  9 10  9 12  7 10 12 11 12 10 12  9 12 12 12\n[74113] 10 12 10 11 12 10 12 12 12  9 12  6 12 12 12  7 10  5  4  7  2  8 10  1\n[74137]  1  9  6  2  8 10  1  4  7  6 12  8  3  9  1  7  9  1  2  2  1  4  7  6\n[74161]  8  8  7 10  9  6  3  1  1  3  8  6 12 11  8  6  8  8  7  9  9  5  9 10\n[74185]  4  1 12 10  9  4  9 10  8  6  5  5  7 10  9 11 10 10 11  4  3 11 11  4\n[74209]  5  6  8  5  8 10  9  7  2 10  6  3  7  2  2  1  3  9  2 10  3  1 10  3\n[74233]  3  9  1  4 12  1  3  6  9  6  3  4  8  4  4 10 11  4  8  4  7  4  4  8\n[74257]  3  8  3  8  7  8  9 10  9  4 12 10 11  7 10 11 11  9 11 11 12  8 10  1\n[74281]  5  8  4  1 12  6  9  1  7  1  1  4  7 11  5  6  4  6  3 12  1 10  2  8\n[74305]  4  9  5  5  6 10 11  2  5  2  8  5  5  8  5 11  2  2  8  3  8  7  2  5\n[74329] 11  3  3  8  7  3 11  4  8  5 10  9  2  9 11 10  4 10  8  8  7  2 12  7\n[74353]  2  8  3  8  4  3  2 12  4  1  1  9  9  8  6  8  9  8  9  7  1  2 11  1\n[74377]  7 10  7  5  5 10  2  5  6  6  4  6 11  6 11  7  1  9  6  8  9  7 12  5\n[74401] 11  3  3 11  5  4  5 12 12 12  9 11 10 12 11 10  5  8  8  7  7  1  2  4\n[74425]  4  4  1  8  6 10  4  7  9  3  9  4  6  2  8  6  8  9  4 11  6  4 11  4\n[74449]  4  2  3  9  2 10  2  1  1  2 10  9  7  3  4  7  8  5 12  4  7 11  3  4\n[74473] 10  6  9  5  3  3  3 11  4  6  3  6  2  6  9  2  6  8  8  9  4 11  4  6\n[74497]  7  4  2 12  1 12  4  9  8 10  3  4  2  3  9  1  8  2  2  5 10  1 10  5\n[74521]  8  3 10  1  6  4  6  6  8  3  7  2 10  1 12  8 11 10 12 11  9  6 10 12\n[74545] 12 11 12  9 10  9 11 12 12 12  5  6 11  2  3 11  8  2  7  1  1  2  4  2\n[74569]  7  6  5  5  4  9  3  6  8  5  9  7  6  8  5  3  7  9  5  6  5  2  5  2\n[74593] 11  3 10  9  1 10  6 12  9  9  5  8  7  3 12 12  5  2  6  6 11 11  8  8\n[74617]  8  5  6  6 10  3 12  9  9  8 10  9 11  8  3  3  3  3  7  6 12 11 11 10\n[74641] 12  6  9  7  4  8  1  6  7  2 10  6  3  5  4  3 11  3  2  2  6  8  3  9\n[74665]  4  5  8  2  2  4  5  5  6  9  1  5  1  4  3  3  5  8 11  4  8  2  7 12\n[74689] 10  1  5  2  5 10  5  1 10  7  4  3 10  3 12  8  7  4  9  8 12  9  8  6\n[74713]  8 11  2  4  6  7  5  1  6  3  9  4  5  9  7  7  7 11  4  2  4  7  2  4\n[74737]  5 11  7  2  2 10  4 10 10  1 11  1  1  6  5  5  1  2  7  7  6  5  1  6\n[74761]  1  2  7  8  4  3 10  2  4  8  7  9  8  3  7  9  3  7  3  4  2  3  4  6\n[74785]  5 10  4  7  3  6  7  2  2 10  3  4  5  9  5 11  7  6  2  7 10 11  3 10\n[74809]  9  1  7 11 12  7 11  6  5  5  7  3  3  6  4 11 10  5 12 10 12 11  8 12\n[74833]  9 10 10 12 10 11 10 10 12 12 12 10 10  9  1  8  5 10 11  1  7 10  2  9\n[74857]  2 10  5  7  6  1  4 10  9  1 10 11  5  5  1  1  7  5  8  1  9  2 12  6\n[74881] 10  8  9  8  1  5  9  8  9  7  9  5  6  2  7  8  6 10  1  3  8  1  9  9\n[74905] 12  1  9  7  9  7  6  9  3  8  8 11  1  6 10  6  4  8  9  9  7 11  5  9\n[74929]  4  2  5 11 11 10 11  9 12 11  9 12 11 12 10 12  1  1 10  6  8 10  9  1\n[74953]  7 10  1 10  2 10  6  1 11  6  8  4  4  4  2  1  8  6  1 11  6  8  5  9\n[74977]  3  3  3  8  7  1  3  1 11 10 10  9  7 12  7  7  8  5  7  8 11  1  9 12\n[75001] 10  6  7  6 12  9  7  7  5  2 12  8  9 10 10 11  6 11  8  6 10 12  3  6\n[75025] 12  7  7 11  3 11  8  7  9  5  4  2  8  5  2  6  1  6  2  9 11  4  8  3\n[75049] 12 12  7  9  9  3  3  1 12  3  9  8 11 11 12 12 11 10 10 12 11 12  9 12\n[75073] 11 11 10 10 11 12  6 11 12  3  7  1  2  1 11  4  8  7  7  6  2  3  7  9\n[75097]  6  8  5  6  6  1  9  6  1  6 10 12  3  5  4  7 11 11  7 11  2  7  2 10\n[75121]  6  7  4  2  1  8  2  1  5  3 11  8  1  5  6  9  8  8  8  8  5  6  8 12\n[75145] 12  9  9  5  4  9  8  4  1  1  7  1  4  6  7  8  8  9  8  1  2  1  2  9\n[75169]  3  8  4  9  4  7  3 11  5  3  4  5  1  7  8  8  6 10  7  2  4  1  4  9\n[75193]  6  2  7 10  7  5  4 10  3  3  8  6  3 10  3  6  5  6  1  7 11 10  8 11\n[75217]  9  9 10 10  4  7 12 10  3  7  6  8 10  9 10 10 11 11  1  9 10  9 12 10\n[75241]  7  6  7  4 10 12  6 11  9 10 12  4  3 12 10 10  8  8 10 10  7  7  3  8\n[75265]  3  2  8 10  6  8  4  2  8  1  5  6  1 11  3  7  2 10 11 11  3  3  9  7\n[75289]  8  8 10 11  7  2  3  7  7  7  9  4  5  4  2  5  2  1  4  4  4 12 10 10\n[75313]  4  4  2  9  9  8  6  8  3  6 10  6  2  9  1  4  7  5  4  9  7  2 11  2\n[75337]  9  4 10  5  6  7  9  2  9  6  4  3  8  3  4  1  7  9  9  7  3  3 11  8\n[75361]  8  1  7  7  3  8  5  2  8  7  1  5 11  7  4  5  7  8  1  8  9  6  4  3\n[75385]  5  4  1  3  5  5 10  1  1  3  2  7  2  2  4  3  4  6 10  4  4  5  8  6\n[75409]  7  8 10  3  2  1  5  5  7  3  1  7  7  6  2  3  6  9  9  6  2  5  1  4\n[75433] 11  3  1  5  5 11 12  7  7  2  8  9  1  4 12  7 10  7 10  1  1  2 11  1\n[75457]  4  4  9  2  5  1 11  8  4  1  6  9 11  4 10  4 12  1 11  5  9  2  1  4\n[75481]  5 10 12  2  8  6  1  6  1  6 10  3  4  6  6 10  5  1  9  2  1 10 11  9\n[75505]  6  6  5  6  6  8 12  9  5  3  6  3  9  3  8  6  1  8  3  7 10  9  2  6\n[75529]  4  1 12 12 11 11 11 10 11 12 12 12 11  8  5 12 12 11 12 11 11 12 12 11\n[75553] 12 11 11 11 10 11  3  8  8  3  2  6  2 11  2  7  6  7  8 12  1  1  4  2\n[75577]  7  3  6  8  1  9  1  7  1  8  1  5  9 10  5 10  9  4  6  4  1  6  7  6\n[75601]  8  2  4  2  7 11  7  6  4  9  6  3  8  4  2  3 10  5  5  7  7  7  4  3\n[75625]  1  9  4 10  5 10  4  3  2  4  8  8  1 12 10  2  7 10 10  7  2  6  7  5\n[75649]  4  2  8  9  9  3 10 10  7 10  1  9  9 11  1  5  8  5  8  8  7  3  4  4\n[75673]  6  9  7  2  6  9  2 10 10  4  8  6  9  9 10 11  8  4  5  5  7  1  4 11\n[75697]  5  7  5  2 10  5  8  7  9  8  2  9  3  2  7  3  4  7 10  7  5  4 11  4\n[75721]  4  7  2  2  6  2 12  6  4  8  3  6  8  5  4  4  1  6  2  6  9  2  1  5\n[75745]  7  8  7  6  7 10  1  6  1  3  7  2  4  5 11  8  5  4  8  6  6  7  5  8\n[75769]  1 12  8 10  9  4  8  8 12 12 12 10  9  6  8 10 11 11 12 10 12 11 12  9\n[75793] 10 12 12 12 10  4 12  6  8  3  4  6  3  1  4  4 10  2  9  8  8  2  5  6\n[75817]  4  3  6  6  3  2  4  4  7 11 10  3  7  6 10 12  5 10  5 11  7  1  3 10\n[75841]  3  9  8  7  7  6  6  3  7  7  6  2  6  9  9  1  4  2  6  8  2  9  9  6\n[75865]  1  2  9  5  3  5  2  7  5  7  6  6 10  2  7  2  3  4  8  4  8  1 12  4\n[75889]  6  7 10  6  4  2  6  5 11  1 10  8  8 10  8  9  5  9  8  4  4  5  1  7\n[75913]  1  6  8 10  5  6  5  6  7  5  5  8  5 10  8  6  3  5  3  3  3  3  9  4\n[75937]  5  7  8  3  6  8  2  2  6  3  6  5 12  7  5  8 12  2  8  1  2  8  4  3\n[75961]  6  2 11  4 10  1  7 12 11  7  1  1  8  2 12 12  7  7  4 10  4  3  9  6\n[75985]  8  3  8  5  2  7  7  8  8 12  8  8  2 10  8 10  9  2  4  6 11  8  6  3\n[76009]  1  6  4  5  1  8  3 10  9  3  9  8  9 12  9 11  5 11  9  3  8 11  4  7\n[76033]  2  3  7  8  3  8  5  7 10  1  8  4  1  5  8  8  8 10  1  6  5  1  4 11\n[76057] 11  7  4  1  4  9  7 10  8  5  4  5  3  8  3  2  3  1  6 10  2  5  6  8\n[76081]  5  2  1  2  1  8  3  4  3  6  4 12  5  2  9  9  8  2  7  2  5  1  8  8\n[76105]  6  9  6  9  3 12  9 12 11  9 11 11 11 10  9  8  1  6  9 12  4  9 10  4\n[76129]  5  3  8  6  7  9  2  8 11  7  4  3  3  8 10  5  7  3  9  3  7  6  9  3\n[76153]  5  7  5  4  9  1 12  7  5 12  9 10 11 10 11 12 12 11  8 10 12  6  8  1\n[76177]  6 10  3  4  2  8  3  7  3  6  8  7  8  4  7  5  1  6  1  4  2  7  5  7\n[76201]  4  6  8 12  8  5  3  6  8  4  5 12  3  7  8  1  8  4  3  4 11 10 10  1\n[76225] 10  6  2  3  1  8  4  7  2  4  8  6  7  1 10  3  7  7  9  8 10  3  7  1\n[76249]  3 10  4  9 11  3  9  8  7  2 12 12  5  8  1  5  3  4 11  9  7  9  5  2\n[76273]  5  2  2  8 10  7  9  1  8  8  4  4  9  5  7  8  2  2  5  6  3 11  4  8\n[76297]  2  3  8  7  8  6  6  3  1  6  3  9  7  3  8  7  4  7 12  4  6  9 11  8\n[76321]  5  6  6  2  3  9  9  2 11  9  6 10 11  5  6  1  7  9  1  6  5  6  5  1\n[76345] 10  1 12  7  9  5 10 11 10  9 12 10  7 11 11  4 12 11 11 11 11 11 10 12\n[76369] 11  1  2  3 10  6  5  1  9  1  8  6  1  5  8 11  1  8  1  7  5 12 12  6\n[76393]  6  3  5  4  9  3  2  6 12  8  3  5  2  8  7  2  6  5  5 11  5 11  8  1\n[76417]  2 11  7 10 11  5 10  1  8  6  7 12 10  7  8 12  2  6  4  4  3  8  5  9\n[76441]  7  8  3  4  8 10  4 10  4  7 10  6  8  4 12  8  2 10  2  7  6  5  8  9\n[76465]  3  6  8  1  1  3  2 11  8  7  6  2 11 10  1  2  4  4  9  6  7  3  2  2\n[76489]  1  3  6  2  5  4  2  3  9  9  1  6  3 11 12 10 12 12 10  6  5  8  6 11\n[76513]  4  7  5  9  8  7  1  5  7 11 11  7  7  8  1 11 10 12  2  6 12  1  2  1\n[76537]  2  2  2 12  6  6  8  7 10  7  9  6  9  5  5 12  3 11  3 11 11 11  8 12\n[76561] 12 12 11 11 12 11 10  7  9  6 10  4  8  6  7 11 11  4  7  9  7  1  3  4\n[76585]  9 10  4 10  3  1 11  2  3  6  1 11  3  3  5  1  4  5  4  8  4  4 11  8\n[76609]  8  3  6  2 10  4  4  1  4 11  7  4  7  9 12  7  5  8  3  6  1  3  7  5\n[76633]  5  4  6  8  7  8 10  1  1  3 10  3  5  2  8  5  1 11 12  1  4  7  1  2\n[76657]  7  4  8 11 12  4 11 11 10  1  8  8  9  1  3 10  9  4  8  3 10  7  2  9\n[76681]  7  2 11  3  9  9  9  3  2  4  5  5  2 10  4  4  7  8  9  5  3  6  7  3\n[76705]  6  7  5  7  1  2  4 10  4  2  8  8  5  4  4  8 11  5  4  6 10  5  4  3\n[76729]  1  5  6  4  3  8  7  4 11  6  2  1  3  4 10  2 10  9  5 12  6  6  2  3\n[76753]  1  3  3  2  2  2  5  5 10  4  3  8 10  1 10 11  3  8  3  5  5  9  1 12\n[76777]  4  5  1 11  5  9  7 10  9 10  3 10  9 12  8  5  6  5 10 12  4  8  8  7\n[76801]  9  6  9  2  1  9  8  7  1  4  9  9 12  9  5  5 11  1  4  9  2  8  8  9\n[76825]  8 11  8  5 11 12  4  6  7  3  5  9  4 12  6  8  5 10 12 11 12 10  8  9\n[76849] 11  4 10 10  6  9  5  6  4 10  8  8  7 12  5  5 10  4  8  5 11  9 10 12\n[76873] 10 12 12 10  9 10 12 11  8 11 10 10 12  9  9  9 12  9 12 12 11 10  9  9\n[76897]  9 11 12 12 11  3 10  5 12 11 12  9 10 12 10 10  9  9  9 10 12 10 12 11\n[76921] 11 12 11  9 11 10 12 11 10 10  7 10 12 12 11 10 11 12 11 11  9 10  9  9\n[76945] 11 12 11 10 11 12 11 11 11 12 10 11 11 12 12  9 11 10 12 12 12 10 12 11\n[76969]  7 11  8 10 12 10 11 10  9 10 11  9 11 12  9 12 11 10  9 11 11 11 11 11\n[76993]  9 11  3  8 11  8 10 11 10 10 11  9 12 12 11 10  6 10 10 12 12 10 12 10\n[77017] 10 12 12 11 11  9  8 11 12 10 12 12 12 11 12 11 11 11 11 12 12 11 12 10\n[77041] 10  8  5 11 10 12  6  8 11 10 11  9  9  2 10 11 12  9 10 11 10 10 10  9\n[77065] 10 12  9  9 12 11  9  5  9  9 12 12 12 11 12  5 12 11 10 12 10 12 12 12\n[77089]  7 10 11 10 12 11  9 11  6  9 10 12 12 10 12  6  3 12 12 11 12  3  1  2\n[77113]  1 11 11  2 12  8  9  7  6  3  8  7  9  5  8  8  2  4  8  8  8  3 10  9\n[77137]  6 12  9  5  6  5 10  7  8  1  5  2  2  8  1  3  1  2  8  5  8  7  7  6\n[77161]  9  3  9 10  7  6  8  4  2  4  3 10  7  2  7  1  5  7  7  5  4  3  3  7\n[77185] 11  1  7 10  7  3  9  8 12 12 12 11 12 11 11  6 11  9 10  6  7  5  6  5\n[77209] 11  6  2  6  5  6 11  8 10  7 12 11 10  8  1 10  2 10  8  8  9  7  2 10\n[77233]  8  5  3 10 11  9  8 10  8  9  5 11  8 11 11 12  7  9  7  7 11  6 10  8\n[77257] 11  9 12 11 11  4  7  9  5 11  8  9  4 10 12  9  7 11 10 12 10  9  8  7\n[77281]  6  9  5 11  7 12 11  7  6  1  8  1  7 10 11 11 12 11  9 11 12 12 12 11\n[77305] 11 11  9 10  9 11 12 10 10 11  7  5  4  5  2  9  1  2  3  6  7  6  2  7\n[77329]  9  8  7  1  3  9  6  3 11  4  7 12 10  2  5  8  5  7 10 12 10  6  4  4\n[77353]  8  4  6  4  3  9  1  1  9  3  5 11 10  2 12  4 10  8  9  6  1  5  1  7\n[77377]  3  3  3  7  4  6  6  4  5  8  9  8  1  9  6  5  3  5 11  8 10 10  7  3\n[77401]  3  4  8  1 12 12  9 10 12 12  9 10  7 10 10 10 10 12 11 12 11 10 11 12\n[77425] 11 12  9 12 12 10 12 12  3  8  6  7  4  8  9  7  7  9  5  5  8  8 10  1\n[77449]  7  2  2  5  8  1  2  2  8  6  8  3  5  2  9 10  9  1  1  4  6  8  1  7\n[77473]  6  2 11  9  4  9  6  2  7  9 12  7  9  4  3  8  3  7  7  7  8  3 12  2\n[77497] 10  7  4  4  4  5  3  7  8  6 10  9 11  4  1  6  5  9  1  4  9  2  4 10\n[77521]  2  4  9  6  3  8  1  3  8 12  5  1  5  1 12  9 11  8  5  6  7  4  8  5\n[77545]  9  1  3  5  7  4  9  5  8  9  4  4  6  2  2  3  5  2  6 10  2  5  8  9\n[77569]  9 11  4  2  3  8  1  4  9  5  7  1  4  3  6  2  1  3  7  5 11  3  1  7\n[77593]  9  3  8  5  8  4  6 10  3  9  8  7 11  5  1  8  7  7  8  4  8  7  1  6\n[77617]  9 12  7  6  9  4  8  9  9  5 12 10  8  4  6  4  7  7  5 10  3 10  4  4\n[77641]  8  4  1 12  6  9  5  6  8  3 10  1  7  4  1  1  4  2  4  2  1  6  7  9\n[77665]  3  2  7  6  8  6 11  5  9  5  7  1  8 10  2  1  5  2  2  4 11 11  9  5\n[77689] 12 11 12 10 12 10  9 10 11 12 11 12 11 11 12 12  3  1 11  3  8  7 10  6\n[77713]  8  4 11  9  1  8  1  1  3  3  4  4 12  5  1  4  3  7  8  3  8 11 10  5\n[77737]  4  5  9  4  9  3 12 12  2 12  2 10 12  1  4 10  6 12  1 10 10  8 10  1\n[77761] 12  4 10  9 10  9  9  9  5  8  1  4  4  8  9  6  5  5 10 11  2  6 11  1\n[77785] 10  4  8  6  2 10  8  1  7 12 12 11 12 11 12  7 11 12  1 12  7 11 12 10\n[77809] 12 11 10  7  8  1  9 10  7  6 10 12 10  7  4 10 10 12 10  9  8 10 11 11\n[77833] 12  8 10 11 12  9 11  5  5  2  2 12  9  1 10 10  3 10  4  3  9  2  2  4\n[77857] 10  2 11  2  3 12  4 10  7  2  5 10 12  8  6  3  3  7  7  9  4  2  7 10\n[77881]  1  2  8  7  7  3  5  4  9  1  5  9  2  8  8  6  7  7  6  4  7  3 12  1\n[77905]  7  6  6  1  8  5  7  7  2 12 10  1  2  6  7  2  7  3  4  3  9  7  8  2\n[77929]  8  2  5  5  5  7  8  8  4  1  8  8  1  7  8  9  8  8  2  1  1  3  5  5\n[77953]  2  9 11  3  2  8  8  8 12 10  1  5  5  8  6  7  7  6 10  1  4 10  7  6\n[77977]  2  6  3  3  5  2  2  2  3  6  4  6 10  5  4  6 10  3  2  6  5  9  9  9\n[78001] 10 10  1  1  4 11  9  9 10  5  1 10  8  6  1  4  8  2  3  3 11  7  7  7\n[78025]  7  3  5 10  2  9  7 11  9  6  2  2  2  2  5  1  7  4  3  9  5  3  7  4\n[78049]  4  7  8 12  5  8  4  9  3  3  3  6  9  4  7  9  8  8  7  8  8  7 10  9\n[78073] 12  7  8  6  7 12 10  3  6  8  9  9  5  1  8 12  7 11  8  7 10 12  8  4\n[78097] 10  6  7 10  1  4  1  4  5 10  3  6  7  6  1  5  9  3  6  9 10  7  1  3\n[78121]  5  4  2  5  5 10  4  9  8  4  8 11 10  5  8  6  8  7  2  1  5  1  3  9\n[78145] 12 10 10 11  8 12 12 10 12 10 11 11  7  8 12 12  9  8 11  8  8  2  5  1\n[78169]  6  7  8  1  6 12 10 11  2  3 10  4  6  1  8  2 10  6 10 12  9  1  6  4\n[78193]  4  5  2 12  4 11 10  6  1  6  9  9  2  5  7 12  8  4  8 10 11  8  4 10\n[78217] 10 10  5  1  7  1  8  6  7  5  4  7 11  3  6 10  8  1  1 11 12  5  6  6\n[78241]  4  6  6  7  9  8  1  1  1  7  1  6  6  3  6  1  2  4  2  6 10  2  9  1\n[78265]  5 10  3  1  3  7  3  3  4  7  8  7  1  8  7  1  8  1  6 12  3  3  7  7\n[78289]  8  6  1  6  3  5 12  2 11  6 12  5  2 11  7  1  1  5  7  8  4 10  1  6\n[78313]  9  4  8  9  2  7  9  6  7  9 11  5  4 10  7  1  1  9  3 12  6  3 11  6\n[78337]  2  7  3  9 10  5  9  7  6 11  4  3  5  9  3  7  9  2  5  1  1  3  5  9\n[78361]  5  3  5  5  4 12 12 10 10 11 10 12  6  2 11 12 12 11  6 12 11 10 11 11\n[78385] 10 12 12 10 11 11 12  8 12 12 12 12 12 10 12 11  5  5  1  1  1  2 11 10\n[78409]  8  5  6  5  7  1  7 11  1  1  5  3  7  1  8  3  6  6  1  3  6  1  6  6\n[78433]  2  8  9  4  7  8  5  8  7 11  9  6  6 11  4 12  8  5 10  7  5  5  7  1\n[78457]  2 11 11  2  2  3 10  4  8  4  1  5  4  7  8  6  1  8  6  1  3  5 12  7\n[78481]  7  2 10  3 10  7  1 12 10 11  9 11 11 12 11 12 10  5 11 12 11 12 12 11\n[78505] 12 10 11 10 11 12  9 10 12  9  3 10  8  5  7 10  5  9 11 10  8 11  7  8\n[78529] 11  9 12 10 11  4  9  9 10  7  3  5  8  5 11 10 10 12 11  7 12 12 12 12\n[78553]  8  5  6 12  9  8 10 10  2  3  4  5  3  2  4  4  6  3  8 10  3  9  2  5\n[78577] 10  3  7  1  6  7  4  4 11  1 12 11  8  1  7  3  5  9  6  4  5  2  3  9\n[78601]  6  6  6  3 10  5  3  9  3  4  9  7 12 10  1  6  4  2  9  1 10  5  9  9\n[78625]  1  4  6  8  9  6  6  9 10  1  7  3  4  2  9  2  7  5 11 10  2  9  8  5\n[78649] 11 11  8  5  6  3  4  1  4  7  6  2 10  6 10  2 11  1  3  6  9  8  8  1\n[78673]  8  7  7  2  3  8  8 11  8  2  5  2  5 11  3  7  3  3  8  8  4 10 12 12\n[78697] 11 12 11 11 10 12 10  9 11 11 12 11 11 11 12 10 10  7 10 12  1  7  4 11\n[78721] 12 12 10 10 12 10  2 12  9 10  4 10 12 11  1  1 11 12  5 11 12 11 12  9\n[78745]  6  6 10 10  9  7  9 12 10  8 10  9 12  8  6  6 12  6 12  7 11  4 11  6\n[78769]  3 11  9  9  1  7 12 10  9  8  8  9  2  8  8  3  7 10  8 10  5  3  4  6\n[78793]  3 10  5  1  4  9  9  7 10  6  7  2  1 11  1  3  6  3  4  6  1  3  3  8\n[78817]  2  2  8  1  6  6  4  6  2  6  2  4  1  6  2  2 10  5  6  8  5  4  8  1\n[78841]  5  8  9  5  4  6 10  8 12  9  8  2  1  6  4  2  8  3  1  2  6  1  4  8\n[78865]  4  4 12  1  3  3  5  6  1  3 10  3  6 11  1  5 11  4 11  2  9  3  9 10\n[78889] 11 10  5  3  6 12  3  5  6  7  9  1  7  1  1 10 11 11  2 11 11 11 11  7\n[78913] 10 10 11 10 10 12  4  3  1  9  1 10 12  8 12  6  7  4  2  9  8 10  1  2\n[78937]  2 10  4  7  5  8  4 12  9  7 12  8 12  3  4  6 10  2 12  8  1 11  8 11\n[78961]  2 10  6 11  7  9  6  3  8  5  4 12  5  2 10  7  8  2  1  6  3  7  5  1\n[78985]  9  6  3  7  8  6  3  6  1  2  4  3  6  2  4  6  8  6  3  6  3  9  4  6\n[79009]  4  7  1  5  8  2 10  4 12  1  3  5  2  6 10 10  3 11  6 11 12  9 11  3\n[79033] 11  2  2  1 12  8  6  9 12 11  2  5  3  8  6  4  1  7  7  6  8  6  6  2\n[79057]  4  7  5  4  3  1  1  4  4  7  4  9  1  1  5  3  6  8  2  7 12  4  3 11\n[79081] 11  1  3  9  7  7  8  7  2  9 10  7  4  8  3  3 11  7 12 11  8  4 11  5\n[79105]  1 11  8 12 12  4  8 10 10  9  5  7 11  3  1 12  6 10  2  9  2  2 10  6\n[79129] 12  3 10  8  9  7  8  5  7  3  8  6 11 11 12  1  1  6 11  7  9  9  7  4\n[79153]  3 12  4 11  7 12  5  7 11  5  1 11  1  8  3  5 10  5 12  1 12  9  4  3\n[79177]  2 10  6  3  8  2 11  6 11  9 11  2  5  3  2  8  1  9  4  7  4  9  3  5\n[79201]  3  1 11  6 10  2 11  6 10  9 12  2 12  1  1  6  2  6  7  2 10 11 11 12\n[79225]  4  6 10  3  1 12  1 10  5  8  3 12 11  8  4 11  5  7 10  7  6 11 11  1\n[79249]  9 10  1  4  1 10  8  3 10 12  8 11 10  9  6 12  9  5 12  6  9  8 11  8\n[79273]  6  9  8  8  9  1 11  1  1  2  7  6  2 12 11  8  9  1  5  2  3  7  7  6\n[79297]  2  4  6  6  1  4  4  9  7  4  8  6  2  7  3  5  1  7  5  2  6  1  8  3\n[79321]  4  7  4  8  3  5  6  3 12 10  3  2  4  9  2 11  8  3  8  3  2  8  5  9\n[79345]  3 12 11  8 12  9  9 10  9 11  3 10  9 10  3 11  9 12 12  1 10 12  9 11\n[79369] 12 10  8  3 12  9 11 10 12 10  6  6  4  4  4  7 10  2  9  4 11  5  4 11\n[79393]  6  2  7  8 11  8  7  9  4 12 11  5  7  6  3  3  5  4  3  7  2  7  1  5\n[79417]  8  6  5  4  1  2  5  4  3  9  1  2  8  8  9 10 12  7  6  7 11  6 12  9\n[79441]  3  7  3  1 11  5 10  5 12  6 11  1  6  6  1  6  7 10  1  7  8  5  4  5\n[79465]  3  6  2  6  3  1  3  6  8  3  6  4  8  8  7  1  3  1  7  7  7  5  5  5\n[79489]  2  3  5  5  2  7  1  1  1  1  2  1  1  2  1  5  5  5  3  2  8  2  5  4\n[79513]  1  2  1  3  1  2  1  4  1  4  8  6  3  1  3  1  1  1  5  6  8  7  6  3\n[79537]  6  2  4  7  9  8  3  6  3  7  1  2  8  3  1  3  5  5  3  3  7  7  2  6\n[79561]  2  5  7  5  5  1 12  9 11  3  5  7  6  9  9  7  4 10  1  9  3 11 10 11\n[79585]  7  1 10 10 11 10 12  2  3  5  5 12  7  1  5 12 11  5  6 10  5  4  6 11\n[79609] 12  8  6  5 12  6  4 11 10 12  4  5 12  7  5  2  9 12 12 10 10 10  8  9\n[79633] 11  4  5  2  2 12  9  8  8  6 12  3 11  1 10 11  8  1  3  9  3  8  8  1\n[79657] 12  8  1 11  1 11  9  8  3  8  8  3  9  8  2 11  5 11  9 12 12  9  9 12\n[79681]  4 10  5  2 11  9  7  5  6 11 10 12  2 11  8  1  7  7  1 10 11  2  9 11\n[79705]  8  7 11 11  9 11  5 11  5  4 10  4  7 11  8 11  4  4  1  2 11 11 12 10\n[79729]  3 12  3  7 11  8  5  3  2 10  7 11  2 11  9  8  6  7  5  5  2  3  8 10\n[79753]  7 10  7  7 11 12  4  5  8  7 10  6 12  1  5  9 11  9 11  3  2  9 11  9\n[79777] 12  9  9 10 12  3  9  9 12  6  1  5 10 12  9 10 12  9  6  8 10  2  7  2\n[79801]  7  2  6  7  2  4  4  7  1  6  9  5  2  2  2  7  2  2  4  3  1  4  8  1\n[79825]  8  6  8  8  4  6  2  1  4 10  3 12  3  9 12  4 12  3  9  6  6  6 12 12\n[79849] 12  4 10  2  9 11  6 12  6 11 12 12  8  8  8  6  5  5  7  3 12  3  6  7\n[79873]  2  5 10  5  5  5 10  5  6 12  1  1 11  2  4 12  3 10  3  3  5  7  3  5\n[79897]  9  1  8  6 10 12 11 11 11 10  6 12  4  3 11  6  7  3  4  2  9  2  9  5\n[79921]  4  6  8  6  1  7  2  7  8  9  3  4  1  6  1  1  4  4  7  3  8  3  5  9\n[79945]  3  8  6  6  8  3  8  8  8  3  3  1  2  5  8  7  1  1  1  3  7  7  3  3\n[79969]  2  7  2  7  8  5  4  8  8  5  8  5  7  7  3 11  9  7 12  6 11  8  7  9\n[79993]  1  9 11 11  1  3  3  5  8  4 10  5 11  1  4 12  2  6  5  1  3  2  4 11\n[80017]  9 12  1 11  8  1  6  5  1  3  7  8  5 11  4  6 11  6  3  1  9  2  3  3\n[80041] 12  7  9  9  7 10 10  1  2  8  4 11  6  2  7  4  2 11  3  7 12  9  9  5\n[80065]  3  4 11  7  8  4  7  3  1  8  8  4  3  3  5  2  8  6  6  1  1  8  6  6\n[80089]  6  8  2  4  7  6  6  4  5  8  4  8  3  8 10 11  9  1  3  4  2  8 12 12\n[80113]  6 10  5  9  5 11  8  4  3 12  8 11 10  4 11 10 12  8  5 12  3  3  9  7\n[80137] 11  2  8 12  5  3  6  8  2 10  1 10  2  9 11  5  6 11 10  1 10  2  3  9\n[80161] 11  5  7 11  2  1  8 11  6  4 10 12  1  4 12  7  3 11  7 10 12  8  4  8\n[80185]  4  2  4  1  8 10 12  8  5 10 12  1  5 12  7  3  8  7  4  7 11 12  4  7\n[80209]  2  4 11  1  7 11  6  5  9 10  2 10 10 10  7  8  7 10  9  4  3  5 11  6\n[80233]  8  8  6  3  2  6  7  2  4  8  1  1  7  8  1  8  8  6  7  8  8  4  4  2\n[80257]  5  3  2  7  4  6  8  8  4  5  6  1  9  1 12  4  1 10  2  5 11 11 11  3\n[80281]  8 11  2  1  3 12  3  7  7  6 12  6  7  4  3  6  8  4 10  9  7  4  7 10\n[80305]  9  5  8  2  1  7  5  2  8 10  5  9 10  8  5  6 12  9 12 10  1  5 12  3\n[80329] 12 10 12  4  4 10 12  5 11  9  7  7 11 10 10  9 10 12  3  4  4 11  2  2\n[80353] 10 10  6  6  3  4 12  7 10  3  4  4  8  1 12  9  9  6  5  4  5  3  9  6\n[80377]  9  1 11  5  7  7  2  4  3  3  3 11 11  2  4  8  6 10  4 10 11 11  1 10\n[80401]  4  4  9  5 10 11 10  9 11 10  5  6  6 12  1 12 12  2  6 11  3 10 12  5\n[80425]  1  6  7  6  5  5 11  9  8 11 10  4  7 10 10 12 10 11  7  5  3  1  6 11\n[80449]  7  1 12  6  8  5  7 10  9  2 11  9  4 10  6  4  1  4  7  8 11  5 12  9\n[80473] 10  2  4  8  6  8  1  7 10  5 10  8  9  8  3  7  5  7  7  1 10  7 10 10\n[80497]  6  4  9  4  8  9  9 10 11 11  3  5 10  6  2  9  8  6  8 12  4  6  8 10\n[80521]  1  7  4  9  1  2  3  4  1  3  8  4  9  1 12  8  9  8  4  7  8 12  7  3\n[80545]  6 10 11 12 10  7  4 11  4  7  5  9 11  8 11 10 12 10 11 12 11  6  3  2\n[80569] 10  3 10 10 12  1 12  8  5 11  6  2  2  7 10 12  2 12  6 11  6  6  7  2\n[80593]  2  4  5  8  8 10  5 12  8  6  2 10 10  6  5 12  8 12  2  9 11  1  6  9\n[80617] 12  9  2  2  3  6  8  7  5  3  7  2  4  8  1  6  9 11  8 10 11 12  5  4\n[80641] 12  1  3  5 12  9  2  4  4  1  7  8  7  8  5  9  7  2  2  1  3  1  7  7\n[80665]  6  8  6  3  5  1  6  4  3  6  6  2  6  5  8  3  1  3  4  7  6  6  2 10\n[80689] 12  8  3  8  4  7  2  3  9 10  6 11 10 11 11  1  3 11  4  3 12 11  8  7\n[80713] 11  8  8  5  9  2 10  4  9  3  7  9  3  3  8 11  6  5  4  5  9 11 12  9\n[80737]  2 12  8  4  9 10  6  1 12  2  3  7  9  1 11  7 10  3  6  9  1  6  8 11\n[80761]  6  9  1  6  7  1  8 11  4  4 10 11 12 10  8 10 11  5  5  9 10  9 11  1\n[80785]  1  7  2  6  9  9  6  7  8  9  1  4  5  8  3  3 10 12 10 12  7  1 11 10\n[80809] 12  4  6  7 10 10  1  4  9  4  7  6  6  6  8  8  7 11 11 11 11 10 11  1\n[80833] 10  8 11 12  3 10 12  4 11  8  6 10  7  2  7  8  9  3  2 11  1  4 11 11\n[80857]  6  9 10  7 11  6  6 11  3  4  8 10  2  6 12  9  5  5 10 11 10 11  7  7\n[80881]  3  4 10  5 12  5  8  2 10  2  5  5  5  5  8  7  1  3  5  4  2  8  6  4\n[80905]  8  1 12  1  7  7 11  9  6  3  4  7  8  6  9 10 12 12  9  5  1  9 10  3\n[80929] 11  9  9 12  9  4  8  4  6 10  4 12  7  6  6  9 10  5  1 10 10 12  9  6\n[80953]  3  1  4  6  5  6  4  1  1  5  8  2  6  3  8  6  4  8  3  1  4  7  6  6\n[80977]  4  7  2  8  3  1  1  4  8  9  5  7  1  9  6  3 10  3  5  4  5  3  9  2\n[81001] 11  9  2  7  7 11  8  4 11 12  9  7  4 11  7  3  7  6 12  9  3 12  4  4\n[81025]  5  8  2 10  7 12  9  1  4  6  8 11  2  7  5  3  4  7 10  6  3 12  9  6\n[81049]  2 10 10  6  4  6  9  1  4  5 10 10 11  1  7 12  1 12  1  1 11  7 12  4\n[81073] 10  9  4 12  8  2  3  9  4 12 12  3 10  8 11  7  6  9  6  4  9 10 11  9\n[81097]  4  8 11  8  9  1  4 10  2  9  5  9  6  7  5  1  7 12  1  8 11 10  2  4\n[81121]  8  4  7  8  6  9 12  6  7 11  4  9  2 11  8 11  1  1  4  6  3  6 10  9\n[81145]  5 11 10 11  8  5  7  5  9  6  1  7  6  9 11  1 10  9  3  1 10  8 11  5\n[81169]  9 12  1  1 10  4  6  9 10  7  1  7  9  1 10  9  5  5 12 12  2  9  2 10\n[81193]  5  1  8 11  1  9  9 10  4  4 10  1  3 11  8  8 12  2  2  9  1  2  9  6\n[81217]  5 11  2 12 12  2  3  8 10  8  4 11 11 10  7  6  5 12 11  5  8 12 10  9\n[81241]  1  3  3  2 10 11  5  2  7 11  7  7  3  7  8  7 10  4  5  2 11  9 11  6\n[81265]  5  3 10  9 11  9  8  4 12  1  6 10  2  4  5 11  2 12  3  8  5  5 12 10\n[81289]  1  8  7  1  9  9 11 10  9  1  9  1  5 11  1  3 10 11 10 11 10 10  3  5\n[81313]  3  9  5 10 12  3  5  9  8  4 12  9  7 12 12  4 11  2  7  9 10  5  5  9\n[81337] 10 12  8  3 11 12  3  6 12 10  4 11 10 11  5 12  9  7  6 11  1  2  4  5\n[81361]  6 11 11  2  5 12 11  3  8  4 12  9  1 11  5 11  9  2  9  2  6  4  8  3\n[81385]  7  2  2 10 12  7  9  7  6  9  6  6  7  8 11 11  3  8 10  4  6  9  5  9\n[81409]  2 10  8  5  4  5 10  2 12  8  2  1 10 11  1  4  7  5  3  9 10  7 12  8\n[81433]  1  9  8  3 12  5  4 10  8  8 10  1  6  5  4  4  9  3  3  2 10  3  6  1\n[81457] 10 10 11  8 11  4  5  7  5 10 10  5  5  1 10  6  3  6 10 12  8 11  2  2\n[81481]  8  9 10  4  1  9  3 10  5  5 11 11  3 10  8 12  3  3  9  8  2 11 12  8\n[81505] 10  1  2  8 11  6  8 10 12  8  2  7 10  4  4 10  3  9  4 12  3  8  6  4\n[81529]  6 10  7  5  4  5  7  3  5  6  1  3  1  1  1  6  5  7  4  7  4  4  7  1\n[81553]  4  1  4  6  2  8  6  7  7  4  4  4  8  3  1  1  3  4  7  4  5  3  1  8\n[81577]  1  3  4  4  4  6  3  3  3  6  4  2  7  2  4  9  1  2  8  3  2  1  2  5\n[81601]  4  2  1 12  1  6  6  5 11  6  6 12  2 10  1  7 11  2  8  5 11  7  7  4\n[81625]  7  2  4 12 12  3  2  9 12 11  8 12 10 12  7  9  5  8  2  2 11 12  9  3\n[81649]  7  4  2  4 12  6  4  3  7  5 10 12  9  7  6 11  3 12  6  8 10  5  4  9\n[81673]  3  4  2  7  6  7 10  4  6 10  8 12  4 12  2  8  8  4 10 11  6  5  3 11\n[81697]  5  1  8  1 12  2 11 11  5  2  6 11 11  1 10 12 11  9  9 10 11  6 11  9\n[81721] 12  6  2  7 11  8  8  5  2 12  7  4  8 12  8 10  1  2  8  7  9  6  2  7\n[81745]  6  7  3  1  8  7 12  7  3  4  2  5  8 12  4  5 11  6 12  2  9  3 12  3\n[81769] 12  8 11  2  6  3  1 11  8  1 11  7 11  8 12  3  4  9 12  7 10  7  9 10\n[81793]  3  8  8 10  7  5  6  7  9 10  1  7 11  9 11  9 11  4  8  3 10  7 10  3\n[81817]  6  6 10  6  8  6  3 12 12  7  3  5  8  6  8  2  1  1  2  1  4  8  6  1\n[81841]  6  8  5  5  2  1  8  4  1  4  2  3  5  2  3  1  2  1 12  3 12  3  5  8\n[81865]  4  3  6  7  2  9 10 10  1  1 11 11  8  9  3  7 10  3  2  8 11  9  5  7\n[81889]  7 12  4 10  1  7  6  7  7  9  1  5 10  6  5  7  7  3  8 12  2  2  8  5\n[81913]  3  1  3  9  4  9 11  2  1  5  7  2 11 12 10  8 12  4  1  5 10  3  4  4\n[81937]  9  2  9  8  1 12  4  3  5  8  7  8  2  9  9  9  6  5 12  2 11  6  9  1\n[81961] 10  1  7  4  2 10  7  6  2  9 10  3  8  6  6  2  9  3  7  9 11  6  8  7\n[81985] 10 11 10  1  6  7  1  1  8  3  6 11  2  6 11  5  4  7  7 12 10  9  9  1\n[82009]  6  8 12  1  6  4  1  3  9  8  5  8  4 10  2  1 12  9  1  6  6 12  5  6\n[82033]  9  3  7 12 10 10  1  1  8 12 11  5 10 10 11  7  3  4 11  1  2  4  3  9\n[82057] 12 10  3  8 10  5  7  8  2  3  6  7 10  5 10  3  8 11  8  3  5  3  5 12\n[82081] 12  5  9 12  3  2  4 11 12 12 11  2  9 12  6 10 10  5 10 10 10 10  6  3\n[82105] 11  5  6  4  4  6  9  9  7 11 10  3  2  8  1  4  3  8  8  9  7  6  3  9\n[82129]  2  8  4  8  7  5  9  5  3 10 11  2  7  5  5  2 12  3 12  7  8 12  8  3\n[82153]  1  8  9 12  7 10  8  9  6 10  3 12 11 10  8 12 10 11 12  3  1 11  1  3\n[82177] 10  7  6 11  7 10 10  8 11 12  1  5  7  9 12  3  6  3 11  9  4  3 10 10\n[82201]  7 10 10  5  9  5 12  7 10 11  1 12 10  9 11  9 12 10 10  1  2  1 11  7\n[82225]  5  1 10  2  9  4  6  7  3 11  2  6 10  7  8  1  8  2 12  9  1  7 11 11\n[82249]  7  5  9  9  3 10  7  6 11 10 12  8 10  7  8  1  8 10  2  9 11  3 12  8\n[82273] 11  2  5  9  1  9  5 12 11  5  7  9 10 12 12  9  2 11  6  9  1  9  8 12\n[82297] 12  7  5  6  6  6 11  2  3  4 12  7  5  7  4  7 10  3 10  9  6  2  3  3\n[82321]  6 11 10 12  8  4  9  9  2 10 11  7 11 11  4  1  2  2  5  7  4  5  2  5\n[82345]  3  7  2  1  5  3  1  1  3  3  8  7  3  3  4  6  2  4  3  7  3  3  5  6\n[82369] 11  9  7  1  9  2  4 11 11 12  5  6  2  6 10 11  8  4 11  8  7 12  5  9\n[82393] 11 10 12  4  6  5  9  1  4  9  1  3  1 11 11  7  3  1 11 12  5  7 10 10\n[82417]  7  4  8  9 12  7  4  4  6  5 11  4  8  3  7 10  4  8  6 11 11 10  9  1\n[82441] 12  8  3  5 10 12  2 12  6  3  6  3  6  2  4  6 10 12  2  2  7  8  7  1\n[82465] 11  3  6  7  5  1 10  3  8 11 12  7  7 11  7  6  1 10  5  3 10 10 10  6\n[82489]  7 12  6  5  6  4  9  5  6  8 11  3  3  5 11 11  5  1  8  1  2 11  2  7\n[82513]  7  5  7  9  5  4  7  5 11  5  3  2 12  8  4 10  2  9  3  1  1  4  8  8\n[82537]  7  7  9  6  2  9  3  8 11  4  6  5  2 10  5 10 11 12 12 12 11  6  5 10\n[82561]  1  9  2  6  5 10  7 12 12  3  4  5  7 12  7  4 12  9 11  3  9  8 11  1\n[82585]  9 10  4  9  5  9  9 11 10  7  9 12  2 11  2  9  1  5  3  2  4  2  3  5\n[82609]  3  6  3  8  4  3  8  4  2  1  4  3  6  3  7  7  4  4  4  5  1  8  6  2\n[82633]  5  7  5  6  7  7  8  7 10  8  8  9 11  6 11  7  7 10 12  8  3  1  8 12\n[82657]  3 12  1  4  9 12  8  8  2  8  6  8  9  9 12  7  6  5  4  3 10 12 12  9\n[82681]  3  2 12  5  7  2  3 10  4  9 11  7 12  3 11  2  7  9  9  5  9  9  8  8\n[82705]  5  6 11 12  3 11  9 10  1 11  6  1  8  5  7  9 10  8  3  6  2 10  9  7\n[82729]  8 10  9  8  5  6 11 12  5  5 11  3  7 11  3  7 10  3 10  9  1 12  5  2\n[82753]  9 12  3  5  7 10  8  3  1  5  6  1  5  8 11 12 10  6  2  4 10  8  1  7\n[82777]  6  5  5  3  1  5  5  2  6  5  4  2  6  7  6  7  8  7  7  8  6  7  9  8\n[82801]  1  2  7  1  7  5  2  8  1  1  1  3 10 11  9  5 12  3  6  1 10  6  4  1\n[82825]  5  7  9  4  2  2  3  5  9  2  9  8  9  5  4  7  6  7  5  8  3  9  1  2\n[82849]  1  4  3  2  1  8  2  6  8 12 12  3 12 12  3 11 10  9  6  7  7 12  7  9\n[82873]  9 10  9  9 10 12  6  9  3  8  3  4  3  9  7  1  6  3  9 10 12 11  1 11\n[82897]  9  3  6  7  7  6  4  6  1  5  8  7  2  3  1  1  2  8  6  2  6  4  4  6\n[82921]  1  7  1  8  1  7  6  7  2  4  3  2  3  6  2  7  4  2  5  6  8  3  7  6\n[82945]  3  7  5  5  1  2  1  1  7  7  8  6  1  6  1  2  2  3  5  3  7  1  6 10\n[82969] 10 10  2  6  5 11  7  2  6  2  7  9  2  4 12 12  7  8  1  4  4  3  9 11\n[82993]  1  1  2  8  2  1 12  1 10  6  1  1  7  9  7  8 11  9 12 10  8 12 10  4\n[83017] 10  7  6 11 12  1 10  7  3  9  4 12  1  4 11  8  6 10 12  5  9 10  8  5\n[83041]  9  2  2  6 12 10  8 12  6  2  7 11 11  9 10 11  8  4  9  2  7  4  7  7\n[83065]  7 10 10 10  8  3  6  4 11 11  6 11 11  8  8  2 12  5 10  1 11 12  6  7\n[83089]  4  8  3  7  4  7  6  8  1  9  2 11  8  1  7 12 11  7  8  8  5  5  1  2\n[83113]  3  6  2  5  7  6  4  8  4  6  1  2  9  8  6  4  4  1  3  9  7 10 12  6\n[83137]  6 10  8  9  5 10 11  9 12  7 10  6  9  9  7  9 12  5 12  3 11  6  6  6\n[83161]  6  9  7  8  9  8 12 10  3  7  5  8 10 12  3  1  7  3  6 12 11  5  2 11\n[83185]  1  1 10 12 12  6 11  6 12  3  7  7 10  7  8  5  9  8  1  6  7  9  3  3\n[83209] 11 10  4  8  2  2  6  1 10 10  4  4 11  9  7  9  2 11  4  4  1  5  9 10\n[83233] 10 11  3 12  4  9 11  2  7  4  8  6 11 10 12  9  3  9  3 12  6  7  5  2\n[83257]  2  1  2  2  1  1  7  3  1  4  4  7  7  4  2  4  1  8  7  7  3  1  6  8\n[83281]  6  7  7  6  8  6  8  8  9  4  7  3  8  1  4  5  7 12  7 10 11  8 10  3\n[83305]  2 12 10  2  9 10  3  9 12  3  4  1  8  1  9  6 12  5 10  3  9 12  7  7\n[83329] 12  7  9  7 12 12  9  9  4  5  7  4  1 11  6 10  9 12 12  7  9  7  8 10\n[83353] 12 11  9  5  9  7 10  6  9  7  5  3  2  5  2 12  2 10  5  1  7  4  2  3\n[83377]  5  9 11  2 11 11  8 10  8 12  8  7  4  1 10  7  7  8  2 10  8 10  7 11\n[83401]  5 11 11  8  9  9  7  9  2  9 11  6  1 12  9  6 12  6  6  7 12  5  6  2\n[83425]  9 11 10  1 10  4  1  4 11  8  1 11  9 12  9  6 12  5  7  4  6  3  5  4\n[83449] 12 12  3  7 12  6  6  6  1  9 12  8 10  1 12 12  1  8  9  7  3  1  7 11\n[83473]  6  9  9  9  3  9  8  2  8 10 12  8 12  6  9  3  7  5  9  7  6  4  1  7\n[83497]  9  4  8 10 10  8  9  8  8 11  4  8 12  2  4  5  8  7  4  9  2  5  1 11\n[83521]  6  3  9  6 11 10  4  4  2  8  3  5  9 10  4  5  7 12  8  9 11  9  7  2\n[83545]  5 11 10  8  1 11  5  5 11  7  8  2  6  1  7  5  6  5  5  6  1  3  3  2\n[83569]  8  4  7  3  9  3  6  3  1  1  9  5  8  2  7  2  2  1  1  1  1  5  7  5\n[83593]  5  2  5  1  7  5  1  1  1  2  3  2  4  1  7  4  2  6 10  6  6  4  7  5\n[83617]  1  7  9 12  1 12 10  5  7  9  6 10  1  1  6  1  7  3  6  7 12  4  3  3\n[83641]  1  5  9  1  9 10 12 12  7 11  7  2  9 10  2  1  2  7  3  7  8 10  9  2\n[83665]  6  1  6 11  6  9  9  3 10 11 12  3 11  7 11  6 10  2  1 12  1 11  7 12\n[83689]  3  1  4  8  7  7  4  4  9 12  4  4  4 12 11 11  7  5 12  1  8 10  5  3\n[83713]  1 11  5 12 10  4  9 11  7 10 11  1  7  7 10 11  3 10  7  1  7  3 11  5\n[83737]  5  4  5  6  6  4  7  3  7 12  7  3  8  9  8  5  3  7  2  5  6 11  9  1\n[83761]  2  8 11  7  2  2  1 11  7 12  5  2 11 12  9  6  1  6 12  6  8  6 10 11\n[83785] 10  3  6  4  9  6  5  2  6  9  4 11  7  3  5 11  8  8  8 10  1  8  7  8\n[83809]  3 10  9 12 12  3  9  4  7  9  2  5 11  7  9  8  9  7 10  9 11  9 11 12\n[83833] 11  8  1  6  5  4 10  6 11  2  7  2  1  3  6  7  1  9  3 12  9 12  7  4\n[83857] 12  9  1 10 11  9  6  8  9  8  7 12  2  4  9 12 10  6  3  2  9  6  6 10\n[83881]  6  2 10 10 11  7  9  7 10  9  8  2  5  3 11  7  4 11  4  9  8 12  6  9\n[83905] 12  7  3  9  7  3  3  9  9 11  7  6  6  6  6 11  5  7  9  9  4 12  9  8\n[83929]  5  1 11  3 10  7  1  8  5  5  1  3  7  1  5  7  1  2  5  6  5  6  5  1\n[83953]  3  2  3  8  6  1  4  7  3  7  3  7  9  3 11  3  8  1  9 10 12 10  3 10\n[83977]  1  8 10  4  8  6 12  8 12 12 10  8  1  2  3  3 10  9  7  2  3  6  9  8\n[84001] 12  9 12  3  7  7  1  8 11 11 12  2  9  6  3  6 10  9 12 11  1  9 12  9\n[84025]  8  2  2  4  9  1  4  1  2  8  5  8  3  3  2  7  5  2  6  7  3  4  2  5\n[84049]  5  6  4  5  6  2  3  5  1  1  6  2  3  6  4  5  4  6  1  7  7  1  1  3\n[84073]  1  3  7  4  3  1  6  7  7  1  2  3  7  7  6  3  1  1  8  4  1  7  6  1\n[84097]  3  1  7  6 10  3 12  3  4  1  2  3  4 11  3  1  9  8  7  9  1 11 12 12\n[84121]  4 12  4  7 10 10  8 10  3  2  8  8 12  4  8  1 10  1 10 11  7  9  8 12\n[84145]  7  1  2  8  8  9  1 12  7  2 11  9 11  7  9 11  6 11 11  6  2  5  9  2\n[84169] 11  7 12  2 11  8  4  5  5 10  9  5 10  8  1  9 11 12 11  8  4  6  6 11\n[84193]  6  1  4 11  8  7 10  8  3  5  2  6 10  5  8  5  5 11  9 10 12  8  7  1\n[84217] 10 12 12  6 11  9  7  9  1 11  4  9  7  7  8  7  7  3  5  2 10 10 11 12\n[84241]  2  9 11  7  9 12  1  2  9  9  7 12 11 10  2  8  4 11  3  8  9 11  4  7\n[84265] 10  2  7  8  7 10 12 10  5  1  9  5  1  9  2  6 10 12  8  3  7  6  9  7\n[84289]  3 11  4  7 10  7 10  4  9  1  5  7 11  1  9  6  3  2  9 12  1 10 12  3\n[84313]  1  2 12  2  4  7  4  1  4 12 10 11  9  3  4  6  2 10 12  1  4 11  2  8\n[84337] 12  6  5  9  6  2  3 10 10  2  7  8  9  2  1  8  6  8  9  6 12 11  5 10\n[84361]  1  1  5  8  3 12 10  3  8  7  6  4 10 12  9 11  5  1  7  8  4 12  9 10\n[84385]  1  9  7  5 10  4 10  4 10  5 12  5  4  9  2  7  5  7  4  8  1  8  8 10\n[84409]  2  6 11 11  4  3  5 11  4  7 12  3  5  7 10 12 11  1  5  9 12 12 12 12\n[84433]  9  8  7 12  2  2 10  1 12 12  8  5 12  9  8  4  1  8  8 10  1  7 10  5\n[84457]  7 10 11  8  9  1  6  2  3  3  5  8  7 10  4  1  3  2  8  6  9  8  7  7\n[84481] 11  6  5 12  9 10  7  5  3  7  5  8  6  7  2  4  4  8  6  2  7  9  1  1\n[84505]  5  7  2  1  7  2  1  1  2  5  2  8  1  6  7  5  8  6 10  5  8  3  7  6\n[84529]  9  8 11  8 12 10  1  7  5 11 11  4  2 11 12  8  1 11  7  9  6  6  7  6\n[84553]  7  4  6  4  7  7  3  4  3  3  8  3  1  3  5  1  6  3  8  2  1  2  4  3\n[84577]  7  5  3  8  4  5  8  2  4  9  7  3  6  4  1 10  5  8  5  3 10  1 10 11\n[84601]  6  7 10 12  1 12  6  4  4  7  6  2  4  5 12  4 11  8  4 11  8  1  2  2\n[84625]  9  9  3  2  4  6  9  8 10  2  9  5  8  9  7  8 12  8  4  7  7 12  8  5\n[84649] 11  6  2  5  3  7  1 11 12 12 11  1 10  1  7  8 11  7  1  2  3 10  9 11\n[84673]  9  6  3 10  8  7 11  7  7 10  8  7 10  7  7  2  3  9 11 11  6 10  5 12\n[84697]  1  7  6  8  3  4  3  7  5  5  6  2  7  1  1  1  7  3  8  8  1  4  3  8\n[84721]  4  4  7  3  6  1  2  6  3  6  9  8  7 11  8  4  4 11  5  6  5  7 11  5\n[84745]  9  4 12  5  2  4  8  7  7  7  4 12 10 11  3 10  4 11  4  7  8  2  7 12\n[84769]  6  3  4  2  7  4 10  6  6  5 12  1 12  8  8  6  5  5  2  6  6  5  3  6\n[84793]  4  4 10 10  2  2  5  1 11 10  7  8  9  5  8  1  5  6  9  9  5  7  8  4\n[84817]  3  1  2  4  4  4  6  8  5  4  5  5  7  6  5 11  5  8 11  7  4 11  8  4\n[84841]  8  5  4  1  1  9  7  8  4  7  7  3  9 10  1  3 12  5  6 10  8  7  6  4\n[84865]  9  6  5 10  6  3  2  3  5  2  9  3 12  1  9  9  9  9  9 10  1  8  9  8\n[84889] 10  5  5  9  8  7 10  4  3  9 10 10  6 11  2  6  6  4 10  4 10 11  6  1\n[84913]  1  3  3 10  4  4  2  1  2  6  4  2  2  1  4  1  5  7  1  7  3  1  3  4\n[84937]  3  3  2  2  6  1  7 12  2  9  2  4  3  3 12  2 10  7 12 12  6  5  8  7\n[84961]  2 11  3 10  8 11 12 12 11 12 10  5  5  4  9 12  5 11  4  2  4  2  4  4\n[84985]  2  3  6  2  3  8  7 12  9 10 11  5 11  8  5  1  2  3  6  6  6  7  2  6\n[85009]  3  4  2  4  8  8  1  7  7  1  3  6 12  8  4  3  2  9  4  1 10 12 12  7\n[85033]  5  9 11  6 12  4  4  9 10  2  7  6  9  2 11  1  3 11  5  4  7 11  4  8\n[85057]  4  7  9  5 12  6  1  6  6  5 10 12  9  1  9 10  1  1  1  5  3  1  1  1\n[85081]  6  7  7  7  9  8  5  3  4  9  7  1  8  4  3  7  4  2  5  5  2  9  3  3\n[85105] 11  3 10 10 10  6  3  3  2 11 12 11  8  1  4  9  1 12  4  8  6  3  3  9\n[85129]  9 11  1  9  5  9 10 12  8  1 10  4  7  9 11  6 10 12  6 12  2 11  5  5\n[85153]  8  8  7 10 11  4  2 11 12  4  4  1 11  7 12  5  2  9  8  7  7 11  8  7\n[85177]  9  5  4 10  4 12  1  6  8  8 11 11  8  7  1  7 12  9  8  7  3  3  2  7\n[85201]  2  8  5  6  6  2  1  6  8 12 12  8  1  3  6  5  3  1  2 12 11 10 11 11\n[85225]  7  3 11  7  1 12  5  1  1  6  2  4 12  7  7  9 11 11 10  8  3  6  6  1\n[85249]  4  1  6  9 12  5  6  2  8 10  4  6 11 11  1  8  3  3  8  1  4  5 11  9\n[85273] 12  3  4  3  8  7  6  4  3  1 12 10 11  4  6  7 10  5  8  9 10  2  7  4\n[85297] 10  4 11  5  3  3 12  3  2  2  3  1  4  2  2  1  2  4 10  3  2  2  2  4\n[85321]  3  1  3  2  1  7  4  3  7  7  2  4  4  6  3  6  7  2 11  4  7 10  3  5\n[85345]  2  2  1  9  7  3  8  6  6  3  2  2  5  5  3  9  3  1 10  5 11 10  5  2\n[85369] 11  7  3  6  3  8 10  3  8 11 12  2  5  3 11  5  7  7  6  1  2  7  5  3\n[85393] 10  6  3  8 10  1  5  9 11  1  3  1  8  5  5  8  6  2  6 11  5  3  1  1\n[85417]  6  1  9  1  7  7  9  1  5  3  1  9  2  8  5 10 10 11  8 10  9  9  5  3\n[85441]  5 11 11 12  1 10 12  9  4 10  9  6  1 10 10  8  2  1 10 11  3  1  6  8\n[85465]  9  6  1  7  4 12  4  3  2 12 10  2  7  5  1 11  1  9  2  7  5  3  7  1\n[85489]  1  5 10 11  3  3  5  8  7  5  3 11 11  3  9  1  7  5  9  1 12  9  3 10\n[85513] 12  5  6  9  8  1 12  7  5 11 11 12 10  7 10 11  2  6  9  8  4  6 12  6\n[85537] 11  1 11  5  1  4  1 11  3  3  1 10  5  4 10  7 12  9  5  8  2  4  3  7\n[85561]  8  3  1  1  9  3  3 11  3 10  5  4  8  4  1 12  6 10  5 11  5  5 10  5\n[85585]  5  3  9  5  3 10 10  2  1  5  9  4  4 11  7  4  5  9 12  8 12  9  3  5\n[85609] 12  3  5 10  6  9  8  4  7  3  9 11  5  5 11  3  1  4  7 11  7 11  1  4\n[85633]  7  5  3  2  5  6  4  2  8  5  2  9  5  6 10  7  2 11 10  3  2  8  9  4\n[85657] 12  2 12  8  5  4  8  6  9  3 11  4  2  8  9 11  1  3  8  3  2  2  9  6\n[85681]  1  2  7  2  2  7 11  1 12  7  7  8  9  1  3  3  3  3 11 11  6 11  3  8\n[85705] 12  1 12 12  9  2  9  1  1  2  6  8 11 11  9  2  2 10  9  4  5 11  4  2\n[85729]  3  1  9  1  6  2  1  1  1  2  4  3  1  1  3  6  1  7  2  2  5 10 10  1\n[85753]  6  8 10 10  6  7 10  5 12  2  7 12  4  5  9  3  3  6 12  7  9  7  5  5\n[85777]  7 11  6  9  9  5  2  6  3 12  8  2  2 10  4  6  5  6  3  4  6  2  8 11\n[85801]  4  5  6  4  3  3 12  6 12  1  6  3 12  8  4 11  3  8  7  8  6  8 11  5\n[85825]  9  3  4 12  8  7  3  6  7  7  1  1 12  3 10  8  7 11 12 12  9  6 12  2\n[85849]  6  2  4 12 12  9  3  6  1  7  1  1 12  2  7 10  1 10  5  8  9  6  9  8\n[85873]  7 11  9  3  3  9  2  4  6  7  6  1  7  5  9 12  2  1 10 12  6  2  1  1\n[85897]  2  2  7  1  2  1  1  8  7  3  3  3 12  5  5  6  2  7 11  2  3  7  8  7\n[85921]  2  2  2  3 10  5  8  6  1  9  8 11  2  4  7 10  3  3  3  1 11 10  8  5\n[85945]  4 12  4  6  1 12  9 10  3  5  7 11 10  4  5  2  3 10  7  5 12  3 11  4\n[85969]  8  4  9  1  2  4  4  5  7  3 10  5  1  6 10  4  7 12  9  3 12  9  9  4\n[85993]  3 11 11 12  2  1  9 11  9  4  5  3  8  2  1 10  7  7  9  5 12  6 12  5\n[86017]  5  8  9  7  2 10  5  7  4  7  7  9  3  3  1  3  3 10  8  4  7  3  2  3\n[86041]  3  4  6  1  2  1  1  6  3  1  2  2  2  1  2  2  2  5  2  4 11 11  4 12\n[86065] 12  6  5 12  1 11  2 12  8  4  5  7  6 12 10  7 12 10  2  9  5  1 10  3\n[86089]  1  4  9  7  8  4  5  3  6 11  4  3  7  1 11 11  5  6  4 11 12  6  1  8\n[86113]  8 11  8  8  3 12  3 12  5 12 12 10  4  2  3  3  3  5 11  1  9  4  6 11\n[86137] 11 10  5  3  6  7 11  5  7  5 11  5 10  4  4  4  7 11  9  7 10 11 12  4\n[86161] 12 10  8 11  2  1  4  6  5  1  1 10  2  7  5  8  8  8  2 12  6  4  2  5\n[86185]  9  4 10  4  2  4  6  1 12  2  9  6  4  5 10  5  5  6 10  4  6  3  8  1\n[86209] 12 10  3  1 12  3  7  4 12 12 12  9  5  1  4  4  9  5  6  9 11  7  5  4\n[86233]  8 12  6  7  5 12  9  8 11  6  6  3  8  9  6  4  2 11  8  1  2 10  3  7\n[86257] 10 10 10 11 10  7 11 12  2  6  7  8 12  9 10  2 10  2 12  6  1 11  8  5\n[86281]  5  3  9 12  5  7 10 11 10  3  3 10  6  1 10  3  6  9  5  3  6 12  5  3\n[86305] 11  6  6  2  4  6  1  5  2  5  2  1  1  6  5  1 12  4  1  7 12  3  2  9\n[86329]  5  8  4  3  7  5  9  2  7 10  4  4  1  3 10  7  8  2  2 11 10  1  2  7\n[86353]  7  1  3 10  5  8 10  4  9 11 10  1  5 10  2 11  6 11  3  4  9  4  2  3\n[86377] 10  1  9  6  3  4  8 10  3  3  4  5  9  4  9  2  7  6  4  1  5  3  6  8\n[86401]  7  3  4  5  9 11 12  3 12  7  1  1 12  1  6 11  5  1 11  4 12  1  8  9\n[86425]  2  6  4  9  8  4  5 12  1  3 11  4  1  9  7  5 11  4  8  9  7  8 12  4\n[86449] 11 11 10  4 12  6 11  9  4  7  3  7 10  4  8 10  4  7  9  8  3  2  9  5\n[86473]  7 10  6  3  8  2 10 12  6  8  6  8 10 11  6  7  7  7  3  7  4  9 10  7\n[86497]  5  2 11  1  2  4  6  6  9  3  4 12 10  8  8  3  5  7  4  3  5  3  4 11\n[86521]  6  3  5 12  7 11  9  7  5  5  5  3  1  3  1  3  8  6  2  3  6  9  6  7\n[86545]  5  5 11  2 10 10 12  6  6  2 10  4  3  2  9  5  8  4  3  6  7  5  6  5\n[86569]  3  5 11  5  2 10  4  6  7  5  8  2  2  1  6  8  4  1  7  7  7  3 12  2\n[86593]  6  5 12  7  1  1  6  1  3  9  6  7  2  8 12 12 10 10  4  1  5  1  5  4\n[86617]  1  2  2  1  5  6  3  5 11  4  8  3  1  3  4  4  1  1  2  5 10  2 10  3\n[86641]  6  1 12 10  2  7 10  1  6  1  1  7 11 12 12  4 10 10 12 11  7  8  9  8\n[86665]  7  3  5 11  7  1  6  8  7  3  5 11 12 12  1  5  5  4  1  3  2  3  6  3\n[86689]  4  4  8  5  4  1  3  8  5  1  6  7  1  7  1  4 10  8  5 10 11  5  8  8\n[86713]  6  4 10  4  3  4  8  5  8 12  7  8  6 11  9 10  9  6 11  4  5  4  5 12\n[86737]  6  6  7 11  1  7  5  5  7  4  2  4  8 10 12  4 11  9  1  9  5  7  6  4\n[86761] 12 10  9  6  8 12  6 11  9  4  7  1  2  3  3  4  6  6  3  9 12  7  9  7\n[86785] 11 11  9  2 11  8  9 12  9  6 12 10 12  3  7  1  3  1  6  7  8  2  5  8\n[86809]  2  4  7  1  9  2 10  4  5  1  4  8  9  9  1  2  1  4  7  7 10  8  2 10\n[86833]  1  3  1  7  6  2  6  5  8  5  9 12 12  3 12 10  1  1  3  4  7  5 10  4\n[86857]  6  8  5  8  1  2  3  9  4 12  1  5  9  3  1  2  5  2  2  3  8  7  7  9\n[86881]  9  1  5  1  4  1  8  6  7 11  7  3 12  9 12  3 10  2  6  3  3 11  3  4\n[86905] 12 11  1 11 11  3 10 10  2  3  4  2  4  5  8  1  3  4  6  2  1  2  4  2\n[86929]  6  4  5  2  4  6 11  7  4  5  1  6 10  1  7  4  3  7  9  9  1  7 12 11\n[86953]  5  6  7  2  2  4  3  9  2 12  6 10  1  5 11  5  5  5  4  9  9  8  8  1\n[86977]  3 10 11 12 10  6  6 11 10  4  3 10  7  2  3  1  8  6  2 10 12  7  8  2\n[87001]  1  1 10  3  6  5  7 11  1  8  7  4  8 11  7  3  1  2 12  7  6  7  1  9\n[87025]  3  8 10  5 12  6  4  8  4  4  1  1 11  2 12  8  6  9  1 10 10  4 12 10\n[87049]  4 11  7  4 11  2 10 11  4  9  2 12  7  3  5 12  5  4  3  8  3  9  4  5\n[87073]  2  6  1  5  7  7  7  2  4  2  8  7  3  3  5  1 12  8  5  9  3  7 11  8\n[87097] 11  7  3 12  8 11  9  7  6  4 12  5  8 12 11  2  7  8  3  2  3  9  7  4\n[87121]  7 12  8  8  2  7  9  5  8 12  9  3 12 10  7  8  5 12  6  3  4  5  6  7\n[87145] 12  7 11 10  7  6  1  5  6 10  6  1  4 11 11  6  5 11 11 10  4 12 11  2\n[87169]  8  9  3  1  3  7  7  2  7 10  8  3  7  2  2  9 10  4  6 11  2  3  8  2\n[87193] 10  7  4  7  7  6 12  5  1  1 11 12  7  4  7  3  1 10  1  5  8  6  7 10\n[87217]  3  7  3  6  7  6 11 12  5  4  5  7  6  6  1  4  3  8  7  1  2  5  4  4\n[87241]  3  2  6  5  7  4 11  9 12  3  7  9 10  6 12  5  8  9  9  4 11 11  9  3\n[87265]  5 10 10  4 11  3  2  6  2 10  3  4  1  7  8 10 11 12  7 12 12  7 11  6\n[87289]  4  6 11  6  6  8  5  3  5  4 11  4 11  8 10  3  8 12  6  5  7  5  8 10\n[87313]  6  2  3  2  3  1  5  9  7  8 11  7  5  1 11 11 11  3  6  9  8  9 10 10\n[87337] 10  3  2  3  6  6  2  6  8  4 10  3  9  5  5  7  1  5  1  3  1  3  3  2\n[87361]  4  4  1  1  7  2  3  5 10 10 10  9  3  7  7  9  5  9  2 10  2 12  9 11\n[87385] 10  1  7  6  9  7  3  4 12 11  4  4  4  2  1  5  1 12  3  8  6 11  1  2\n[87409]  2 10 12  6  8 11 10  4 10 11  3 10  2 11  9  3  9  5  5  9  3  3  1  5\n[87433]  9  3 11 10  3  9  4  3  1 10  2  2  2  6  6  4  3  3  4  4  5 12  3  4\n[87457]  4  1 10 10  7  9  6  8  6 12  2  7  4  1 11  9  1  4  5  8  3  9  9  2\n[87481]  9 11  8 11  7  3  7  7 11  6  5 10  8  3 11  4  6  3 10  2 11 10 11  3\n[87505]  3 12  1  2  4  6  7  5  8  4  5  5 10  6  4  3  7 11 11  4 12  1  5  9\n[87529]  8  5  6 10  9  8  8  6  8  7  7  3  6  7  2  7  2  1  5  3 10  1  6 10\n[87553]  3 12  1  9  4  1  8  6 10  6  6  7  2  1  9 10  9  1 11  3  3  5  4  4\n[87577] 12 11  4  2  1  9  2  4 10  9  4  5  9  2  9 12  2  6  9 11  7 10  2  2\n[87601]  4 12  5  1  4  3  2  5  7  8  2  7 11  7  1  5  1  9  5  1  6 11 11  1\n[87625]  3  3  2  4 12  2  6  2 10 12  4  3  2 12  4  5  4  3  5  8  4  5  6  1\n[87649]  2  4 12  5  3  2  7  2  8  9  1  4 12 12  6  3  1  6  5  1  2  4  7  5\n[87673] 10  8  9  4 11  6 10  1 12  5  4  9 10 10  8 12 10 10  7 12  4 10  1  8\n[87697]  3  1  5  5  9  5  6 12  5 11  1 10  4  6 11 10  4  8  7 12 10 11  6 12\n[87721] 12  9  6  5  1  4  9  6  5 10 12 11  9  7 10  1 11  1  2  6  7  4 12 12\n[87745]  5  2  5  4  7  4  1  4  5  4  2  7  7  3  1  3 11 11 11  9  1 11  6  1\n[87769]  9 12  1  8  3  4 12 11 11  3  2  8 10  4  4  3  4  6  6  7  7  1  7  2\n[87793] 12  8  2  7  1 10  9  5  9  6 11  5  5  3  5  6  9  1  9  5  1 10  4  9\n[87817] 11  6  3  3  9  3  9  7 11 10 10  2 10  1 11 10  3  3 10  5  4  4  5  4\n[87841]  8  1  3  3 10 11  3  4  6  1  4  7  5  9  5 12  3 11  6  5  2 10 12  1\n[87865] 11  5  4  3  1  2  3 12  9 11  8 12  4  4 10 12  2  3  7 11  2 11  8  7\n[87889]  2  6  9 11  4  5  4  2  2  4  2  3 10 10  3  9 10 12  4 12  8  4 11  2\n[87913]  5  6  6  1 10  2 12  5  8  1  8  7 10  4  4 10 12 11 11 10  5  9  2  8\n[87937] 12  4 11  6  5  9 11  7  7  6  2  3 11 12 10  5  4  5  9  3 10  9  2  7\n[87961]  8 10  9 10  3  7  4 12  8 11  8  9  6  5  8  7  8  1  5  5 11  2 12 12\n[87985]  6  8  9  7 10  5  2  3  7 11 11  2  7  7  2  9  4  8  3  5  4  7  3  3\n[88009]  3 12  6  1 12  4  4  5  4  1  7  5  2  8  1  9  1  6  8  9  2  4  9 10\n[88033]  8  2  9  8 12 10 10 12  9 10  1  4 11  6  6  8 12  8 11  5  2 11  3  2\n[88057]  8 12  6 10 12  1  6  7  3  2  8  2 11  2  2  1 10 10 12 12  2  7  7  5\n[88081]  2  6  2 11  9  1 12 10  2  8  6  5 11  2 12 10  5  6  7 12  8  3  2  5\n[88105]  8 11  1  5  1  9  2  8  2 12  9  3  4 11 11  4 11  7  8 11 12  7  9 10\n[88129]  6 11 10  7  7  4  8  9  4  2  6  3 12  7 12  5  3 11  4  5  8 12  9 10\n[88153]  5  5 10 10  3  6  1  7  3 10  5 11  4  8  8 12  1  1  8 11  3 11  1 10\n[88177]  7 11 12  4  2  3 11  6 10 12  6  1  5  1  8  3  9 11  7 12 12  8  8  4\n[88201]  4 11  6  4  5  6  6  2  7  8  3  8  2  6  9 10  8  7  2  1  9  4  2  2\n[88225] 11  1  3  5  8  7 11  4  9  6  6  4  5  1  2  2  2 11  1  5  9  7  1  1\n[88249]  3  5 12  1  9  6  4 12  7 10  5  4  3  1  4 12 12  9  4  8  6  5  3 12\n[88273]  1  9 10  8  2 10  4  6  5  4  7  4  4  5  1  7  6  1 12  3  1 12  2  8\n[88297]  9  1  2  5  4  1  1 10  9 10  3  3  3 12  6  7  2  7  3  5  3  3  5  4\n[88321]  3  5  6  8  7 12  3  3  3  7  8 11 11  2  4  1  7  2  2  8 12  3  1  2\n[88345]  7  1  4  5  4  4  5  5  5  6  2  1  4  7  3  5  3 11  2  3 10  9  2  2\n[88369]  4  1  6  1  3  2  7  9  5 11  4  9  1  1  4  8  3  3 11  4  8 10  4 10\n[88393] 10  6 10  1  5  8  8  1  4  4  3  2  2  9  7  3  8  9  7 10  3  4  5 11\n[88417]  7  4  8  6  7  5 10  6  7  7  1  3 11  5  8  6  1  1  9  5  2  9 10  3\n[88441]  4  4  9 12 10 10  7  1  5  5 11  1  9 10  4 10 10 12 12  7  8  9  6 12\n[88465]  5 12  2  2  3  1 11  4 12 12  3 12 11 10 10  1  3  1  2  8  9 10  1 12\n[88489] 11  8  1 11  1  7  7  3 10  6  1  4  5 12  6  4  5  3 11  4 11 11 10 10\n[88513] 10 11  1  5  9  2 12  3  3 12  5 11  2  9  8  7  4  7  9  2  4  3 11 10\n[88537]  7  6  2  4  3  8 11  6 12  7  3  3  5  1  6  1  3  4  4  6  1  3  5  6\n[88561]  2  1  4  4  3  6  4  7  2  8  7 12  8  9  7  6  4  9 11  3  5  6  3  9\n[88585] 12 12  9 12  5  5  8  7  5  6 11  2 11  3 12  4  3  2 10  1  5  4  8 11\n[88609]  7  1  4  5  7  8  4  2 11  7  5  4  7  7  9  6  9  2  6  3 11  2 11  1\n[88633]  4  4  6 11  4 11  6  3 12  7  4  2  4  6  6  9  1  5  9  2  5  9 11  4\n[88657]  5 10  6  5  3  2  8  4  2  7  6 12  8  8  5 11 10  9 11  6  3  9 10 11\n[88681]  1 10  3  4  5  9  6  6 12  4  2  4  2 12  4  8  8  4  4  6  8 10  1 11\n[88705]  2 10  4 10  5 10  9  8  6 12  8  2  6  4 11  3 10 12  8  8  7  7  4  6\n[88729]  8  7  8  5  7 12  8  6  6  8  6  9  9  5 10  7  7 11  9  2  6  7  3  6\n[88753] 12 10  3  9  7  9  7  1  9  9  2  6 11  3  7  3 12  4  8 10 11  8  5  5\n[88777]  2  5 12  1 11  1  4  2  5 12  1 12  5  5  6  3  5  2  2  9  5  6  5  1\n[88801]  9  1  3  1 11  1  2  6  6  2  3  5 10  4  5  8  4  8  1  4  8  9  6 10\n[88825] 11  3  2  9  3  7  1  6  2  2  9 12  6 11  8  9  1  4  2  5  5 10 11  2\n[88849]  9 12  5 11  8  3  7  9  7  7  6  2 12  8  2  4  7  5  5  3 11  5  6 12\n[88873]  1  5  5  8  3  4  7  6  9  2  4  4  8  5  2  7  2 12  3 12 10  9 12 11\n[88897]  3  5  7  5  8  5  2  4 11 11  5  8  3  5  2 11  3  4  6  1  5 10  3  5\n[88921]  2  4  6  3 10  4  7 11  9 12 11  6  8 11  4  2  7  8  4  6 11  9 10  7\n[88945]  4  8  9 11 10  9  1  8  9 10 10  2  8  3  6  7 12 12  7  1 12  7  5  2\n[88969] 10 11  1  2  8  6  3 12 12 11  8  6  5  8  4 12  5  3  7  3  1  8  1 10\n[88993]  1 10 12 10  7 12  2 10  9  1 10  9 10  6  3  3  1  6  1  7 12  5  3  7\n[89017]  2  4  4 10  4  1  5 10  3 12  4  9  2  4  4 11  5  4  3  8  8  1  9  3\n[89041]  3  3 12 12  3  4  1  4 10  8  7  6  9  4 10  5  8 10  3  3  5  3  8  8\n[89065]  9  8  3  1 12  9  1 12  2 10  3  8  2  1  2  7  4  8  5  6  5  5  5  7\n[89089] 12  3  6  7  9  8  4 11  4 11 10  6  5  4  1  3  6  5  1  4  2  3  7  1\n[89113]  9  7  8 11  2  3  7  3  4  3 10 10  5  2  3  7  5  5  7  1  9  1  2  6\n[89137]  6  1  5  6  1  6  3  8  6  2  8  8  5  1  5  4  3 12  5  7 11  8  1  9\n[89161]  3  1  2  4  8  1  3  3 12  8 10  9  6  3  5 10 11 11 10  8 12  9  7  4\n[89185]  3 11  7  9  7  1  3  7  5  4 12  1  4  8  3  1 10  1 11  5 10  4  2  1\n[89209]  1 10 10  1  9  9  5 10 11  1  6  7  9  8  4  7 11  6 12 10  5  8  5 11\n[89233] 10 12  8  7  2 10  8  6 11  8  9  3  9 12  8  4  1  2 10  9  1 10  2 10\n[89257]  8 11  9  2  2 12  7  5  8  6 12  3 10  3 10  4  4  5  6  9  3  2  9  9\n[89281]  4 10 11 12 12 11  9 12  6  2  7 12  9  4  6  3  1  1  6  5 11  8  2  6\n[89305] 10  8  3 12  5  8  2  9  5 10 12  1  5  4  4  4  5  7 10  7  1  2  5  4\n[89329]  2  4  8 10 12  5 11  8 10  2  8  5  2  4  7  2  8  7  2  6  6  5 12  1\n[89353]  9  1  4  7  7  4  1 10  7 11  4 12  9  1  1  2  9  1  1  9 11  2  1 12\n[89377]  5  9 11  5  8  6  7 12  5  3  4  3  9  6  2  4  1 11  7  4  4  5  1  5\n[89401]  3 11  5  5  6  5  2  9 12  2  5  6  1 10  4  8  9  6  7  1 12  6  3  8\n[89425] 12  9  3 10  2  5  7  9 10 10 11  7  2  6 10  7 12  3  1  1  1  4  3  5\n[89449]  5  2  6  2  4  1  1  4  1  5  4  5  6  5  3 12  7  9  8 10  9  1 11  7\n[89473] 10  3 10  5 10  2 10  6  3  1  4  5  5 11  5  1 12 12  9  6  8 10  5  6\n[89497]  1  3  9 11  9 12  4 10 12  8 11 10 10  8  4  4  5  5  4  1  9  7  7  2\n[89521]  5  2  5  7  5  4  3  3  6 12  8  5  4  8  3 10  8  3  1 10 11  5  6  3\n[89545]  1 10 12  7 11  8  4  9  5  4  7  3  5  3 12 12 10 11  2  2  6  6 10  3\n[89569]  4  9 12  3  9  1  2  7  6  2  5  4  4  7 12  4 11  3  5  7  6  4  9  2\n[89593]  1  7  9  2 10 11 10  1  9  8  2  2  7  1  3 11 11  1  1 10 11  4  2  6\n[89617]  5 11  3  3 10  2  1  7  2  6  5  4  7  8 12  3 12  8 12 12  4  6  5 12\n[89641] 10  9  4 11 12 10  3  9 10  2  1  8  6  9  1  4  6 11  3  9 11  5  3 12\n[89665]  5  4  8  7 10  1  4  9  7  7  6  1  7  8 12  5  1  3  9  1 11  2 10  7\n[89689]  3  2  3  2  9  4  4  2  3  3  7  4  6  1  3  3  7  1  6  4  4  7  3  5\n[89713]  4  2  2  3  4  3  2  3  2  7  1  6  3 10  2 10  2  2  8 11  8  4  4  6\n[89737]  4  9 12  1 11  7  4  2  5 12 10 11  6  4  4  3  6 12  9  6  9  7  1  8\n[89761]  9  3 10  8  8 10 12  5 11  5  7  7 11 12  8 10  9 11 11 12  9  8  6  5\n[89785]  5  7 10  4  1 10  1  1  5  5  5  7  4  5 12  3  3  8  3 10 11  4  9  3\n[89809]  9  1  7  2  2  9  6 11 12  1 12  6 12  8 10  9  1  6  3  6 12  1  7  9\n[89833]  8 12  8 12  3  1  8  7 11 12  2 10  1  7  8  1  4  1  5  3 12  7  4  2\n[89857]  2  5  6  2  6  2  4  3  8  8 10  1  4 11 11  6  2  2  8 11 12 10  1 11\n[89881]  4 11  9  8  5 10  1  3  6  7  4  3  1  5  5  5  6 10  4  3  6  9  9  5\n[89905]  4 10  2  3 11  2  6  8 11 11  7  8  5 12  4  3  7  8  1  8 11  3  4  8\n[89929]  3  9  3  4  8  9  8  4  8 11  1 12  5  9  5  1  2  5  2  8  4  3 10  9\n[89953]  3  8  9  4  1 10 10  1  6  4  2  4 12 11  4 11  2  5  2  3  6 11  8  5\n[89977]  4 11  6 10  6 11 12  8 12 10  1  5  4  2  8  6  5 10 11  2 12 12  1  5\n[90001] 11 12  6  1 11  3  6  4  4  9  6 11  6  8  1  1 10 11  9  1  3  1 11  5\n[90025]  6  4  7 10  1  7  2 10  2  6  1 10 11  1  5  9  7  6  9  9  6  8  5  4\n[90049]  1 12  8 10  4  9  2  7  7  8  4  1  2  7 10  7  1  2  7  1  1  5  3  7\n[90073] 11  5 10  2  5  1 11 12  2 12  2  5  3 10 10 12  5  1 12  9 12  3  8  6\n[90097]  3  9  7  6  2  9  1  9  7  7  8  5  1  5  8  3  7 10  7 10  4  5  7  1\n[90121]  6  6  1  3  7  9  9  6  8  3  1  9  9  2  3  7 11 11 10  3  9  6  8  6\n[90145]  5  4 11  8  2  3  6  3  1  1  4 10  5  1  4 10  5  8  4  3  2  9  2  2\n[90169] 11  4 12  3  3 12  6  9  4  7  7  7 12  6  5  4  6  9  9  7 11  4  4  1\n[90193]  5 11  8  8  6 10  9  9  6  3  3  2  4  6  1  4  4  2  3  1  1  3  2  1\n[90217]  2  2  3  6  1  6  4  4  2  3  1  3 11  5 11  3  5  2  4  5  7 11  5  5\n[90241]  5 11  3  8 12  4  1  1  6  3  6  4  2  3  6  3  6  4 12  4  6  9  5  1\n[90265]  1  5  6  4 10  1  4  3 11  3 10 11  8  2  3  7  8  8 11  3 11  5  6  5\n[90289]  3  8  2  5  8  1  6  7  6  6  2  5  1 12  7  2  8  5 12  7  8  2 11  6\n[90313]  1  9  8  7 11  4  6  3  9  9  7  3 11  3  7  6 10  5  2  1 10  3  8  2\n[90337] 10 10  9  1  4  9  2 11  1  9 10  8 12 12  8 12  4  6 11  7  3 10 10 11\n[90361]  4  6  2  7  6  1 12  4  5 12  6  8  5 10  3  4  2  7 11  8  1  3  5 11\n[90385]  1  6  1 10  8  4  2 10  6  9  7  3 10 12  2  8 10 12  6  9  9  8  5  1\n[90409] 11  8  4  4  1  5  4  6  8  5  5  2  2  8  1  1  3  5  3  1  3  2  5  9\n[90433]  9  4 12 10  5  9  9  7  7 12 11  7  7  9  2  2  6  3  1  1  4  8 11  6\n[90457]  7  3  1  4  8  1  8  6  1  6  6  4  5  8  7 10  9 10  4 10 11  4 10  4\n[90481]  6  5  9 12  3  3  8 11  4 12  2  8 11  1 10  5 10  3 12  9  3  9  2  8\n[90505]  7 11  3  5 10  4  2 12  2  8  7  9  1  4 11  9  1  7  6  8 12  8 12  9\n[90529]  4  4  4  4  1  1  3  4  4  6  4  9  6  4  6  1  6  6 11  1  9  8  7 11\n[90553]  3  6  8  1  3  4 12  2  7  8  2  3  1  6 11 12  6  5 11 12  4 12 12 11\n[90577] 10 11 11  9 11  2  2  7  9  7 12  4  3  6 10  1  4 12  1  4 12  8 10  1\n[90601] 11 12  6  5  3  4  7  5  9  6  9  7  1  9 12 11  7  9  9  7 11  7 11  7\n[90625]  4  9 10  4 12  5 10  8  1 12  7  3 12  3 12  5  4  7  3  7  9  5  3  1\n[90649]  4  8 10  4 10 11  8 11 12  8  9  1  8  1  1  8  3  8  5  6  5  2  2  1\n[90673]  4  4  9  1 10  9  9  8 10 12  2  8  8  1  7  9 10  7 10  8  6 11  4  1\n[90697]  5 11  8  7  5  8  4  6  8  3  9  6  8  6  1 10  9  5 10  1  2  4  8  6\n[90721]  7  7  9  1  3 10  1  1 10  3  4  5  1  1  1  6 12  4  4  9  9  2 10  4\n[90745]  9  2  6  3  9  1  1  5 10  3 12  9  8  1  3  1  4  9 11 12  2  5  4  1\n[90769] 12  9  3  3 11  3  9 12  6  4 11  9 12 12  7  3  9  8  9  7  3  6  7 11\n[90793] 12 12  3 11  5 12 11  9  1  5  9  7  7  5 11 10  7  6  1  5  9  4 12  4\n[90817] 12  5  1  3  2  7  1 12  6  5 11 10  1  8  1  5 12  4  4  7  8  8  6  3\n[90841] 12  5  8  9  4 11  5  5  7  7 11  2  3  9 12 12  1  5  1  3  1  5  3  2\n[90865]  3  2  5  1  5  9  5 11  3  6  3  3  6  2  3  6 12  4 10  9  5  8  9 11\n[90889] 12  2  9 11  5  7 10  3 10  8 11  7  3  2  2 12 12  3  9 12  3  3  5  4\n[90913] 12 12  6  7  2  9  1  7 12 10  4 10  7  7  6  4  6  9  9  1  1  7  9  7\n[90937]  9  2  9  1  6  5 12  4 10 10 11  9  1  2 12  5  5  9  1  5  4  2  5  7\n[90961]  8 10  7 11  5  1 10 10  2  4  2 11 12  1  4  4  6  5  4 10  4  5  4  1\n[90985]  1  4  6  2  9  3  4  8  5  3  4  2  2  2  1  5  6  1  6  6  8  6  1  3\n[91009] 10  8  9  8  2  1  8  8  7 10  6 11 10  8  4  5  7  1  1  4  4  3  3  4\n[91033]  1  4  3  5  8  1  1  5  2  5  2  3  2  4  4  6 12 11  2  1  3 10  4  3\n[91057]  2 12  3 12 12  3  4  2  8  7  1  6  6 10  6  1  9  6  6  3  7  8  6  9\n[91081]  6  3 11  6  7  3  8  8  3  6 10 11  4 12  9 10 10  2  4  4  4 10  4 11\n[91105]  5  6  6  2  3  4  3  1  7  3  3  2  5  5  3  4  7  9  3  5 10  1  2  7\n[91129]  1  3  7  6  3  3  2  3  5  1  4  9  3 11 11 11  6  8  9  4  2  4  2  8\n[91153]  7  7  6 10  1  3  7  1  3 12 12 11  1 10 12  8  1  7  7  4 10  4 12  3\n[91177] 12 10  3  8  3 12  5 11  7  8  4  4  9 10  8 10  5 10  2 10  3  1  2 12\n[91201]  9  7  1  5  6  9 11 10  6  1  2  6 10  9  7  5  9 10 11  5  3  8  5  1\n[91225]  8  3  2  5 12  6 10  7  6  3  8  5 10 11  2 10  1  5  9 11  1  5  7  7\n[91249]  5  7  2 11  7  1  1  1 11  8 12 10 12  4  1  2 10  1 11  8  8 12  6  6\n[91273] 10 10 10  5  8  5  6 12  3  2  3  3  4  3  3  2  3  1  1  4  4  4  4  4\n[91297] 10  5  2 11  2  9 11  3  8 11  9  4  4  5 12 12  9  8  2 11 10 10  9 10\n[91321]  7  1  2  6  4  7 11 11  2  4  2  2  3  1  1  4  9  1  1  3  3  7  1  1\n[91345] 12  1  7  7  4  8  8  7 12  1  4  3  8 12 11  6 12  5  5  5 10  1 11  5\n[91369]  6  7  8  5  2  2  2  7 12  3  6  2  1 10  2 12 11  4  6 11  2  3  1  2\n[91393] 11  1  3  4  7  4 12  6 10  7  2 11  5  8 10 11  4  4 10  2  9  1  5 11\n[91417] 12  4  8 10  6  4 10  1  5  3  1  1  2  2  8  3  1  4  3  2  5  9  2  6\n[91441] 11  8  2  3  5  1  2  5  3  3  3 10  2 10  2  3  6  6 10  3  9  7 10  5\n[91465] 12 10 11  6 10  3  7  9  4 10  8  7  8  4  7  8  6  9  4 12  8  8 10  7\n[91489]  9 10  5  8  9 11  9  3 12  6  5  3  8  5  8  4 10 11  4  8  6 10 11  6\n[91513]  5  4  5  3 10 11 10  6  1  2  6 10  7  9  7  4  8 12  2  8 12 11  4 10\n[91537]  6  6  7  7 10  1  7  6  3  2  4  2  6  2  8 11  4  2  6  7  3  9  1  8\n[91561] 12 10  5  6  9 11  2  7  2  7  7  4  9  9  9  5  6  3  3 12  7  6  6  2\n[91585]  8  4  1 10 11  2 12 12  9  3  6  3  3  7  4  4  5  9 10  7  1  1  4  5\n[91609]  8  4  9  8  7 11  2  7  6 12 12 11 12 11  4  6  6  7  8 11  2  8  5  7\n[91633]  6  8  8  5  8  5  4 12  3  1  4  8  7  8  1  3  6  2  1  1  3  7 11  3\n[91657]  8  9 10  8  8  1  3  1  5  4 11  5 12  7  8  4  1  7  6 12  6  9  6  6\n[91681] 11  2  1 11  9 10  4  2  6  9  3  7  7  6  8  4  2 11 10 10 11  7 10  4\n[91705]  5 10  1 10  5  6  5  7  5  3  8  2  4  5  1  2  3  9  4  6  4  6  6  3\n[91729]  4  4  6  9  7  5  4  1  5  9  7  5  3 10 12  5 10 11  5 11 11 11  5  2\n[91753] 12  5  2 10  4  3  2  6  4 11  9 12  3  8 11  6  4  1 12  1  3  4  3  2\n[91777]  6 12  9  7  9  2  6  1  4  6 11  4 11  6  5  4  1  7  5  5 12  4  9  6\n[91801] 12  4  4  9  2  5  7  5  9  1  1  6 11  1  1 10  1  3  1  5  8  4  4  2\n[91825]  9  3  9  9 11  4  6  3 11 12 10  7  8  2  9  2  3  9  2  5  9  4 11  5\n[91849]  7  6  5  7 11  2  1  5 12 12  4  4  6  3  9  3  4 10  4  1  3  2  3  3\n[91873]  4  1  2  5  1  4 10  4  1  4  1  9  5  5 11  5  4  7 10  3  6  2  1  7\n[91897]  4  3  3  7 10 10  8  8 10  7  7  3  4  6  1  1  9  4 12  6  5  8  4 11\n[91921]  1  3  1 10  7  7  6  5 11  2 10  5  6  5  1 12 11  3  8 11  5  1  5  4\n[91945]  9  8  8 11  1  5  7  4 11  6  1 12  2 12  5  2  1  6  6 10 12  5  5 11\n[91969] 10  3  6  4  2  1  6  3  5  1  2  7 12  3  3  1  9 12 11  6  2  1  4  1\n[91993]  1  2  7 12  4  7  5  2  4  6  3  5  5  5  2  4  5  3  2  3  2  3  4  5\n[92017]  3  5  2  8 12  1 10  8  2  9 10 11  1 12  8  3 10 11 10  9  9  5  6  2\n[92041]  5 11 11  5  2  8 12  9 12  6 12  9  3 12  2 10 11  7  5  2  8  1  3  2\n[92065] 10  6 10  2  6  2  7  3  1  3  2  6  5  7 12  5  6  1  6  1  6  8  1  6\n[92089]  6  9  3  7  6  2  7  6 12  2 12  3 11 11  7  3  3  3  5  6  7  2  2  9\n[92113]  8 11  6  3  1 12 12  9  2  3  5  2  1  6  8 11 11 10  9  7 12 11 12  4\n[92137]  7  7  4 10  5  8  6 10  3  9 12  9  8  8 11 12  9  8  9  2 11  7 10  9\n[92161] 12  3  2 12  3  2  5 12  6  5  1  5  9 10  9 12  2  7  3  5  4  3  6  2\n[92185]  4  6  2  4  1  6  1  2  4  4  2  8  8  6  8  2  2  5 10  9  6  5  6  8\n[92209]  6 12  9  6  7  9  8  9  7 11  9  5  5 11  9  8  7  1 11  3  8  9  6  2\n[92233] 12  7  8  3 12 10  3  1  6  5  3  1  5  9  2  6  5  1  3  9 11 12  1  3\n[92257]  8 10 10  5  9  9  6  6  9  6  1  7  2  4 11 11  6  6  7  1 10  4  1  4\n[92281]  5  5  3  8  5  8  3  4  8 11  7  7  2 12  3  1  6 11  7 11 12 11  4 11\n[92305] 11 10  6 12  6  8  7 10  3  5  8  4  3  8  7  6  6  7 11  7 12  9  2  6\n[92329]  6  3 10  2  9  5  2 10  2  2 10  2  1  6  1  2  6  5  8  4  6 10  3  2\n[92353]  2  3  2 10  9  6  8  3  3 12  1 11  9  9 12 12  8  3 11 11 10  2  2  8\n[92377] 11  5  4 12  9 10  5  9 10  3  9 12 11  2  9  9  2  6  2  4  1  7  5  4\n[92401]  9  6  8  3 10  2  2  9  4  6  4  6 10  4  4  3  7  8 12  5 11  3  7  9\n[92425]  7 10 10  2  6 10 10  4  6  5  4 10  1  4  1  2  3  1  9  1  2  3  7 12\n[92449]  3 11  9  2  4 12  4  9 12  1 12  4 10  3  4 12 12  8 11  8  1  8  6 11\n[92473]  9 10  3  4  5  5  5 12  2  4  9  7  3  1  4  1  5  1  5  8  3 10 10  1\n[92497] 12  2  8  7  9  7  5  1 12  2 12  9  6  3  7  5  8  3 12 10  7  7  2  2\n[92521]  3 12 11 10  2 11  1  8  6 10  8  2  3 12  7  2 11 12  6 10  6 10  9  7\n[92545] 11 11  8  5  9  9  8  2  9  5 11 10  7  2  7 12 12  3  9 12  8 10  4  8\n[92569]  7  1  2  6  8  9  3  3  3  1  5  7  6  6  4 11  9  9  6  4 10  9 12  3\n[92593]  3  2  3 12  6  6 12  3  9  1  9  1  9  5  7  8  9  7  5  4  3  1  3  8\n[92617]  7 11  8  5 11  1 11  2  7 12  6 10 10  1  1  2  3  1  1  4 11  6  1  8\n[92641]  2 11  9  6  2  1 12 11  5  9 11  7  9  9 11 12  8  4  5  7 12 10  7  6\n[92665]  9  6 12 10  1  6 12 11  5 12  6  5  8  7  5 10  2  5  6  4  2  5  8  4\n[92689]  3  5  4  2  5  3  2  3  1  7  3  6 10  5  5  6  4  1  7  5  2  5 12  9\n[92713]  2 12  2 10  6  7 10  6 12  5  4  6 12  3  1  4  3  6 11 10  9  6  8  3\n[92737] 11  7  2  1  8  5  3  7 11 11  6  7  2  3 10 10  5  6 12 10 10  5  2  8\n[92761] 10  1 12  2  6  7  7  9  6  6  1  1  8  1 12  4  5  4 10 12  3  3  7  6\n[92785] 10  4  2  5  1  1  6  5  5  1  4  5  4  5  6  6  2  7 11  5  5  1  8  6\n[92809]  9  2  9  7  8  8  2  4  3  9  5  8  1  6  2  6 12  6  2  2  9  2  6 11\n[92833] 10  6  1  6  7  2  1  2  1  9  8  5  5 11 10  4 11  2  6 12  7  2  5  5\n[92857] 12  7  1  3  9 11  1  6  5  1  2  4  2  2  2  2 12  4  6  1  8  5 12  2\n[92881]  1  5  9 10 12  6  1  5  3  7  9  6  5 12 11  5  3  6  3  7  2  7  5  4\n[92905]  1 10  4  4  3  4  5  5  1  4  6  4  4  2  4 10  6  1 11  2  2  4  4  2\n[92929]  6  2  3  2  7  1  1  3  6  9  4  1  2  2  4  1  3  2  6  3  4  1  3  3\n[92953]  2  6  5 11  9  3 10 10  2  4  7  1  3  6  6  6  3  1  7  9  5  7 11  7\n[92977] 11  7  5  6  5  8 10  6  9  6  6  8  7 11 10  2 11  8  9  4  6  6  1  8\n[93001]  1  5  4  3  3  1  3  3  1  3 10  1  5  1  9 12  7  3  9  9  5 10 11 11\n[93025]  4  6  6  4 10  6  7  7 10 12 10  2  7  6 10 10  4  3 10  3 11  7  2  6\n[93049]  2  4  4  7  3  9 11  4  4  6  7 10  6 11  8  1 11 12  7 12  2 11  7  3\n[93073]  5  2 12  2  5  9 12  4  1  4  4  7  5  4  3  7 12  3  3  8 12  4  8  9\n[93097]  4  3  4 12  5  5  1  1 12  5  5 12 10 10  5 11  8 10  7  5  3  3  1  7\n[93121] 11  7  2  1  2  1  3  2  4 10  4  3  4  4  3  3  8  5  3  1  5  3 11  5\n[93145]  6  6 11  4 12  2 10 12  6  1  6  2  1  7  5 12  1  3 10  9  3  7 10 10\n[93169] 10  8 10  6  5 11 11  5  4 10  3  2 10  5  4  1 12 11  9  3 12  6  3 11\n[93193] 12  6 12 11  8  1  4  4  2  1  1  2 10  7  8 11  7  5 10  1  3  2  6  6\n[93217]  8 12 12 11 12 12  9  7  4  7  7 12  5  8 10 10  3  2 11  5  6  2 12  9\n[93241]  4  5  3  5 10 10 12  6  6  3  3 12  1  2  7  2  3  1  7  8  6  9  7  6\n[93265]  8  2 12  8  2  9  7  1  4 11  8  2  7 10 12  3  2 12  5  6  8 10  7 11\n[93289]  9  7  5  4  5 10  9 10  4 11  4 11  6 11  9 10  7 11 12 12  3  6  9 12\n[93313]  5  7  4  7 10  3 12  1  5  7  8  5  8  4  7  2 10  9 11  7 11  8  9  8\n[93337]  8 10 11  9  8  9 11  1  7 11  8  1  9  7  8  7 12 12  1  4 11 10  9  9\n[93361]  3  6  8  8  2 10  6  5  2  4  5 11  1 12  8  8  7  7  3 12 11  5  5  1\n[93385] 11  3  5  7 11  1  7  6  7  5 11  6 11  7  5  6  5  6  1  3 12 12  2  3\n[93409] 10  7  8  6  7 10 11  7  8  5  5 10 12 11  3  3  9 10  3  6 12 10 10  4\n[93433]  3  4 11  7  2  1  4  1  4  6  2  7  2  4  1  2  6  3  2  6  7  9  8 10\n[93457]  8 12 11  7  3  2 12  3  2  3 11  7  5  5  6 10  4  5  8  6 12 11  7  2\n[93481]  4  4  1 11  8  8  1  4  8  2  3  6  3  8  3  8 11  2  1 10  8  1  3 12\n[93505]  9  8  4  4  2  9  7  8  8  7  6  2 10  5 12  8 12  9 10  6  5  1  3  6\n[93529] 11  9  6  9 10 11  6  5 11  9  3  5 10 10  5  2 10  4 10  2  4  3  5 12\n[93553]  1  1  2  7 10  2  7  4  7  3  3  1 10 10  8  3  3  3  2  8  4 12  2  2\n[93577] 11  5  6  3 11  2  4  2  4  3  7  8  4  2  1  5  6  7  1  1  2  2 11  7\n[93601]  5 10 12  3  7  8  8  2  1  6 12  2 12  1  2 12  9  4  3 12  5  5  3  4\n[93625]  6  9 11 11  5  3  2  4  6  6  1  7  8  1  1 12  4  6  3 12  6  5  6  3\n[93649] 10  8  7 11  1  6  4  5  5  2  3  4  7 10  6  9  6  9  1  6  5  1  2  6\n[93673]  4  6  6  6  5  8  1  2  5  1  1  4  6  5  3  1  6  9 11  7  4  1  2  5\n[93697]  7  6  3  2  5  6 10  3 10  3  8  1  2  4  9  4  3  3  8  1  5  4  5  4\n[93721]  2  5  7  9  7  3  3  6 12  2  7  1  2  5  1 12  3  2  2  2  2  9  6  2\n[93745] 12 12  2  4  5  6  5  1  5  2  8  7  6  8 12  8  9  7  6  2  4  5  7  6\n[93769]  5  7  3  8 10 12  4  9  9  5  6  1  5  2  9 11  5  3  9  5 10  5 10  1\n[93793]  9  1  9  2  3  3  1  1  6 11  6  5  4  2  2  7  7  7 11  8  7  7  9 11\n[93817]  3  4  3  5  3 12  1  9  3  5  3  4 10  2 11  5 11  4  1  7  3  4  1  1\n[93841]  7 10  5 10  4  9  3  6  4  7  4  9  6  4 12  4  4  8  1  8  3  6  2  4\n[93865]  1  3  3  2 11  6  3  5  7  3  6  5  2  5  1  3  1  3 12  7  8  2  6  2\n[93889]  4  8 12  7  3 12 12 12  7  6  5  3  7  3  1  8  9  8  6  9  1  5  8  3\n[93913]  2 11  2  1  5  9  6  7  4  6  8  1  5  7 11  1  3  4  3  9  5  3 11 11\n[93937] 11  3  9  7  1 10 12  1  5  1 10  1 10  8 11  5 11  3  3 10  4  9  8  3\n[93961]  6  4  5  5  8  8  6  4  5 12  4  5  5  8  6  6  5  5  9  8  6  5  8  5\n[93985]  6 11  8  9  4 10 10  6  5 10  9 10  5 11  9  6  5  3  3  3  9  1  5 10\n[94009] 10  4 12  6  3  1  5  4  8  7  4  5  1  8  1  4 11  9 11  1  3  1  3 10\n[94033] 11 11  5  1  7 12  8  5  5 10  4  5 11  7  8  4  3  6 10 11  2  5  7 11\n[94057]  1  6  8  5 11 12  8  4 11  6  5  1  5  3  2  5  3 12  5  3  1  8  5  3\n[94081] 10  5  5  6  9  2  9  4 11  5  2  5  1  1  5  6  5 10  7  9  9  8  7  9\n[94105]  5  7  6 11  4  3  1  3  4  3  1  2  4  5  4 12 12  2  9  9  5 12  4  8\n[94129]  8  7  5  8  5  1  3  9 12  7  3  4  4  4  4  3  4  3  2  4  1  3  4  1\n[94153]  3  1  4  4  3  1  2  1  4  1 12  5  2 12  7  1  4  7  3  4  4  4  9  6\n[94177]  4  9  8 12 12  5  7  1  7  4  6  2  5  6 10  7 11  5  1  7  2  3 11  2\n[94201]  7  8  6  4  8  8  1  1  5  5  7  9  4  3  8  4  5  5 10 10 10  8 11  4\n[94225]  4  9  1  9  9  7  9  4 12 12  9  7  8  9 11  5  8  1  4 10 10  4  9  1\n[94249]  6 11 12 11  1  4  4 12 10 12  6  9  1 10  7  9  4 11  7  1  7 11  6  5\n[94273]  2  4  3  5  7  3  2  1  1  2  4  4 10  6 12  6  4  6  9  4 12  9  8  6\n[94297]  4 11 10  2 10  1  5  5 12  9  2  8 12  9  5  3  2  5  8  3  2 10  3 10\n[94321]  7  7  2  8 11 12  9  8  1  1 10  2  9  9  7  7 11  1  3  1 10 11  5  9\n[94345]  2 10 10  8  1  3  2 11  3  7  8  2  5  5  7  2  6  6 10 11  6  5  9  4\n[94369]  7 12  6  7  9 10  6  7  9 12 12 12  3  6  2  5  4  5 11  1  1  3  4  1\n[94393]  7  1  2 10 10  9 10  6  9  9 12  5  8  9  1 12  3  9 10 11  2 10  8  1\n[94417] 10  5  1  6  4  2  7 10  3  2  6  1  4 11  8  1  3  5  1  1 12  1  6  6\n[94441]  7  6  9  2 11  9 12  2  6 10  4  7  5  7  3  4  3  8 10  6  1  3  6  4\n[94465]  1  7  4  1  1  7  9  8  3  4 10  3 11  2 12  9 10 10  5  1  8 11 11 10\n[94489]  5  2 11  2  5  9  1  4  4  2  9  2 10  2 10  9  3  6  5  3  6 12 11  9\n[94513]  7  5  3  9  3 12 11 11  8 10 11 11 11  2  3  6  8  9  7 10 10  8  4  4\n[94537]  7  7  2  3  4  7  8  3 10  7  8 12  4  1  2  6 11  4 10  4  7  7  5  2\n[94561]  7  6  5  1 12  8  7 10 11  7  4  4  7 10  8  6  1  1 12 10  3  1  8  6\n[94585] 11  3  7  4  8  6 12  8  7 12  6  3  7  1 12  7 12  2 10  5 11  5  8  7\n[94609] 12  6  4  8  4 11  1  3 10  5 10 11  5  6  9 12  2  1  2  2  8 11  7  3\n[94633] 11  2  5  3  4  2  4  4  5 11  1  6  1  3  8  9 10  6  5  7  8  7  6 11\n[94657]  7 12 10  9  1  9  9  5  3  4  6  9 12  4  4 10 12 11  1  8  6  5  3 10\n[94681] 10  6  6  7 10 12  3  4 11  3  4 11  5  7  6  8  7 10  6  7  3  1  7  7\n[94705]  3 12  3  2 12 10  1  9  2  5 10 12  7  9  2 12  2 10  7  5  5  5  8  6\n[94729]  6  6  5  7  6 10  5  9  4  2 12  4  7  2 12  2  5 12  9 11  8  4  6  3\n[94753]  7  6  4 11  9 12  5  3  4  2  3  8  5 11  9  3 10  5  7 11  5  5  7  5\n[94777]  6  5  7  4  1  5 12 10  9  8  3  4  1 10 11  2  6  5  7  3  4 12  9  8\n[94801] 11  5 12 12  6 10  3 12  1  8  5 10 12  9  1  3  6 10 10  1  9 11  8  4\n[94825] 12  8  9  4 11 11 11  1  2  6  5 11 12  9 11 12  4 10  5  2  7  9 11  6\n[94849] 11  2  2 12  1  9 10  7  5 10  5 11 12  8  6  4  2  9  1  6  8  5  4  2\n[94873] 10 12  5  3  4  9 12 12  9 11  8  9  5 11  9  2  7  5  9  7  5  5 10  7\n[94897]  4  5  3  5 11 11  2  1 12  6  9  5  1 11  9  4  8 11  3  4  7 11  6  7\n[94921]  4  7  7  3  4 12  4  7  4  1 12  7 11  1 10  9  7  3 12  9  8 12  9  2\n[94945]  9  5  2 11  8  3 11  3  9  7  9  1  7  4  1  6  2  2  3  6 10  6  7  8\n[94969]  3  5  2  6  6  2  7  5  1  3  6  5  6  1  3  4  5  6  1  5  8  5  4  4\n[94993] 10  6  3  2  4  7  7  2  9 12  2 10  2  3 11  3 11 10  5  2  3  4  2 10\n[95017]  2  1  3  2  5  9  1  1  6  2  3  6  2  1  5  4  2  4  2 12  3  1 11  1\n[95041]  6  7  5 11  5  1  9  2  9  1  4  4  2 11  4 12  7 12  2  4  2  8  2  4\n[95065] 10  8  7  3  7 12  4  4  5 11  4  4  8  9  5 11  5  2 11 11  8  6  7  4\n[95089] 12 10 10  5  8  6  3  4  5 12 11  1  1  7  9  3  6  3  1  3  5  7  7 10\n[95113]  8 11  3  5 10  2  7  1  1  2  2  1  5  1 11  6  7  5 10 10 11  4  3  4\n[95137]  5  6 11 11  4 12  3  7  1  9  6 12  7 12  7  9 11  3  8  5  3  7  4  1\n[95161] 11  4  4  5  3  7  1  5  6  4  4  5  3 12  1  4  3 12  5  5 12  4  3  5\n[95185]  7 12  3  5  5  7  7 11  7  2  5  5  3  3  4  3  7 10  2  5  6  4  5  7\n[95209] 12  2  5  2 12  9  2  9 11 12  2 12 10  6 12 10  2  3  8 10  9  5  3  5\n[95233]  1 11  5  8  3  3  3  2 10  9  8 11  8  7  5  1 12  1  8  1  4  5  4 12\n[95257]  8  8  5 12  4  3  9  2  9  3  2  7  7 11  7  7  3 12  3  3  1  3  2 12\n[95281]  9  5  5  8  7  2  4  2  3  7 11  3  7  4  2  6  2  4  7  9  7 12 12  8\n[95305]  9  1  8 12 11  5 11  1 10 12  7 12  5  9  9 11  4  4  6 11  2  5  4 10\n[95329]  1 10 10  7  2  2  1 11  9  7 12  6  1  7  3  9 11  4  8  7  1 12  4  4\n[95353]  2  6 10  1  6  5  2 11  1  5 10  5  2 10  4  2  5  3  1  5  7  4  7  5\n[95377]  5  2  2  6  5  2  6  7  9  9  3 12  7  3  4  5  5  2  9  3  3  2  9  4\n[95401]  3  4  8  6  6  2  8  3  4  8  3 11  1  5 10 10  7  5  9  5  8  3  5  8\n[95425] 10  7  7  1  7  3 12  3  4  3 11  8  7  2 10  2  5 11  9 10  9 12  5 10\n[95449] 11  9  7 11  9 10  9  4  6  6 10 12  9  6  2  4  7 11  4  3  5  6 12  7\n[95473] 11  1  9 12  7  2  2 10  6  4  7 11  3  3  8  2  5  5  7  7  1  9 12  9\n[95497]  3 10  2 10  1  8 12  1  4 11 10  8 10  2  6  1  7 11  4 10 12  4  7  7\n[95521]  2  5  9 11  2  5  6  1  7 10 12 10 10  3  3 11 11  4  7  6  4  6  6  4\n[95545]  9 12  9  2  5 12 11  8  8  9  4  3  4 10 10 10 12 10  8  6  9  6  6  7\n[95569]  5  2  7  5  2 11 11  6  5 12  3  5 10  9  1 10  6  9  4  7 11 10 12  4\n[95593]  7  8  4  7  3  7  9 11  7  7  5  8  6  1  5 12  4 12  3 10  2  2 12  8\n[95617] 12  2 11  3  6 12 12 10  2 12  7  9  5  8 12 11 12  8  7  3  8  8  5  8\n[95641] 11  6  3  2  2  6  1  6  4 12  5  3  4  5 10  2  9  4 10  5 12  5  3 12\n[95665] 12 11  9 10  7  6  5 10  2  4  6 10 11  7 11 12  3  6 10  5  7 11  2  2\n[95689]  7  9  9  7  6  4  4 12  6  9  8 11  2 10  6 10  1 11  2  7  5  1  7  2\n[95713]  8  2 11  8 11 12  1 11  7 11  8 12  6 12 10  4  7  4 10  6  8 11  7  2\n[95737]  3  2  4  5  3 11  3  2  5  1  2  4 10  6  7  9  9  4  1  7  7  3 10  7\n[95761]  9  3  7  2  1  8  5  5  5  1  8  3  4  3  4  4  5  3 12 12  8  1  5 10\n[95785]  2  9 11  6  4 12  5  1  8 10 11  8  2  3 11 10 10  1  1 12  8 12  1  7\n[95809]  3  4  6  4  8  2  8 10 10  4  7  1  1 10  1  6  5  7  9  4  1  7  5 12\n[95833]  3  8 10  6  8  7  8  1  7  8  9 11  6  7 12  1 10  9  7  5  6  6  1  7\n[95857]  4  9  9  7  4  7  2  6  9  7  1  2  4 11  8  8  7  8 12  3 11 11 10  8\n[95881] 10  3  3 11  6  7  2  4  4  6  6 10  3  9  3  9  9  8  9  3 12  9  1  1\n[95905]  6  1 12  4  7  3  7 12 10  1  7  3 12  2  9  6  7  3 12  9 12  9  2  2\n[95929]  7  6 11 11  1 10  8 12  8  8 12 11  3  9  3  5  2  7  1  2 11  2  9  5\n[95953]  4  1  5  4  1  1 10  7  9  9  2  4 11 11  2  5 11  9  1 12  4 12  6 12\n[95977] 10  7 12  4  7  9  5  1 10  9 11 12 11  9  6 11 12  2 12  2  4  2  8 10\n[96001] 11  8  5  8 10  7 12  6  4  6  3  3  4  7  2  2  5  3 11  9  8  7  1 11\n[96025] 10  4 12 12  8  2 12  1  9 12 12 10 11  8  2  9  3  8  1  3  8  4  1  6\n[96049] 11  2  6  8 10  6  1  3  7  2  5  9  8  1  8 12 10 10  1  4  6  2  9  5\n[96073]  2  2  1  6  3  5 10  1  8  2  4  6  4 10  9  3 12  8 12 11 12 10  1 10\n[96097]  7  3  7  8 10  8  1  8 11  7  3  6 10 11  7  9  9  3 11  1 12  4  6  2\n[96121]  3  4  9  4 12 10 10  3  8  1 11 11  9 11  9  3 11  7  9 12  5 11  2  4\n[96145]  8 12  3  2 11  8  2  6 11  3  9  1 10  6  1  1  9  8 11  7  7  5  9  2\n[96169] 10  9 12  8 11  1 11 12 11  5  7  9  8 12 12 10  2  1 12 10 10  4 11  7\n[96193] 11 12  2 12  5  9  4 12  7  1  9 11  6 11  8  9  1 12  1  1  4  6  7  2\n[96217]  1 11 12  5 12  3  9  7 10  8  5 11  3  9 10  7  5  5  5  5 10  4 10  4\n[96241]  5  4  9  3  3 10  8  4  7 11 12  5  8  4  6  9 10  5  1  2  6  3 12  2\n[96265]  1  5  7  9 12  1 10 11 10  9  1  9  1  9  8  8 10  1  2  5 10  9 11 10\n[96289]  7  7  7  4  9  7  6 11  7  6  8 10 10  7 10 12 12  8  5  5  6  3 10 12\n[96313]  9 10 10 10  6  5 12  3 11 11  1  4 11  4  5  5  9  5  9  7  6  2  7  1\n[96337]  8  7 11 10  5 10 10  6  8  5  1  5 11  8  4  7  3  7  7 11 11  8 11  2\n[96361]  1  1  3  5  9  8  1  3  8  2  4  5  8  7  5  1  6  1  5  5  6  7  8  5\n[96385]  3  8  6  1  1  3  8  9  9  8 11 12  1 12  3  5  6  7 11  8  2 11  3 11\n[96409]  1  1 11 10  1 11  3  7  6  3  6 10  1 10  4 12  5 12  1  7  9 10 12 12\n[96433]  8  7  5  4  4  2 11  7  2 10  2  8  6  3  7  4  2 11 11 10  3  9 12  3\n[96457]  4  5  1  7  8  2  7  2  5 12  2  1  1 12 11  1  8  6  5  1  6  3  7  7\n[96481] 11 10  7  4 11  1  6  9  9  3 11  1  7  6  6 10 10  9  5  3  3  7  2  4\n[96505]  5  8  5  6  8 12  8  5  4 11  3  9  1 10  9  5  1 10  2  8  9  4  6  1\n[96529]  4  9  4  5 11 11  7  9  6 11  3  6  7  4 10  8 12  7  1  9  7  2 11 12\n[96553]  5 11 11  6  7  6  8  5  9  7 11 11  3 11  7  9  8 10  8  8 12  9  5 12\n[96577]  6  1  8  2  4 12  7  1  7  8  2  9  2 11  4  1 10  7 12 11 10  6  6 10\n[96601]  4 10 12 11  2  7  4  1  7 11 11 12  6  3  7  2  5  2 11  8  6  3  1 12\n[96625]  4  2 11  2  7  3  1  4 12  1  8  1 12  7  4  6 10  6  1  9  2 10  1  4\n[96649]  6  1 10  3  5  5  1  2  4  6  6  7  5  3  5  4  6  2 11  8  2  1  4 12\n[96673]  5 12  6  6 12  6  7 11  3  6  5  4  4  4  1  3  6  9 12 12 11  2 12  5\n[96697] 11  1  5 10 12  3  7  9 10  1 12  5  8  2 10 10  7  5  5 10  9  4  3 10\n[96721] 10  2  2  3  1  5  3  2  6  9  9 11  2  7  3 10  8  4 11  4  2  9  1  2\n[96745] 12  2 12  1  6  3  5  4 12  9  7 11  4 11  6  7  1  5  4  4  6  6  2 12\n[96769]  5  5  5  1  4  8 10  5 12  3  4 10 12  1  3  4 10  1  3  7  5  7  5  8\n[96793]  3  6  5  3 11  3 10 11 10  7  6  3  5 10 11  9 10  6  2  1 10  6 11  3\n[96817]  3  3  6  1  4  7  5  8 11  4 10  4  2  1  1  5  3 12  2  6  9  3  8  3\n[96841]  5  9  1 12 11  8 11  1  3 11  8 12  1  8 10  6  2  5  9  7  2  5  6 12\n[96865]  4  2 12  6  3  2  7  2 11  2  8  2  2  9  2  7 10 12  8  1  7  3 10  1\n[96889]  5 12  5  7 12  5 12  7  5 12  4  9 12  3  7  9  9 10 11 11  5  1  2  8\n[96913]  9  6  5 11 11  3  3  1  6 10  9  8  2 12 10  9 10 11  2 10  4  2  4  2\n[96937]  6  9  7  8  9  3 10  2  3  8  4 10  3  7  3  1 11  1  4  6  7  9 10  4\n[96961] 11  1  3 12 12 11 10  6 11  2 12  5 10 12  6  2  1  1  3  7 10 10  8 12\n[96985] 10  4  3  3  8  3 10  9  1  4  6 11  6  8  3 12  9 11  7  4  6  4  1  8\n[97009] 11  6  4  8 10  2  5  1  7 10  6  3  6  3 11  7  5 10  6  5  2 10  2  2\n[97033]  2  2  7 12 11 10 10 10  4  5 10 12 10  1  7  7  8  8  9  5  3  4  8  2\n[97057] 11  1  4  3 11  3  4  4  9  2  7  4  2 10  7  9  1  4  2  9  2  5 10 11\n[97081]  8  2  7 12  9  1  5 11  4 11  9  3  2  9  1  6  2  9  2 12  7 11  2  2\n[97105] 11 12  7  4  6  7  5 12 12  9  6  1  5  7  3  5  8  6  5 10  4 11  5  2\n[97129]  9 12  7 11  7  1  1  6  2  5  6 12 11  1  9 11  9  2 10  1  7  6  1  2\n[97153] 10  4  5  7  7 10 10 11 12  5  6  3  4  5  8 11  5  8  3  1 11 10  9  4\n[97177] 11  8  3  2 10 12  8  1 12  6 11  6  8 11  6  7 12  9  6  5  8  5  6  3\n[97201]  5  6  8 11  3  1  5 12  7  8  5 12  2  7  1  6  7 12  5  9  1 10  8 10\n[97225] 11 11  9  5  4  9  5  5  2  4  9  6  5  7 10  1  6  5  7 12  3  7  6  8\n[97249]  7  6  3 10  8 10  2  6  2 11 10  7  4 10  8  2 11  9 10  9  4  5  1  4\n[97273]  7  6  7  7 10  5  7 11  7  8  6  5  8 12 10  8 11  9  6  6  9 10  2 11\n[97297]  4  9  4  7 10 12  6 11  1  2  9  5  9  1  4 12 11 10 10 12  6  4  7  3\n[97321]  8  3 11  8  7  6  6  4  9  6  6 11  1  4  3  4 11  5  6  7 12  6  8  6\n[97345]  5  9 10  7 12  3  9  7  9 11  9  4 10 12 11  6  8  5  2  7  6  5  9  5\n[97369] 10  2  3  7 11  4  1  9  3  1  6  4  4  4  8  5  5  7  5  4  5  6  8 11\n[97393] 10  3  5  7  8 10  4  3  1  1  2  1  5  6 10  3  9  7 12  1  6  1 10 12\n[97417] 11  9  3  8  2  1  9 10 12  4 12  7 10  8  9 10 10  1 10 11  8  4  8 10\n[97441]  3  8 10  9  8  8  3 10 11  7  7  3  6  8 10  3 11 12 12 11  2 10  5  9\n[97465] 10  8  3  9  6  8  6  9  5  3  6  5 11  2  5  7  3  9 10 11  2 10 11 12\n[97489]  4  5  1 12  9 11  4  8  1  9 12 11  6 11  9  2 12 12 10  8 11  6 12  8\n[97513]  8  3  9  8  6 12  8  5 11  8  8  9  4  6  8  9 11  7  5  3  4  8  7 11\n[97537]  4  4 10  8 12 12  6  9  7  3  7  6 10  2  1 10  8 10 11  9  1  2  6 11\n[97561] 11  2  4  4  4  6  7  1  2  5  2  7  8  1 10 10  7  7  7 11  6  8  9  5\n[97585] 11 12  5 10  5  9 11  6  5 11  6  3 11  7  9  9  9  9  3  1 12  7  8  8\n[97609]  5 10  7  2  4  6 11  8  4  1  9  2 10 11  4  5  5 11  7  9  6  4  3 12\n[97633]  6  9 12 10  5  8  3 11  5  8  1  8 10  4  3  8  2  2  6  5 11  7  5  8\n[97657]  6  7 12  3  5  8  7 11 12 11  7  8 10 10  1  9 12  3  2  5  8 12  9  8\n[97681]  3 10 11 12 11  2 10 11  5  1  4  7  1 10 11  9 12  5  3  4  7  6  1  5\n[97705]  3  7  1  2  7  3  5  2 11  2 12  1  6  2  1  5 11  4  9  7  4  6  4  9\n[97729]  9  6  6  8  8  4  3  6  5  8  4 11  1 12  1  7  9  3  3  9  3  1  6 11\n[97753]  5  6 12  1  2 12  8 11  7  1  9  3  1  6 12  5 10  1  7  7 11 11  2  1\n[97777]  4 10  9  1  9 10  8  4 11  5  4  2  6  5 11  1  2  2  5  1 10  9  9 11\n[97801]  1  5  3  2  8  8  8  5  5 11  7 11  3  5  6  5  2 10  9  7  3  6  3 11\n[97825] 12  9 11 11  1  8  7  5  9 11  8  1  7  2  1  7  1  2  5  1  3  3  5  6\n[97849]  8  6  7  7  3  6  4 12 12  3  9  8  7  1  1 11  7 10 10  1 11  3  4 10\n[97873]  6  5  8  9  8  2  5  5  2 12  7 11  5  2  6  8  5  7 11 11  7 10  9  9\n[97897] 11  3  4 12  3 11 12 11  2 10  5 12  8 10  1  1  8  5  8  6  9  1  8  8\n[97921] 11 10  4 11 10  9 10  7 10  9 12  4  5  1  5  1  7  9  6  8 11  5  6  1\n[97945]  8  7  8  1  7  2  8  9 11  4  9 10  2 11  3  5  5 12  1  3  7  7  4  2\n[97969] 10  6  6 12  7 10  7  1 12  1 11  8  5  6 10  8  3  1  6  9  2  8  3 11\n[97993]  1 10  6  1  8  8 10  9 10 12  5  8  1  5  1  2  6 12  5  7  3  6  7  5\n[98017]  4  8 11  1  7  9  8  6  1 10 11 11  3  1  5  4  9  9  3  2  8  8  5  7\n[98041] 10  1  7 11  5 12  9 11  8  5 11  2 10  4 11  6  1  8  5 12  8  7 12  8\n[98065]  2  5 10  8  9  4 11  9 12 12  5  6  9  8  9  1  6  7  1  1  7  7 10 10\n[98089]  4  2  8  9 10  3  9  1  9  4  1 11 10  3  5  8 12  8  8  3  9  7  6  4\n[98113] 12  8  9  1 12  7  8  3  3 11 12  4  9  4  3  7 10 12  7  2  9 10  6  4\n[98137]  8 11  3 11 12  1 10  8  2 11 12  9 10  1  3 10 12  3  5  2  5 10  2 12\n[98161]  3  3  6  3 10  6  8  7  6  8  2  3 11  1 12  9  6  5  9  1  5  2 11  9\n[98185] 12 12  7  6  6  2 10 10  8  5 10  6  6  5  8 10  2 12  7  4  7  6  8  8\n[98209] 11  6  9  5  4  4  1  3  2 11  9  1 12  2 10 11  5  1 12  8 12  1  5  1\n[98233]  1  9  3  2 10  7  4  4  9 11  1 12  1  8  8  5  2  1  7  7  6  1 10  6\n[98257]  1  9  7  7 11  6  6  8  4  4  6  4 11  5  1  1  6  6  2  3 10 10  4 12\n[98281] 12  4  5  3  9  5  8  7  9 10  3  2  9 11  6  1  5  3  6  2  9 12 12 12\n[98305]  4  7  1  9  7  5  8  8 12 11 10 12  7  2  1  9  3 12  2  5  9 10  5 12\n[98329]  8  2 11 10 11 11  6  8  2  9  8 11 11  4  3  1  9  9  4  3  6 10  1 12\n[98353]  4  5 12  8  8  4  2  3  4  2 10 11  6 10  9  3  6  9 11 12  5  8  5  3\n[98377]  1  1  2 10  5  4 10 11  8 12  2  5  8  1  7 11  4 10  8  6  1  2  2  9\n[98401] 12  1  3  7  6 12 10  1  3  6  8 12  1  2  1  6  1  7  6  9  1  1  5  1\n[98425]  2  6  1  8  9 11  1  9  9  5  1 11  9  5  7  6  8 11  4 12 11  4 11  6\n[98449]  7  4  5 12  4  8  5  3  3  5  4  3 11 12 12  6  5  7  3  6  8 10  9  3\n[98473]  9  9  1  8 12 11  6  5  6  9 10  4 12 11  7  3  2  3  1  7  9 12  9  6\n[98497] 10  1 10  7 11 11 12  6  3 10  5  5  8  7  2 11 11  9  3 11  7  5  6  7\n[98521]  1  1 12 12  8  9  2  6  3  5  4  6  8 10  5  7  7  1  6  6  8  4  8  5\n[98545] 12  8  6 10  4 11  7 12 10  1  3  2 10  3 10  3  5  9  5 10 10  5 12  1\n[98569]  3  5  8 10  7 10  3  5  9  8  4 12 12  3 11  1  1  2  7 12  5 10  7  5\n[98593]  8  6  1  3  7  1 12 11 10  6 12  3 11  8  1  3  7  1  1  1 10  3 11  5\n[98617]  9  5  4  6  3  3  5 11  3  6  4 10  3  5 12 11  5  9  1  1  7  3  7 12\n[98641]  9 12  2 12 11  6  2  9  8  4 12 10 10  9  9  1 10  5 10  8  7  7  1  5\n[98665]  1 10  4  3  6  8  6 11 12  2 12  6  3  4  5  7  7  8 12 10 10  7  6  7\n[98689]  9  7  1  6  9 11  7 10  9 10  6  6  8 10 10  2 11 10  8 10  1  6  5  3\n[98713]  4 11 10 12  6 10 10 10 12 12 12  3 12  3  2 11  5  3  3 11  1  5 11  3\n[98737]  3 10  3  5 10  7  2 11 11  2  7 10  5  2 11  2  4  9 10  1 12  7 12  3\n[98761] 11  1  9  2  8  3  8 11  8  8  3  9  8  4  5  4  7  5  5 10  5  1 10  3\n[98785]  9 12  2 10  8  8  5  5  2  7 10  2  9  1  4 11  9 12  4 10  2  4  6  2\n[98809]  3  5  6  2  6 10  6  8 10  8  6 10  6  3  6  6  1  5  4  3 10  3 11 12\n[98833]  7  4  1  8  9  7  1  8  2  7  9  2  1 11  1  2  9  9  9  7 12  6  7  2\n[98857]  5  1 10  6 12  6  4  7 10  4  5  8 11 11  4  7  9  1  9  6  3  7  8  4\n[98881]  4 12  2 11  9 12  9  6  2  2 11 10  3 10  1 10  7  2  2 11  1  8 10  6\n[98905]  9 11 11  2 10  9  9  3 11  1 10 12 10 11 12  3 10  4  7 10  8  7  5  3\n[98929]  6  9  7 10  2  7  6  1  8  3  4  5 10  7  5  5 11  5  4 12  4  2  5  1\n[98953]  4  6 11  5  3  1 12  3  9  3  3  7 11  7  8 11  9  6  8  4 11  4  8  2\n[98977] 10 12 10  1  5  5  9  2  1 10  9  7  6  8  8  5 12 12  5 10  6  3  2 12\n[99001] 12  4  9  8  1 11  2  8  5  6 10  9  1  8  2 10 11 10 10 10  3  1  9 10\n[99025]  4  3 11  9 10  8  5 12  2  2  5  2  3 10  6 11 10  7 10  3 10  9 10  2\n[99049]  3  1  3 12  1  3  2 12  7  8  5 12  9 12  6  3  1  6  6  9  4  9  3  9\n[99073]  5  1  4  5  1  6 11  8 10  8  3  7  7  1  8  5  6  6  1  6  6 12  9  7\n[99097]  6 11  2 10 10  1  3  9  2  9 10 11 12  8 10  2 10 10  5 10  3  9  5 10\n[99121] 12  2  2 12  2  7  5  7  6 11  2  9  8 10  1  2  7  9 11 11 10  7 11 12\n[99145]  4 11  4  5 11  9  4  2  9  3 11  8 12  9  2  6 12  7 11  2 10 10 12 12\n[99169]  1  5  5 12  9  7 12 11  7 11  6 12 12 11  8  8 10 11 12  6  9 12 12  7\n[99193] 11  5  8  8 12  1  6  8 11  1  7  3  6  8  1  3 12  1  9  4 12 11  9  6\n[99217]  4  7  3  2 11 10  2  2 10  9  9  1  2  1  4  6 12  8 12  8 11  7  7  1\n[99241]  5  5  6  1  9 11  3  9  4  8  5 10 11  5  7  6 12  7 11 10  5 12  4  7\n[99265] 12 10  1 10  4  2  5  7  4  5  9  3 11  1  1  8  9  9  7  3  5 11  2 10\n[99289] 12 10  9  3  8  6 10  5  7  8  1  8  4  7  8  8  5  3  5  8  8  4  6  4\n[99313]  9  2 11  2  3 10  6  6  5  5 12  5 10  8  5  3  4  3  9  9  5  3  2 11\n[99337] 12 12 12  5  7  6  6  8  6  8  1  3  5  1  3 11  1 12 12  9  9  3  8 10\n[99361]  4 12  9  7  2  7 10  9  6  7  5  8  5  6  3 11 11 11  9 10  7 10  8  2\n[99385]  5 11  5  2  9 12  5  3  9  1  3  6 12  9  3  5  7  4  7  9 12  3 12  7\n[99409]  8  6  3  3  1  8  3  4  8  8  3  3  2  1  3 11  5  5  6  3  3  7  7  5\n[99433] 10 11  7  1  5  6  5  8 11 11  8  1  8  5  4  9  9 12 11 12  1 12 12  4\n[99457] 12  1  8  2  8  4 12 10  1 12  7 12 10  8  7  6  2  6 12  6 12  4  7  3\n[99481]  4  2  1  9 11  6  4  7  2  4  4 11  8  5  2  9 11  9  3  6  7 12  1  7\n[99505]  9  8  5  7  9 11 11  7  4 11  4  2  8  7  3 10 11  7 12  7  3  8  6  2\n[99529]  1  9  5 11  5 12 10  1  7  9  2  6  1 11  3  8  1 10  2  8 12  4 11 11\n[99553] 10 10  8  7  7 12  4 11  3  2  9  9 11  2  3 10 11  5  7  1 10  2  5  1\n[99577] 12  4  5  6  9  9  1  7  8  4  4 11 10 11  2  4 10  9  8 11 10  2  1  8\n[99601]  2  3 11  7 11 10  2  2 10  9  8  3  9 10  9  4 12 11  9  5  7  5  6  4\n[99625]  7  5  5 10  4  6  1  8  4 12 12  8  5  8  1  8 11  1  6  6  8  2  6  3\n[99649]  5  1  7  3  1  1  2  1  7  1  8  4  1  1  1  1  9 12  9  3  3  3  2  5\n[99673]  4  4  4  1  1  3  3  7  9  8  1 10  7  6  8  2  5  3  3 10 12  9  5  4\n[99697]  2  9  9 11  9 11  4  2  5  7 11  4 11 12  9 10 10  7  7  4  9  7  7 12\n[99721]  3  2  6 11  3  5  8  2  2  4  3  9  5  7  8 12  3  4  5  7  7  7  2  5\n[99745] 10  1  2  6 11  9  1  6 10  6 10  5 10 12  6  6 11  1  5  1  4  5  2  8\n[99769]  6 10 12  3  3  3 12  3  9  6  8  4  2  9  9 11 10  3  9  6  2  2  7 12\n[99793]  4  5  7  2  8 10  5 10  9 10 12 11  6  6  2  7  3  8  8 10  3 10 11  1\n[99817]  6  7  6  2 10  1  3  2  1  3  9  3  9  6  6  1 11  9 12  7  9 11  5  6\n[99841]  6  7 12  7  2  1  1 10  1  6  4  9  3  4  2 11  8  7 11 12  2  1  3  4\n[99865]  2  2  6  4  8 12  8  9 10  7 10  8  6  2  1  9  7  6  4 12  5  6  4  7\n[99889]  6 10  4  4  1  5  4  9  8  7 11  4  6  2 12  4 12  5 10 12  5  5  5  4\n[99913]  3  5  2  7  4  7  2  7  3  5 11  4 10 12  7 10  7  6 11  9  7  9 10  3\n[99937]  7  9  8  4  1  3  9 10  1  5  7  3  2 10  7 11  6  9  3  7  9 10 12 10\n[99961]  7 10 11 12  3  3  1  7  7 12  8  4  8  3 12  9  4  3 12  3  8 10 11  1\n[99985] 12 10  9  8  9 11  7  2  6 12 12 11 11  9  7\n [ reached getOption(\"max.print\") -- omitted 512005 entries ]\n\n\nHow can this be useful? A good example is how plots are made, they will use the codes to give an order to the display of columns, in the plot below, February (2) comes before March (3), even though there were more students born in March:\n\ngrph_data &lt;- PISA_2018 %&gt;% \n         group_by(ST003D02T) %&gt;% \n         summarise(n=n())\n\nggplot(data=grph_data, aes(x=ST003D02T, y=n)) + \n  geom_bar(stat = \"identity\")\n\n\n\n\nTo re-order the columns to match the number of students, we can either try to do this manually, which is rather cumbersome:\n\nmy_levels &lt;- c(\"July\", \"September\", \"January\", \"March\", \"February\",\"April\",\n               \"May\", \"June\", \"August\", \"October\", \"November\", \"December\", \n               \"Valid Skip\", \"Not Applicable\", \"Invalid\", \"No Response\")\n\ngrph_data$ST003D02T &lt;- factor(grph_data$ST003D02T, levels=my_levels)\n\nggplot(data=grph_data, aes(x=ST003D02T, y=n)) + \n  geom_bar(stat = \"identity\")\n\n\n\n\nOr get R to do this for us:\n\n# get the levels in order and pull/create a vector of them\nmy_levels &lt;- grph_data %&gt;% arrange(desc(n)) %&gt;% pull(ST003D02T)\n\n# reassign the re-ordered levels to the dataframe column\ngrph_data$ST003D02T &lt;- factor(grph_data$ST003D02T, levels=my_levels)\n\nggplot(data=grph_data, aes(x=ST003D02T, y=n)) + \n  geom_bar(stat = \"identity\")\n\n\n\n\nTo learn a lot more about factors, see Hadley’s chapter"
  },
  {
    "objectID": "chapters/02-3-Intro_to_analysis_software.html#student-dataset",
    "href": "chapters/02-3-Intro_to_analysis_software.html#student-dataset",
    "title": "Piping and dplyr",
    "section": "\n9.1 Student dataset",
    "text": "9.1 Student dataset\n\n\nHow many unique values are there in the OCOD3 field for student intended future occupation? How does the most desired career vary by gender?\n\n\nanswerPISA_2018$OCOD3 %&gt;% unique() %&gt;% length()\n\nPISA_2018 %&gt;% \n  group_by(ST004D01T, OCOD3) %&gt;%\n  summarise(n =n()) %&gt;%\n  arrange(desc(n))\n\n\n\nwrite code to work out the mean and median number of hours of learning Maths MMINS for each country CNT.\n\n\nanswerPISA_2018 %&gt;% \n  group_by(CNT) %&gt;%\n  summarise(mean_MMINS = mean(MMINS, na.rm=TRUE),\n            median_MMINS = median(MMINS, na.rm=TRUE)) %&gt;%\n  arrange(desc(median_MMINS))\n\n\n\nwhat is the fourth most popular language at home LANGN spoken by students in schools in the United Kingdom, how does this compare to France?\n\n\nanswerPISA_2018 %&gt;% \n  filter(CNT %in% c(\"France\", \"United Kingdom\")) %&gt;%\n  group_by(CNT, LANGN) %&gt;%\n  summarise(n = n()) %&gt;%\n  arrange(desc(n))\n\n# a bit of a rubbish answer really, as France only codes this at French or varieties of Other\n\n\n\nSpot the five errors with the following code. Can you make it work? What does it do?\n\n\n# Work out when more time spent in language lessons than maths lessons\nPISA_2018_lang &lt; PISA_2018 %&gt;%\n  rename(gender = ST004D01T) %&gt;%\n  mutate(language importance = LMINS - MMINS) %&gt;%\n  filter(is.na(language_importance)) %&gt;%\n  group_by(CNT gender) %&gt;%\n  summarise(students = n,\n            lang_win = sum(language_importance &gt;= 0),\n            per_lang_win = 100*(lang_win/students))\n\n\nanswer# Work out when more time spent in language lessons than maths lessons\nPISA_2018_lang &lt;- PISA_2018 %&gt;%  #1 make sure you have the assignment arrow &lt;-\n  rename(gender = ST004D01T) %&gt;%\n  mutate(language_importance = LMINS - MMINS) %&gt;% #2 _ not space in name of field\n  filter(!is.na(language_importance)) %&gt;%  #3 this needs to be !is.na, otherwise it'll return nothing\n  group_by(CNT, gender) %&gt;% #4 missing comma\n  summarise(students = n(),   #5 missing brackets on the n() command\n            lang_win = sum(language_importance &gt;= 0),\n            per_lang_win = 100*(lang_win/students))\n\n\n\nBy gender work out the average attitudes to learning activities ATTLNACT"
  },
  {
    "objectID": "chapters/02-3-Intro_to_analysis_software.html#teacher-dataset",
    "href": "chapters/02-3-Intro_to_analysis_software.html#teacher-dataset",
    "title": "Piping and dplyr",
    "section": "\n9.2 Teacher dataset",
    "text": "9.2 Teacher dataset\nTo further check your understanding of this section you will be attempting to analyse the 2018 teacher dataset. This dataset includes records for 107367 teachers from 19 countries, including 351 columns, covering attitudinal, demographic and workplace data. You can find the dataset here in the .parquet format.\n\n\nWork out how many teachers are in the dataset for the United Kingdom\n\n\n\nanswerPISA_2018_teacher %&gt;% \n  group_by(CNT) %&gt;%\n  summarise(n=n()) %&gt;%\n  filter(CNT == \"United Kingdom\")\n\n\n\nFor each country CNT by gender TC001Q01NA, what is the mean time that a teacher has been in the teaching profession TC007Q02NA? Include the number of teachers in each group. Order this to show the country with the longest serving workforce:\n\n\nanswerPISA_2018_teacher %&gt;%\n  group_by(CNT, TC001Q01NA) %&gt;%\n  summarise(avg_years = mean(TC007Q02NA, na.rm=TRUE),\n            n = n()) %&gt;%\n  arrange(desc(avg_years))\n\n\n\nFor each country CNT find out which teachers provide the most opportunities for students to improve their critical thinking skills TC207Q06HA:\n\n\nanswerPISA_2018_teacher %&gt;% \n  rename(crit_think = TC207Q06HA) %&gt;%\n  group_by(CNT) %&gt;%\n  mutate(teachers=n()) %&gt;%\n  group_by(CNT, crit_think) %&gt;%\n  summarise(n = n(),\n            per = n()/unique(teachers)) %&gt;%\n  arrange(desc(per))\n\n\n\nExplore the data on use of technology in the classroom TC169____\n\n\n\nanswerPISA_2018_teacher %&gt;% select(CNT, TC001Q01NA, starts_with(\"TC169\"))\n\n\n\nSave the results of one of the above questions using write_csv().\n[EXTENSION] explore the dataset and find out some more interesting facts to share with your group"
  },
  {
    "objectID": "chapters/02-4-Intro_to_graphs.html",
    "href": "chapters/02-4-Intro_to_graphs.html",
    "title": "Making graphs",
    "section": "",
    "text": "#| eval: true\n    #| warning: false\n    #| echo: false\n    \n    # only load this code if testing this file independently of overall project\n    if(!exists(\"test\")){\n      warning(\"RUNNING LOCAL FILE LOAD\")\n      \n      library(glue)\n      proj_folder &lt;- \"C:/Users/Peter/Google Drive/Kings/Code/MASTEMR/\"\n      proj_folder &lt;- r\"(/Users/k1765032/Google Drive/My Drive/MASTEMR/)\"\n      \n      node &lt;- Sys.info()\n      if(node[\"nodename\"] == \"KCLJ7J6LFC74J\"){ #Richards PC\n        proj_folder &lt;- r\"(/Users/k1765032/Google Drive/My Drive/MASTEMR/)\"\n      }else if(node[\"nodename\"] == \"KCL3Y7NKR3\"){ #Petes NEW Laptop\n        proj_folder &lt;- r\"(G:/My Drive/Kings/code/MASTEMR/)\"\n      }else if(node[\"nodename\"] == \"PETES_PC\"){ #Petes NEW Laptop\n        proj_folder &lt;- r\"(C:/Users/Peter/Google Drive/Kings/Code/MASTEMR/)\"\n      }\n      \n      source(glue(\"{proj_folder}MASTEMR_functions.R\"))\n      source(glue(\"{proj_folder}MASTEMR_setup_libs.R\"))\n    \n      OpenAnalysis_load_ALL(use_cache = TRUE, \n                            report_cache_folder=r\"[C:/temp/cache/MASTEMR/]\",\n                            over_write=FALSE)\n    }\nThe tidyverse includes the incredibly powerful ggplot2 package. This package is pretty much the industry standard for making graphs for publication. ggplot2 is built on the grammar of graphics where you build graphs by specifying underlying attributes and layering geometric objects on top of each other. In the diagram below you can see how a graph is built from geometric objects (the things that are plotted such as points and bars) a scale, and plot annotations (e.g. a key, title etc). You can then apply faceting to the graph to automatically split one graph into multiple plots, allowing you to easily compare different groupings. Publications, such as the Financial Times, make daily use of ggplot2."
  },
  {
    "objectID": "chapters/02-4-Intro_to_graphs.html#sec-geom_point",
    "href": "chapters/02-4-Intro_to_graphs.html#sec-geom_point",
    "title": "Making graphs",
    "section": "\n2.1 geom_point",
    "text": "2.1 geom_point\nRather unsurprisingly, geom_point allows us to plot a layer of points using x and y coordinates. The below example shows how we can specify within the ggplot function data=school_plot_data. We then define the aesthetic attributes of the graph, passing the x x=NumberOfBoys and y y=NumberOfGirls values. Once these have been declared in the ggplot(...) function, their values are passed down to any subsequent geom_, in this case geom_point will use the data and x and y values that have been specified in ggplot(...)\n\n# create a new dataframe of maths and reading scores by country and OECD status\ncountry_plot_data &lt;- PISA_2018 %&gt;% \n  group_by(OECD, CNT) %&gt;%\n  summarise(mean_maths = mean(PV1MATH),\n            mean_read = mean(PV1READ),\n            sz = n())\n\n# using this new dataframe, show the relationship between maths and reading score\n# using geom_points\nggplot(data=country_plot_data, \n       aes(x=mean_maths, y=mean_read)) +\n  geom_point(aes(size=sz, colour=OECD), alpha = 0.6)\n\n\n\n\n\nIn line 2 above we pipe the large data.frame PISA_2018 to apply a number of functions.\nLine 3 groups by OECD (a Yes or No indicating membership) and CNT (the name of the country).\nLines 4-5 calculate the mean mathematics and reading score, and create new variables (mean_maths, and mean_read) for their values.\nIn addition, in line 6, the variables sz is created which counts the number of responses per country through the n() command.\nThis whole pipe is then saved to the country_plot_data object, using the &lt;- on line 2\n\nThis new dataframe is then passed to ggplot.\n\nIn line 10, we specify the data that should be plotted - the new dataframe country_plot_data we have created.\nLine 11, then we pass the x and y variables, mean_maths, and mean_read, inside the aesthetic function. These values will be passed to any subsequent geom_\n\nIn line 12, we make a number of tweaks to the points: first setting the aesthetics - the size of the points is linked to the sz variable we created, the number of responses per country, and the colour is linked to OECD membership. Finally (and note this is outside the aes brackets, we set an alpha value which makes the point slightly transparent, which is more visually appealing where points overlap.\n\n\n\n\n\n\n\nImportant\n\n\n\nDefining things inside aes mean that they will change with the dataset you use, if you define them outside aes then they will be constant values. For example\n\n# plotting number of boys as x, number of girls as y and % disadvantged as size,\n# all inside aes, so each point is a table row\nggplot(data=PISA_2018_school) +\n  geom_point(aes(x = SC002Q01TA,\n                 y = SC002Q02TA,\n                 size=SC048Q03NA))\n\n\n\n\n\n# there is an error if we put size outside the aes, and set it a value from the \n# dataset, it can't find value!\nggplot(data=PISA_2018_school) +\n  geom_point(aes(x = SC002Q01TA,\n                 y = SC002Q02TA),\n             size=SC048Q03NA)\n\nError in list2(na.rm = na.rm, ...): object 'SC048Q03NA' not found\n\n\n\n# but if we set the size explicitly, outside the aes, then all points will be that size\nggplot(data=PISA_2018_school) +\n  geom_point(aes(x = SC002Q01TA,\n                 y = SC002Q02TA),\n             size=3)\n\n\n\n\n\n\n\n2.1.1 Questions\n\n\nSpot the three errors in this graph code\n\n\nggplot(adta=diamonds, x=depth, y=price) +\n  geom_point() %&gt;% \n  ggtitle(\"diamond graph\")\n\n\nanswer#1 data not adta; #2 x and y need to be inside aes\nggplot(data=diamonds, aes(x=depth, y=price)) +\n  geom_point() + #3 %&gt;% instead of +\n  ggtitle(\"diamond graph\")\n\n\n\nUsing the PISA_2018 dataset, plot a graph for students from Norway to look at the relationship between wealth WEALTH and reading grade PV1READ. Colour each point with the gender ST004D01T of the student. Give the graph sensible x and y labels (e.g. xlab(\"label\")).\n\n\nanswer dataframegraph_data &lt;- PISA_2018 %&gt;% filter(CNT == \"Norway\")\n\n\n\nanswer graphggplot(graph_data,\n       aes(x=WEALTH,\n           y=PV1READ)) +\n  geom_point(aes(colour=ST004D01T)) +\n  xlab(\"Wealth\") +\n  ylab(\"Reading grade\")\n\n\n\nUsing the PISA_2018 dataset for each country CNT, create a graph to explore how the median of the sense of school belonging BELONG relates to the median of the disciplinary climate in the school DISCLIMA, adjust the colour of each point to reflect the mean wealth of students in each country ESCS.\n\nHINT: You’ll need create a new dataframe with summarised variables for median_belong, median_discipline and mean_wealth.\n\nanswer dataframegraph_data &lt;- PISA_2018 %&gt;%\n  group_by(OECD, CNT) %&gt;%\n  summarise(median_belong = median(BELONG, na.rm=TRUE),\n            median_discipline = median(DISCLIMA, na.rm=TRUE),\n            mean_wealth = mean(ESCS, na.rm=TRUE))\n\n\nHINT: To make your colours stand out more, add + scale_color_gradientn(colours = rainbow(3)) to the end of your plot.\n\nanswer graph# display a graph of the results\nggplot(data = graph_data, \n       aes(x = median_belong, \n           y = median_discipline)) +\n  geom_point(aes(colour = mean_wealth)) + \n  scale_color_gradientn(colours = rainbow(3))"
  },
  {
    "objectID": "chapters/02-4-Intro_to_graphs.html#sec-geom_bar",
    "href": "chapters/02-4-Intro_to_graphs.html#sec-geom_bar",
    "title": "Making graphs",
    "section": "\n2.2 geom_bar",
    "text": "2.2 geom_bar\nThe geom_bar function is versatile, allowing the creation of bar, multiple bar, stacked bar charts and histograms. This first example shows how we can use bar charts to represent the number of cars in a household ST012Q02TA:\n\nplot_cars &lt;- PISA_2018 %&gt;% filter(!is.na(ST012Q02TA))\n\nggplot(data = plot_cars, \n       aes(x=ST012Q02TA)) + \n  geom_bar()\n\n\n\n\n\n2 gets the PISA_2018 dataset and removes all rows where ST012Q02TA is NA, storing this new dataset as plot_cars\n\n4 passes the plot_cars to ggplot, as the dataset we are going to plot\n5 specifies the x values to be the values stored in ST012Q02TA, i.e. we will have a bar for each response given in ST012Q02TA: None, One, Two, Three or more.\n6 geom_bar tell ggplot to make bars, it uses the aesthetic from line 5, to plot the x axis, note we haven’t given it a y value, this is auto-calculated from the number of students in each x group.\n\nWe can choose to let ggplot split the results into different groups for us by setting a fill option, in this case on the OECD status of the country, i.e. do students in OECD countries have more cars than those not in OECD countries, to do this, we add fill=OECD to the aes on line 2 below:\n\nggplot(data = plot_cars, \n       aes(x=ST012Q02TA, fill=OECD)) + \n  geom_bar()\n\n\n\n\n\nThe bars are now coloured with a key, but, annoyingly, the bars are on top of each other not easily allowing us to make direct comparisons. To compare different groups we need the bars to not be stacked, we want them next to each other, or in ggplot language, we want the bars to dodge each other, to do this we add the position=position_dodge() command to line 3 below:\n\nggplot(data = plot_cars, \n       aes(x=ST012Q02TA, fill=OECD)) + \n  geom_bar(position=position_dodge())\n\n\n\n\n\n2.2.1 Raising the bars yourself\nggplot can do a lot of the hard work when putting together bar charts, e.g. counting the number of students in each group, but there might also be times when you want to use pipes to calculate summary values that you then want plot. That is, you want to specify the heights of the bars yourself. To do this we will specify the y axis in the aes and use stat=\"indentity\" to tell ggplot that’s what we’re doing. Take the example where you want to find the overall percentage of students for a range of countries getting over 500 in PV1SCIE:\n\nplot_data &lt;- PISA_2018 %&gt;%\n  group_by(OECD, CNT) %&gt;%\n  summarise(all_students = n(),\n            upper_sci_per = sum(PV1SCIE &gt; 500) / n())\n\nggplot(data=plot_data, \n       aes(x=CNT, y=upper_sci_per)) +\n  geom_bar(aes(fill=OECD), \n           position=position_dodge(),\n           stat=\"identity\") +\n  theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))\n\n\n\n\n\n1 to 4 creates a dataframe plot_data that calculates the percentage of students in each country CNT, that have a science grade PV1SCIE over 500\n\n7 as we are setting the heights of the bars ourselves, we need to give the ggplot aes command a y value, in this case y=upper_sci_per\n\n8 the geom_bar is given a fill value of OECD, this will allow us to see how countries in and out of the OECD compare\n9 we use position=position_dodge() as we want the percentage grades of each country to be next to each other so we can look for differences in heights\n10 stat=\"identity\" tells geom_bar that you have defined your own bar heights in the y attribute and not to count the number of rows.\n11 this theme command helps rotate the x-axis labels 90 degrees, so they don’t overlap.\n\nAlternatively, you can use the geom_col() function that can handle you setting the y values and not specifying stat=\"identity\"\n\nggplot(data=plot_data, \n       aes(x=CNT, y=upper_sci_per)) +\n  geom_col(aes(fill=OECD), \n           position=position_dodge()) +\n  theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))\n\n\n2.2.2 Questions\n\n\nCan you spot the 4 errors in this code.\n\n\nggplot(data=schools %&gt;% filter(Phase == \"Secondary\"), \n       x=Region +\n  geom_bar(aes(fill=Gender) position=\"full\") \n\n\nanswerggplot(data=schools %&gt;% filter(Phase == \"Secondary\"), \n       aes(x=Region)) + # 1 no aes() around the x value # 2 missing close brackets\n  geom_bar(aes(fill=Gender), position=\"fill\") # 3 missing comma # 4 position=\"full\" rather than fill \n\n\n\nCreate a bar chart showing the total number of students for each grouping of “Think about your school, how true: Students seem to value competition” ST205Q01HA. Adjust this graph to see if there is a difference for this amongst females and males ST004D01T:\n\n\nanswerggplot(data=PISA_2018,\n       aes(x=ST205Q01HA)) +\n  geom_bar() +\n  theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))\n\n\n\nanswer with gender addedggplot(data=PISA_2018 %&gt;% filter(!is.na(ST205Q01HA)),\n       aes(x=ST205Q01HA, fill=ST004D01T)) +\n  geom_bar(position=position_dodge()) +\n  theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))\n\n\n\nPlot bars for the number of Females and Males ST004D01T who answer each grouping for: “Use digital devices outside of school: Browsing the Internet for fun (such as watching videos, e.g. )” IC008Q08TA. Make sure that the bars position_dodge() each other so we can compare the heights.\n\n\n\nanswergraph_data &lt;- PISA_2018 %&gt;% filter(!is.na(IC008Q08TA))\n\nggplot(data=graph_data,\n       aes(x=IC008Q08TA, fill=ST004D01T)) +\n  geom_bar(position=position_dodge()) +\n  theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))\n\n\n\nFor France and the United Kingdom, plot the total number of students who gave each answer for IC010Q09NA “Use digital devices outside of school: Doing homework on a computer”. Filter out all the NA values first !is.na(...)\n\n\n\nanswer dataframeplot_data &lt;- PISA_2018 %&gt;% \n  filter(CNT %in% c(\"France\", \"United Kingdom\"),\n         !is.na(IC010Q09NA))\n\n\n\nanswerggplot(plot_data,\n       aes(x=IC010Q09NA, fill=CNT)) +\n  geom_bar(position=position_dodge()) +\n  theme(legend.position = \"bottom\")\n\n\n\nUsing the PISA_2018_school dataset (available here) create a table that stores for each country CNT\n\n\n\nthe total number of schools,\nthe total number of teachers working full-time SC018Q01TA01,\nthe total number of teachers working part-time SC018Q01TA02,\nand the overall total number of teachers\n\nAdd an additional column working out the % of teachers working part-time in each country, call this per_part\n\ncreating the dataframeplot_workforce &lt;- PISA_2018_school %&gt;% \n  group_by(CNT) %&gt;% \n  summarise(schools = n(),\n            fulltime = SC018Q01TA01 %&gt;% sum(na.rm=TRUE),\n            parttime = SC018Q01TA02 %&gt;% sum(na.rm=TRUE),\n            teachers = fulltime + parttime,\n            per_part = parttime / teachers)\n\n\nUsing this dataframe plot a bar graph for each country of the per_part, use the number of schools as a fill:\n\ncreating the dataframeggplot(data=plot_workforce,\n       aes(x=CNT, y=per_part, fill=schools)) +\n  geom_bar(stat=\"identity\") +\n  theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +\n  theme(legend.position=\"top\")\n\n\n\n[Extension] Explore other patterns in the school and student pisa datasets."
  },
  {
    "objectID": "chapters/02-4-Intro_to_graphs.html#geom_text",
    "href": "chapters/02-4-Intro_to_graphs.html#geom_text",
    "title": "Making graphs",
    "section": "\n2.3 geom_text",
    "text": "2.3 geom_text\nOur bar charts look great, but finding the actual value of each bar can be a little clumsly if we have to get a ruler out and read off the y-axis. Better would be for us to have numbers listed at the top of each bar by adding a geom_text element:\n\nplot_cars &lt;- PISA_2018 %&gt;% filter(!is.na(ST012Q02TA))\n\nggplot(data = plot_cars, \n       aes(x=ST012Q02TA, fill=OECD)) + \n  geom_bar(position=position_dodge()) +\n  geom_text(stat='count', \n            aes(label=..count..), \n            position = position_dodge(width=0.9),\n            vjust=-0.5)\n\n\n\n\n\nline 6 starts the geom_text command, telling the geom to use the count statistic from ggplot, this means it will be able to fetch the number of rows in each grouping.\nline 7 as we want the label to change for each bar element, we put label=..count.. inside aes. The x location of the labels is inherited from line 4 and the y location will be calculated from the height of each bar\nline 8 we want the labels to align to the bars, so we tell the geom_text to also position_dodge, passing a width=0.9 to the dodge function, so the labels line up above the columns,\nfinally, on line 9, we vertically adjust the labels vjust, so they sit on top of the columns.\n\nRather than adding the count, you might want to add the percentage that each bar represents, we can do this by changing the value given to label on line 5, below:\n\nggplot(data = plot_cars, \n       aes(x=ST012Q02TA, fill=OECD)) + \n  geom_bar(position=position_dodge()) +\n  geom_text(stat='count', \n            aes(label=100*(..count../sum(..count..)) %&gt;% round(3), \n            group = OECD), \n            position = position_dodge(width=0.9),\n            vjust=-0.5)\n\n\n\n\nAdditionally, when we make graphs we often want to label the dataset, for example if we were to plot all the countries and their PV1MATH and PV1READ scores, we would get:\n\nplot_data &lt;- PISA_2018 %&gt;%\n  group_by(OECD, CNT) %&gt;%\n  summarise(m_read  = mean(PV1READ, na.rm=\"TRUE\"),\n            m_maths = mean(PV1MATH, na.rm=\"TRUE\"))\n\nggplot(data=plot_data, \n       aes(x=m_read, y=m_maths, colour=OECD)) +\n  geom_point() \n\n\n\n\nThis looks great, but we don’t actually know which countries are which. To get this data we need to add text to the graph, using geom_text.\n\nggplot(data=plot_data, \n       aes(x=m_read, y=m_maths, colour=OECD)) +\n  geom_point() +\n  geom_text(aes(label=CNT), \n            colour=\"black\", \n            check_overlap = TRUE)\n\n\n\n\nHere we have used colour=\"black\" outside the aes to define the colour for all the labels, and check_overlap = TRUE which removes any labels that are on top of each other. It’s still a little bit hard to understand, and maybe we want to focus on just a few of the labels for countries we are interested in. For example\n\n# make a vector of countries you want to have labels for\nfocus_cnt &lt;- c(\"United Kingdom\", \"France\", \"Argentina\")\n\n# add a new column to the plot_data where these countries are\nplot_data &lt;- plot_data %&gt;% mutate(focus = CNT %in% focus_cnt)\n\nplot_data\n\n# A tibble: 80 × 5\n# Groups:   OECD [2]\n   OECD  CNT                    m_read m_maths focus\n   &lt;fct&gt; &lt;fct&gt;                   &lt;dbl&gt;   &lt;dbl&gt; &lt;lgl&gt;\n 1 No    Albania                  407.    438. FALSE\n 2 No    United Arab Emirates     421.    430. FALSE\n 3 No    Argentina                415.    392. TRUE \n 4 No    Bulgaria                 423.    440. FALSE\n 5 No    Bosnia and Herzegovina   403.    407. FALSE\n 6 No    Belarus                  476.    473. FALSE\n 7 No    Brazil                   416.    384. FALSE\n 8 No    Brunei Darussalam        409.    429. FALSE\n 9 No    Costa Rica               426.    403. FALSE\n10 No    Dominican Republic       344.    327. FALSE\n# ℹ 70 more rows\n\n\nNow we can adjust out geom_text to only show those countries that we want to focus on:\n\nggplot(data=plot_data, \n       aes(x=m_read, y=m_maths, colour=OECD)) +\n  geom_point() +\n  geom_text(data=plot_data %&gt;% filter(focus == TRUE),\n            aes(label=CNT), \n            colour=\"black\", \n            check_overlap = TRUE)\n\n\n\n\n\nline 5 changes the data that is being passed to the geom_text, it no longer uses the data defined in line 2, but has a new dataset, that is filtered on focus == TRUE, i.e. only containing the countries that we want.\nNote that the x and y mappings from line 3 are inherited by line 6, it’s only the data that we have redefined\n\n\n\n\n\n\n\nTip\n\n\n\ngeom_text is great, but you might find that ggrepel package useful as it’ll add lines connecting the text the data points. Using the plot_data from above:\n\nlibrary(ggrepel)\n\nggplot(data=plot_data, \n       aes(x=m_read, y=m_maths, colour=OECD)) +\n  geom_point() +\n  geom_text_repel(data=plot_data %&gt;% filter(focus == TRUE),\n            aes(label=CNT),\n            box.padding = 0.5,\n            max.overlaps = Inf,\n            colour=\"black\")"
  },
  {
    "objectID": "chapters/02-4-Intro_to_graphs.html#exporting-plots",
    "href": "chapters/02-4-Intro_to_graphs.html#exporting-plots",
    "title": "Making graphs",
    "section": "\n3.1 Exporting plots",
    "text": "3.1 Exporting plots\nggplot can export data in a variety of formats suitable for printing, publication and the web. Once you have created a graph and stored it in an object my_graph &lt;- ggplot(..., the command to save the graph to your hard drive is:\nggsave(&lt;file_location_name_and_extension&gt;, &lt;object_name&gt;, width = 5, height = 4, device=&lt;file_ext&gt;)\n\nggsave(\"my_graph.pdf\", my_graph, width = 5, height = 4, device=\"pdf\")\n\nIf you want to change the output format, just change the extension of the file you are saving:\n\n“poverty_size.pdf” perfect for publication and printing, potentially large file size\n“poverty_size.svg” the same as pdf, also suitable for putting on webpages\n“poverty_size.png” smaller file size, suitable for websites and presentations\n“poverty_size.jpg” similar output to png"
  },
  {
    "objectID": "chapters/02-4-Intro_to_graphs.html#using-r-to-do-descriptive-statistics-and-plot-graphs",
    "href": "chapters/02-4-Intro_to_graphs.html#using-r-to-do-descriptive-statistics-and-plot-graphs",
    "title": "Making graphs",
    "section": "\n4.1 Using R to do descriptive statistics and plot graphs",
    "text": "4.1 Using R to do descriptive statistics and plot graphs\n\n\nYou can find the code used in the video below:\n\nShow the code# Introduction to plotting graphs\n#\n# Download data from /Users/k1765032/Library/CloudStorage/GoogleDrive-richardandrewbrock@gmail.com/.shortcut-targets-by-id/1c3CkaEBOICzepArDfjQUP34W2BYhFjM4/PISR/Data/PISA/subset/Students_2018_RBDP_none_levels.rds\n# You want the file: Students_2018_RBDP_none_levels.rds\n# and place in your own file system\n# change loc to load the data directly. Loading into R might take a few minutes\nlibrary(tidyverse)\nloc &lt;- \"/Users/k1765032/Library/CloudStorage/GoogleDrive-richardandrewbrock@gmail.com/.shortcut-targets-by-id/1c3CkaEBOICzepArDfjQUP34W2BYhFjM4/PISR/Data/PISA/subset/Students_2018_RBDP_none_levels.rds\"\nPISA_2018 &lt;- read_rds(loc)\n\n# Calculating means of groups\n# The PISA_2018 dataframe is piped to a new dataframe MeanPISA\n# The data are grouped by the country variable (CNT)\n# The countries of interest are chosen (UK, France, Germany and the US)\n# The summarise function is used to output the mean and standard deviation score for each country\n# on the Science Plausible Value (PV1SCIE) and NAs are ignored na.rm=TRUE\n\nMeanPISA &lt;- PISA_2018 %&gt;%\n  group_by(CNT)  %&gt;%\n  filter(CNT==\"United Kingdom\" | CNT== \"France\" | CNT== \"Germany\" | CNT==\"United States\")  %&gt;%\n  summarise(mean_sci = mean(PV1SCIE, na.rm=TRUE), sd_sci= sd(PV1SCIE, na.rm=TRUE)) \nprint(MeanPISA)\n\n\n# To plot data we can use the ggplot function. \n# We will start by plotting a column graph use geom_col\n# We specify the data set for ggplot to use (MeanPisa) and then \n# define the x and y variables:\n# ggplot(MeanPISA,\n#       aes(x=CNT, y=mean_sci))\n# geom_col() (Note the plus is on the line before) plots the graph and the fill colour is set to red\n# The next three lines set the formatting of the axis text and add x and y axis labels\n\nggplot(MeanPISA,\n       aes(x=CNT, y=mean_sci))+\ngeom_col(fill=\"red\") +\n  theme(axis.text.x = element_text(angle = 90, hjust=0.95, vjust=0.2, size=10)) +\n  xlab(\"Country\") +\n  ylab(\"Science Score\")\n\n# For plotting a scatter plot or PISA reading scores against science scores\n#, first we make a managable data set\n# I will filter the data set to include only the UK data\n# and remove any NAs\n\nUKData &lt;- PISA_2018 %&gt;%\n  filter(CNT==\"United Kingdom\") %&gt;%\n  drop_na(PV1SCIE)\n\n# This time I will use ggplot to plot a scatter graph\n# I feed UKDATA to ggplot, specify the x (PISA Reading score)\n# And y (PISA science score). This time, I have linked the colour\n# to a variable (ST004D01T) which is the gender value, giving\n# plot points of different colours for boys and girls\n# To produce a scatter plot, I use geom_point to plot points,\n# Giving the size of point and the transparency (alpha=0.5) -\n# some transparency of points is helpful when plots become dense\n# The x and y lables are added\n# Finally, a line is plotted - geom_smooth(method='lm')\n# sets the line to a linear ('lm') line\n\n  ggplot(UKData,\n       aes(x=PV1READ, y=PV1SCIE, colour=ST004D01T)) +\n  geom_point(size=0.1, alpha=0.5) +\n  ylab(\"Science Score\") +\n  xlab(\"Reading Score\") +\n  geom_smooth(method='lm')\n  \n# Where R becomes very powerful is being able to produce multiple charts rapidly\n# In the code below, I plot reading against science scores as above, but this time\n# Use the entire data set - for the whole world!\n# All the steps are the same, except, I use the facet_wrap, a way to create multiple\n# graph panels - the instruction creates a set of graphs for each country  \n  \n  WorldData &lt;- PISA_2018 %&gt;%\n    drop_na(PV1SCIE)\n  \n  ggplot(WorldData,\n         aes(x=PV1READ, y=PV1SCIE, colour=ST004D01T)) +\n    geom_point(size=0.1, alpha=0.5) +\n    ylab(\"Science Score\") +\n    xlab(\"Reading Score\") +\n    geom_smooth(method='lm') +\n    facet_wrap(CNT~.)"
  },
  {
    "objectID": "chapters/03-Descriptive.html",
    "href": "chapters/03-Descriptive.html",
    "title": "03 Descriptive Statistics",
    "section": "",
    "text": "Before the session, please read: Davis (2013) Link to chapter\nGetting set up\nEnsure you have the PISA 2018 data set loaded. If you can see the PISA_2018 data frame in your environment window (at the top right of your screen), there is no need to reload.\n\n# Load the PISA data set.\n\nlibrary(arrow)\nlibrary(tidyverse)\n\nPISA_2018 &lt;- read_parquet(r\"[&lt;folder&gt;PISA_2018_student_subset.parquet]\")"
  },
  {
    "objectID": "chapters/03-Descriptive.html#using-the-command-line-for-descriptive-statistics",
    "href": "chapters/03-Descriptive.html#using-the-command-line-for-descriptive-statistics",
    "title": "03 Descriptive Statistics",
    "section": "\n2.1 Using the command line for descriptive statistics",
    "text": "2.1 Using the command line for descriptive statistics\nFor further reading on descriptive statistics and see chapter 5 and of Navaro’s Learning Statistics with R.\n\n\n\n\n\n\nTip\n\n\n\nWe are going to focus on the following variables in the PISA_2018 dataset:\n\nCNT the country of the student.\nISCEDO refers to the type of school the student attends. It’s values can be: General, Pre-Vocational, Vocational, Modular, or NA\nWEALTH is a self-reported measure of student’s wealth. It is a numeric variable, with a mean of -0.4, minimum of -7.5 and a maximum of 4.75.\nESCS is the index of economic, social and cultural status. It might be thought of a relating to a measure of economic and social status (with some cultural capital measures included). It is a numeric variable, with a mean of 0, minium of -8.2 and a maximum of 4.3.\nPV1MATH, PV1SCIE, PV1READ are the plausible value scores for achievement tests in mathematics, science and reading, respectively. The full achievement tests are long, so each student only completes a subset of items (which still takes 2 hours). Statistical models are then used to calculate an overall score, based on the response to the subset, as if students had answered all the questions. Ten different approaches to calculating a representative scores, plausible values are used, leading to ten different plausible values. We will just use the first plausible value (PV1). This differs from the PISA recommendation for using the scores, but simplifies things for teaching. For more on plausible values see: What are plausible values?\nST004D01T is the gender variable and is either ‘Male’, ‘Female’ or NA.\n\n\n\nThe simplest way to find information about a dataframe is to use the console. You type commands to find out about a dataframe directly into the console. To preform an action on a particular column (also called a vector), we use the $ symbol. For example, to refer to country data (which is in the vector CNT) we would use PISA_2018$CNT\nIn the command line, if you want to find the mean of all the science scores you can type the following:\n\nmean(PISA_2018$PV1SCIE)\n\nNotice that you get this response: [1] NA. An NA in the dataframe can occur for a number of reasons but may indicate a response is missing or incomplete. To tell R to ignore such entries, we add na.rm = TRUE to a function:\n\nmean(PISA_2018$PV1SCIE, na.rm = TRUE)\n\nYou can use the command line with a number of functions to find useful information about a dataframe. R has a number of standard functions that might be useful for descriptive statistics. To find out details about dataframes, e.g. nrow(PISA_2018), you can use:\n\n\nnrow() finds the number of rows\n\nncol() finds the number of columns\n\nnames() finds the names of all the columns\n\nIf you are working on individual columns, e.g. max(PISA_2018$PV1SCIE), you can use:\n\n\nmean() - finds the arithmetic mean\n\nmedian() - finds the median value\n\nmin() - finds the minimum value\n\nmax() - finds the maximum value\n\nsd() - finds the standard deviation\n\nrange() finds the range of values\n\nlength() finds the number of items\n\nunique() finds the unique items\n\n\n\n\n\n\n\nTip\n\n\n\nMaybe surprisingly, there is no function to calculate the mode in tidyverse. However, you can get one by loading the modeest package and using the most frequent value (mfv) function.\n\n# Install the modeest package to calculate a mode\n\nlibrary(modeest)\nlibrary(tidyverse)\n# The mode can be found with the most frequent value (mfv) function\n\nPISAUKMath&lt;-PISA_2018%&gt;%\n  select(CNT, PV1MATH)\n\nmfv(PISA_2018$PV1MATH, na_rm= TRUE)\n\n[1] 455.767\n\n\n\n\n\n\n\n\n\n\nTip\n\n\n\nYou can read a complete list of what the items in PISA mean here: PISA 2018 student survey item descriptors\n\n\nA useful way to get a quick summary of what is in a data.frame is, the summary command. This command outputs the minimum, median, mean, maximum (and 1st and 3rd quartile, i.e. the values at 25% and 75% of the range). For example, to get a sense of the science score variable (PV1SCIE) we can use:\n\nsummary(PISA_2018$PV1SCIE)\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max.    NA's \n  58.74  385.60  458.20  460.69  533.44  886.08    5377 \n\n\nThe NA’s refers to the number of NA’s in the variable. An NA can occur for a number of reasons, including where a student, teacher or school has failed to complete a question."
  },
  {
    "objectID": "chapters/03-Descriptive.html#bar-graphs",
    "href": "chapters/03-Descriptive.html#bar-graphs",
    "title": "03 Descriptive Statistics",
    "section": "\n5.1 Bar graphs",
    "text": "5.1 Bar graphs\nImagine we want to plot a graph of whether students report having an interactive whiteboard (IWB) in their school IC009Q11NA in the UK\nWhen plotting graphs, it makes things easier to have a data.frame of the data you will pass to ggplot - a bit like the final table of data you will actually plot when drawing a graph in real life.\nTo complete our take we are going to create a new data.frame we will use in the plot. I have called that data.frame IWBplot. Then, I take the main data.frame and select IC009Q11NA and CNT and filter for the UK.\nThe new element here is using ggplot, R’s graphing function (more details on how to use geom_bar are in the section above: Geom_bar).\nTo plot a graph, you call ggplot and specify the data you want to use for the graph (in our case, the new data.frame we have created, IWBplot).\nThe next layer of ggplot is the aesthetics (aes), i.e., what our graph will look like. First, we tell ggplot what we want our y (IC009Q11NA). Finally, we specify we want a bar graph using geom_bar().\n\n# Graphing the number of students who have an interactive whiteboard\nIWBplot &lt;- PISA_2018 %&gt;%\n  select(CNT, IC009Q11NA) %&gt;%\n  filter(CNT==\"United Kingdom\")\n\n# use IWBplot data to create a graph\nggplot(data=IWBplot,\n       aes(x=IC009Q11NA)) +\n  geom_bar()\n\n\n\n\nYou can modify the graph by adding axis labels and titles using xlab(\"label\"), xlab(\"label\"), and ggtitle(\"title\").\n\n# use IWBplot data to create a graph\n# Adding axis labels and a title\nggplot(data=IWBplot,\n       aes(x=IC009Q11NA)) +\n  geom_bar()+\n  xlab(\"Do you have an interactive whiteboard?\")+\n  ylab(\"Count\")+\n  ggtitle(\"Counts of availability of interacitve whiteboards in the UK\")\n\n\n\n\nYou can add colour, by specifying the fill of the bars should be by the value of IC009Q11NA in the aesthetics: aes(x=IC009Q11NA, fill=IC009Q11NA).\n\n# use IWBplot data to create a graph\n# Adding axis labels and a title\n# And adding colour\nggplot(data=IWBplot,\n       aes(x=IC009Q11NA, fill=IC009Q11NA)) +\n  geom_bar()+\n  xlab(\"Do you have an interactive whiteboard?\")+\n  ylab(\"Count\")+\n  ggtitle(\"Counts of availability of interacitve whiteboards in the UK\")\n\n\n\n\nYou make wish to plot multiple series, for examples, the interactive whiteboard data for boys and girls. In that case, we need to include the gender vector ST004D01T in the dataframe to plot IWBplot. To highlight the difference between boys and girls, in the aesthetics, we set the fill colour by the gender variable: fill=ST004D01T. Finally, we need to tell ggplot to plot the bars side-by-side, rather than stacking them - you do this by specifying position = position_dodge2().\n\n# Graphing the number of students who have an interactive whiteboard by gender\nIWBplot &lt;- PISA_2018 %&gt;%\n  select(CNT, IC009Q11NA, ST004D01T) %&gt;%\n  filter(CNT==\"United Kingdom\")\n\n# Plotting two series - in this case, by gender\nggplot(data=IWBplot,\n       aes(x=IC009Q11NA, fill=ST004D01T)) +\n  geom_bar(position = position_dodge2())+\n  xlab(\"Do you have an interactive whiteboard?\")+\n  ylab(\"Count\")+\n  ggtitle(\"Counts of availability of interacitve whiteboards in the UK\")\n\n\n\n\nIf you take `position = position_dodge2() out, ggplot will default to stacking the bars.\n\n# Graphing the number of students who have an interactive whiteboard by gender\nIWBplot &lt;- PISA_2018 %&gt;%\n  select(CNT, IC009Q11NA, ST004D01T) %&gt;%\n  filter(CNT==\"United Kingdom\")\n\n# Plotting two series - in this case, by gender\nggplot(data=IWBplot,\n       aes(x=IC009Q11NA, fill=ST004D01T)) +\n  geom_bar()+\n  xlab(\"Do you have an interactive whiteboard?\")+\n  ylab(\"Count\")+\n  ggtitle(\"Counts of availability of interacitve whiteboards in the UK\")\n\n\n\n\nYou can add text, for example the counts, to the graphs, using geom_text. We set the label to ..count.. and stat=count. Because the bars have been position using position_dodge you need to do the same for the labels. vjust=-0.5 sets the height of the label over the bar.\n\n# Graphing the number of students who have an interactive whiteboard by gender\nIWBplot &lt;- PISA_2018 %&gt;%\n  select(CNT, IC009Q11NA, ST004D01T) %&gt;%\n  filter(CNT==\"United Kingdom\")\n\n# Plotting two series - in this case, by gender with text\nggplot(data=IWBplot,\n       aes(x=IC009Q11NA, fill=ST004D01T)) +\n  geom_bar(position = position_dodge2())+\n  xlab(\"Do you have an interactive whiteboard?\")+\n  ylab(\"Count\")+\n  ggtitle(\"Counts of availability of interacitve whiteboards in the UK\")+\n  geom_text(aes(label=..count..), stat=\"count\", \n            position = position_dodge2(width=0.9), vjust=-0.5)"
  },
  {
    "objectID": "chapters/03-Descriptive.html#scatter-graphs",
    "href": "chapters/03-Descriptive.html#scatter-graphs",
    "title": "03 Descriptive Statistics",
    "section": "\n5.2 Scatter graphs",
    "text": "5.2 Scatter graphs\nTo plot a scatter graph we use the geom_point (see also: Geom_Point section), which works in a similar way to geom_col.\nExample\nImagine I want to plot a graph of mathematics scores PV1MATH (on the x-axis) against science scores PV1SCIE (y-axis) for students in the UK.\nA above, I first want to create a data.frame to plot - in this case I have called it plotdata. I select only the columns I need (PV1MATH, PV1SCIE, and CNT to filter for the UK), and then filter for the UK.\nThen I pass ggplot plotdata. As with geom_col, I use ggplot and first specify the data I want to plot (ggplot(data=plotdata,). Next, I set the aesthetic variables, to keep things simple,only the x and y variables. Then I call geom_point to plot the points as a scatter graph.\n\n# Filter to create a dataframe of UK scores in science and mathematics\nplotdata&lt;-PISA_2018 %&gt;%\n  select(CNT, PV1SCIE, PV1MATH)%&gt;%\n  filter(CNT==\"United Kingdom\")\n# Plot the data as a scatter graph with geom_point()\nggplot(data=plotdata,\n       aes(x=PV1MATH,y=PV1SCIE)) +\n  geom_point()\n\n\n\n\nWe can make things more pleasing by adding more features to the aesthetic variable. For example, I can add colour (geom_point(colour=\"blue\")) and rename the axes labs(x=\"Mathematics score\", y=\"Science score\"). Note when adding to ggplot, the + should come at the end of the line before the new addition to avoid an error.\n\n# Filter to create a dataframe of UK scores in science and mathematics\nplotdata&lt;-PISA_2018 %&gt;%\n  select(CNT, PV1SCIE, PV1MATH)%&gt;%\n  filter(CNT==\"United Kingdom\")\n# Plot the data as a scatter graph with geom_point()\nggplot(data=plotdata,\n       aes(x=PV1MATH,y=PV1SCIE)) +\n  geom_point(colour=\"blue\")+\n  labs(x=\"Mathematics Score\", y=\"Science Score\")\n\n\n\n\nI can also add a line using (geom_smooth(method='lm')) - here ‘lm’ specifies a linear plot (i.e. a straight line).\n\n# Filter to create a dataframe of UK scores in science and mathematics\nplotdata&lt;-PISA_2018 %&gt;%\n  select(CNT, PV1SCIE, PV1MATH)%&gt;%\n  filter(CNT==\"United Kingdom\")\n# Plot the data as a scatter graph with geom_point()\nggplot(data=plotdata,\n       aes(x=PV1MATH,y=PV1SCIE)) +\n  geom_point(colour=\"blue\")+\n  labs(x=\"Mathematics Score\", y=\"Science Score\")+\n  (geom_smooth(method='lm'))\n\n\n\n\nI can also change the colour of the points by a variable in the dataframe - for example by gender (aes(colour=ST004D01T) - NB I have to select that column in my initial selection. I can vary the size of points and make them slightly transparent (their alpha level): geom_point(alpha=0.4, size=0.6), and I can move the legend to the bottom (theme(legend.position = \"bottom\"))\n\nplotdata&lt;-PISA_2018 %&gt;%\n  select(CNT, PV1SCIE, PV1MATH, ST004D01T)%&gt;%\n  filter(CNT==\"United Kingdom\")\n# Plot the data as a scatter graph with geom_point()\nggplot(data=plotdata,\n       aes(x=PV1MATH,y=PV1SCIE, colour=ST004D01T)) +\n  geom_point(alpha=0.4, size=0.6)+\n  labs(x=\"Mathematics Score\", y=\"Science Score\")+\n  (geom_smooth(method='lm'))+\n  theme(legend.position = \"bottom\")+\n  theme(legend.title=element_blank()) # Removes the legend title (try running with this line removed)\n\n\n\n\n\n\n\n\n\n\nTip\n\n\n\nFor a summary of all the elements of a graph you can change in ggplot - see this help sheet"
  },
  {
    "objectID": "chapters/03-Descriptive.html#task-1---discussion",
    "href": "chapters/03-Descriptive.html#task-1---discussion",
    "title": "03 Descriptive Statistics",
    "section": "\n6.1 Task 1 - discussion",
    "text": "6.1 Task 1 - discussion\nBased on Davis (2013) Link to chapter\n\nConsider how and why we think of things as being ‘normal’ (or not). Some suggested questions are:\n\nWhat were your immediate thoughts on reading this paper?\nIn what ways have you yourself been aware of being compared to norms or ideals?\nHow do you feel about that? As an education professional, have you made comparisons between individual students and expected norms or averages? Between groups of students?\nWhen and how was this useful?\nWhen and how was this problematic?"
  },
  {
    "objectID": "chapters/03-Descriptive.html#task-2---using-the-command-line",
    "href": "chapters/03-Descriptive.html#task-2---using-the-command-line",
    "title": "03 Descriptive Statistics",
    "section": "\n6.2 Task 2 - Using the command line",
    "text": "6.2 Task 2 - Using the command line\n\n\nUsing the command line find out:\n\n\nThe number of students (i.e. the number of rows) in the PISA 2018 dataset\nThe number of items in our dataset (i.e. the number of columns)\nThe mean, maximum and minimum science score (don’t forget to use $)\nThe unique values of ST003D02T - what information do you think this column holds?\n\n\nAnswer# Using the command line\n# a) Find the number of students (i.e. the number of rows) in the PISA 2018 dataset\nnrow(PISA_2018)\n# b) The number of items in our dataset (i.e. the number of columns)\nncol(PISA_2018)\n# c) The mean, maximum and minimum science score (don't forget to use $)\nmean(PISA_2018$PV1SCIE)\nmax(PISA_2018$PV1SCIE)\nmin(PISA_2018$PV1SCIE)\n# d) The unique values of ST003D02T - what information do you think this column holds?\nunique(PISA_2018$ST003D02T)\n# This column contains students' birth months\n# You can find out the subtitle of columns using\nattributes(PISA_2018$ST003D02T)"
  },
  {
    "objectID": "chapters/03-Descriptive.html#task-3---using-the-summary-function",
    "href": "chapters/03-Descriptive.html#task-3---using-the-summary-function",
    "title": "03 Descriptive Statistics",
    "section": "\n6.3 Task 3 - Using the summary function",
    "text": "6.3 Task 3 - Using the summary function\n\n\nUsing summary find:\n\n\nThe maximum and minimum of the WEALTH variable\nThe mean reading score\nThe minimum science score in the data set\nComment on the difference in distribution of the reading and science scores\n\n\nAnswer# Using the command line\n\nsummary(PISA_2018$WEALTH)\nsummary(PISA_2018$PV1READ)\nsummary(PISA_2018$PV1SCIE)"
  },
  {
    "objectID": "chapters/03-Descriptive.html#task-4---creating-summary-tables",
    "href": "chapters/03-Descriptive.html#task-4---creating-summary-tables",
    "title": "03 Descriptive Statistics",
    "section": "\n6.4 Task 4 - Creating summary tables",
    "text": "6.4 Task 4 - Creating summary tables\n\n\n\n\n\n\nTip\n\n\n\nMake sure you have spelled the name of the variables PV1MATH, etc. correctly. They are case sensitive. You can use the function colnames(PISA_2018) to get a list of names and copy and paste them\n\n\n\n\nFind the total number of students who responded in the United States, their mean science, mathematics and reading scores. Compare that to the responses in China (Note the country name for China is: B-S-J-Z (China), indicating the data are drawn from the four participating municipalities, Beijing, Shanghai, Jiangsu and Zhejiang).Don’t forget to pipe (%&gt;%) each step!\nFilter the dataset for the UK and group_by gender (which is ST004D01T). Use summarise to find the maximum, minimum and mean scores for boys and girls in mathematics.\nFilter the dataset for the UK, the US and China, and group_by gender (which is ST004D01T) and country. Use summarise to compare mathematics and science achievement.\n\n\nAnswer# Summarising responses in the US and China and finding means\n\nPISA_2018 %&gt;% \n filter(CNT ==\"United Kingdom\" | CNT==\"B-S-J-Z (China)\")%&gt;%\n  summarise(MeanSci=mean(PV1SCIE), \n            MeanMath=mean(PV1MATH),\n            MeanRead=mean(PV1READ),\n            Total=n())\n\n# Comparing male and female mathematics performance in the UK\n\nPISA_2018 %&gt;% \n filter(CNT ==\"United Kingdom\")%&gt;%\n  group_by(ST004D01T)%&gt;%\n  summarise(MeanMath=mean(PV1MATH),\n            MaxMath=max(PVMATH),\n            MinMath=min(PV1MATH))\n\n# Comparing male and female mathematics performance in the UK, US and China\n\nPISA_2018 %&gt;% \n  filter(CNT ==\"United Kingdom\" | CNT==\"United States\" | CNT== \"B-S-J-Z (China)\")%&gt;%\n  group_by(ST004D01T, CNT)%&gt;%\n  summarise(MeanMath=mean(PV1MATH),\n            MaxMath=max(PV1MATH),\n            MinMath=min(PV1MATH))\n\n\n\n\n\n\n\n\n\nTip\n\n\n\nDon’t forget to use the pipe operator %&gt;% between each function\n\n\n\nST205Q02HA asks participants if they feel students in their school are competing with each other. For students in the UK, find out the percentage of students who responded: Not at all true, Slightly true, Very true, Extremely true, and NA. (Hint: don’t forget to droplevels())\n\nAnswer# Finding the percentage of students who feel they compete in the UK\n\nCompData&lt;-PISA_2018%&gt;%\n  select(CNT, ST205Q02HA)%&gt;%\n  filter(CNT==\"United Kingdom\")%&gt;%\n  group_by(ST205Q02HA)%&gt;%\n  droplevels()\n\nCompData&lt;-as.data.frame(table(CompData))\nTotal=sum(CompData$Freq)\nCompData&lt;-CompData%&gt;%\n  mutate(PercComp=round((Freq*100/Total),1))\n\n\nST012Q09NA asks students if they have a musical instrument in their home. What percentage of students in the UK have no instruments in their home? What is the percentage in China?\n\nAnswer# Finding the percentage of students with no musical instruments in the UK and China\n\nMusicData&lt;-PISA_2018%&gt;%\n  select(CNT, ST012Q09NA)%&gt;%\n  filter(CNT==\"United Kingdom\"|CNT==\"B-S-J-Z (China)\")%&gt;%\n  group_by(ST012Q09NA, CNT)%&gt;%\n  droplevels()\n\nMusicData&lt;-as.data.frame(table(MusicData))\nTotal=sum(MusicData$Freq)\nMusicData&lt;-MusicData%&gt;%\n  mutate(PercComp=round((Freq*100/Total),1))\n\n\n\n\n\n\n\n\n\nTip\n\n\n\nDon’t forget to use the pipe operator %&gt;% between each function"
  },
  {
    "objectID": "chapters/03-Descriptive.html#task-5---bar-graphs",
    "href": "chapters/03-Descriptive.html#task-5---bar-graphs",
    "title": "03 Descriptive Statistics",
    "section": "\n6.5 Task 5 - Bar graphs",
    "text": "6.5 Task 5 - Bar graphs\n\n\nPlot a bar graph of ST221Q03HA - I learn about other cultures at school? First for the UK, then for France.\n\n\nAnswerCultplot &lt;- PISA_2018 %&gt;%\n  select(CNT, ST221Q03HA) %&gt;%\n  filter(CNT==\"United Kingdom\"|CNT== \"France\")\n\n# use culture data to create a graph\nggplot(data=Cultplot,\n       aes(x=ST221Q03HA, fill=CNT)) +\n  geom_bar(position=\"dodge2\")\n\n\n\nPlot a bar graph of ST013Q01TA - How many books are there in your home? for students in the UK. Then plot a graph splitting the data by gender (ST004D01T)\n\n\nAnswer# Create a data set related to books in the UK and include gender\nBookplot &lt;- PISA_2018 %&gt;%\n  select(CNT, ST013Q01TA, ST004D01T) %&gt;%\n  filter(CNT==\"United Kingdom\")\n\n# use book data to create a graph\nggplot(data=Bookplot,\n       aes(x=ST013Q01TA, fill=ST013Q01TA)) +\n  geom_bar(position=\"dodge2\") +\n  theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))\n\n# use fill by gender to split the data\nggplot(data=Bookplot,\n       aes(x=ST013Q01TA, fill=ST004D01T)) +\n  geom_bar(position=\"dodge2\") +\n  theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) # To rotate the x-axis text\n\n\n\nPlot a bar graph of the mean mathematics scores of the countries in the PISA dataset (Hint, you will need to use group_by and summarise and geom_bar(stat=\"identity\") is used when you want geom_bar to plot the actually values (because you have already summarised) rather than counting the values. Second hint: you can reorder the x-axis with the reorder function. Rather than a simple x=CNT you can put x=reorder(CNT, -SciMean) which will reorder the x axis in descending order (because of the - sign) of SciMean.\n\n\nAnswer# Create a data set of science scores, and use group_by and summarise to create mean scores by country\nSciplot &lt;- PISA_2018 %&gt;%\n  select(CNT, PV1SCIE) %&gt;%\n  group_by(CNT)%&gt;%\n  summarise(MeanSci=mean(PV1SCIE))\n# Use geom_bar to plot the data\nggplot(data=Sciplot,\n       aes(x=reorder(CNT, -MeanSci), y=MeanSci, fill=MeanSci)) +\n  geom_bar(stat=\"identity\") +\n  theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))"
  },
  {
    "objectID": "chapters/03-Descriptive.html#task-6---scatter-graphs",
    "href": "chapters/03-Descriptive.html#task-6---scatter-graphs",
    "title": "03 Descriptive Statistics",
    "section": "\n6.6 Task 6 - Scatter graphs",
    "text": "6.6 Task 6 - Scatter graphs\n\n\nFor students in the UK and Brazil, plot science scores (PV1SCIE) by the index of economic, social and cultural status (ESCS) - a little like social class. The try varying the colour of points by country, adding a line.\n\n\nAnswerplotdata&lt;-PISA_2018 %&gt;%\n  select(CNT, PV1SCIE, ESCS)%&gt;%\n  filter(CNT==\"United Kingdom\"|CNT==\"Brazil\")\n# Plot the data as a scatter graph with geom_point()\nggplot(data=plotdata,\n       aes(x=ESCS,y=PV1SCIE, colour=CNT)) +\n  geom_point(alpha=0.2, size=0.6)+\n  labs(x=\"Index of economic, social and cultural status\", y=\"Science Score\")+\n  (geom_smooth(method='lm'))+\n  theme(legend.position = \"bottom\")+\n  labs(CNT = \"Country\") # Changes ST004D01T to gender for the plot\n\n\n\nFor students in the UK, plot a graph of science scores (PV1SCIE) against reading scores (PV1READ). Add a straight line and vary the colour of points by students’ gender\n\n\nAnswerplotdata&lt;-PISA_2018 %&gt;%\n  select(CNT, PV1SCIE, PV1READ, ST004D01T) %&gt;%\n  filter(CNT==\"United Kingdom\")\n# Plot the data as a scatter graph with geom_point()\nggplot(data=plotdata,\n       aes(x=PV1READ,y=PV1SCIE, colour=ST004D01T)) +\n  geom_point(alpha=0.6, size=0.6) +\n  labs(x=\"Reading Score\", y=\"Science Score\") +\n  (geom_smooth(method='lm')) +\n  theme(legend.position = \"bottom\")+\n  labs(colour = \"Gender\") # Changes ST004D01T to gender for the plot\n\n\n\nChallenging task (!): Plot a graph of mean Maths score (PV1MATH) by economic, social and cultural status (ESCS) and highlight countries with maths scores above 800. An outline of how to acheive this:\n\n\ncreate a dataframe of mean PV1MATH and ESCS by country using group_by and summarise. (Don’t forget to use na.RM=TRUE)\nuse mutate and ifelse to add a new variable, called text which contains the names of countires with mathematics scores over 550.\nuse geom_label to add these data points to the x and y coordinates of the countries e.g. geom_label(PV1MATHmean, ESCSmean, label)\n\n\n\nAnswerplotdata&lt;-PISA_2018%&gt;%\n  select(CNT, ESCS, PV1MATH)%&gt;%\n  group_by(CNT)%&gt;%\n  summarise(PV1MATHmean=mean(PV1MATH),\n            ESCSmean=mean(ESCS, na.rm = TRUE))%&gt;%\n  mutate(text=ifelse(PV1MATHmean&gt;550, as.character(CNT), \"\")) \n# If PV1MATHmean is over 800 set text to equal CNT, otherwsie set it to blank (\"\")\nggplot(plotdata, aes(y=PV1MATHmean, x=ESCSmean, colour=PV1MATHmean))+\n  geom_point()+\n  geom_text_repel(aes(y=PV1MATHmean, x=ESCSmean, label=text))+\n  xlab(\"Mean ESCS score\")+\n  ylab(\"Mean mathematics score\")+\n  ggtitle(\"Comparison of mean mathematics and mean ESCS score\")+ theme(legend.position = \"none\") # Hide the legend"
  },
  {
    "objectID": "chapters/03-Descriptive.html#task-1-binning-data",
    "href": "chapters/03-Descriptive.html#task-1-binning-data",
    "title": "03 Descriptive Statistics",
    "section": "\n7.1 Task 1 Binning data",
    "text": "7.1 Task 1 Binning data\nIf we want to plot a frequency plot, the kind of chart that often gives a normal distribution, we need to divide data into counts of ranges of data.\nFor example, to produce a frequency plot of science scores in the UK, I can first run a summary command on PV1SCIE to find the minimum and maximum score:\n\n# Find the range of science score\nsummary(PISA_2018$PV1SCIE)\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max.    NA's \n  58.74  385.60  458.20  460.69  533.44  886.08    5377 \n\n\nIf we wanted to plot a frequency chart of heights, we might divide the range of scores (from 58.74-886.08) into bins of 20 points. To do this we can use the cut(&lt;field&gt;,&lt;breaks&gt;) function within the mutate command on a ‘data.frame’. The &lt;field&gt; specifies the range (i.e. from around 50-900) and &lt;breaks&gt; the size of bins.\nIn the example below, I use cut(PV1SCIE, breaks=seq(50,900,20)) to create a new vector (column in the table) with the total number of pupils divided up into bins. The specification breaks=seq(50,900,20)) sets how the data are broken up - into bins (i.e. groups of respondents) of scores starting at 50 and rising to 900 in steps of 20.\n\n# Creates distribution of schools by size\nbinnedsize &lt;- PISA_2018 %&gt;% # Creates a new data frame with binned data\n  select(PV1SCIE, CNT)%&gt;% # Select the column I need\n  filter(CNT==\"United Kingdom\")%&gt;%\n  mutate(BinnedPV1SCIE = cut(PV1SCIE, breaks=seq(50,900,20)))%&gt;%\n  na.omit() # Drop any NAs\n# Plot the data as a bar graph\nggplot(binnedsize,\n       aes(x=BinnedPV1SCIE)) +\n  geom_bar(fill=\"dark green\") +\n  theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +\n  labs(y=\"Number of schools\", x=\"Pupil range\")\n\n\n\n\n\nCreate a graph of the binned counts of mathematics scores in Malta. Don’t forget to run a summary command first to get a sense of the range in values.\n\n\n\n\n\n\nTip\n\n\n\nTo find out a range of a vector, you can use the range function in the console - for example, to get a sense of the range of numbers of students on SEN support. I can type: range(DfE_SEN_data$SEN.support)\n\n\n\nAnswer# Creates distribution of schools by size\nbinnedsize &lt;- PISA_2018 %&gt;% # Creates a new data frame with binned data\n  select(PV1MATH, CNT)%&gt;% # Select the column I need\n  filter(CNT==\"Malta\")%&gt;%\n  mutate(BinnedPV1MATH = cut(PV1MATH, breaks=seq(20,900,20)))%&gt;%\n  na.omit() # Drop any NAs\n# Plot the data as a bar graph\nggplot(binnedsize,\n       aes(x=BinnedPV1MATH)) +\n  geom_bar(fill=\"orange\") +\n  theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +\n  labs(y=\"Number of schools\", x=\"Pupil range\")\n\n\n\n\n\n\n\n\nTip\n\n\n\nTo find out a range of a vector, you can use the range function in the console - for example, to get a sense of the range of numbers of students on SEN support. I can type: range(DfE_SEN_data$SEN.support)\n\n\nPlot a binned geom_bar graph of the wealth scores in the UK and Belarus on the same axes.\n\nAnswer# Creates distribution of schools by size\nbinnedwealth &lt;- PISA_2018 %&gt;% # Creates a new data frame with binned data\n  select(WEALTH, CNT)%&gt;% # Select the column I need\n  filter(CNT==\"Belarus\"|CNT==\"United Kingdom\")%&gt;%\n  mutate(BinnedWEALTH = cut(WEALTH, breaks=seq(-8,5, 0.25)))%&gt;%\n  na.omit() # Drop any NAs\n# Plot the data as a bar graph\nggplot(binnedwealth,\n       aes(x=BinnedWEALTH, fill=CNT)) +\n  geom_bar() +\n  theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +\n  labs(y=\"Frequency\", x=\"Wealth\")"
  },
  {
    "objectID": "chapters/03-Descriptive.html#task-2-plotting-data-on-maps",
    "href": "chapters/03-Descriptive.html#task-2-plotting-data-on-maps",
    "title": "03 Descriptive Statistics",
    "section": "\n7.2 Task 2 Plotting data on maps",
    "text": "7.2 Task 2 Plotting data on maps\nAs well as graphs, R can also plot data onto maps. The geom_map function will plot a map of a region and you can either plot points (using geom_point) or fill regions by drawing a ploygon of the shape of that region (using geom_polygon).\nFor example, imagine we created a dataframe of the mean science scores of countries in the PISA data:\n\nWorldSci &lt;- PISA_2018 %&gt;%\n  select(CNT, PV1SCIE) %&gt;%\n  group_by(CNT) %&gt;%\n  summarise(meanSci = mean(PV1SCIE)) %&gt;%\n  rename(region = CNT)\n\nIn order to plot the data onto a map, colouring the countries by science scores, we need data which gives the coordinates of the edges of the countries. This data is available in the rworldmap package. First we load the latitude and longitude data into a new dataframe world_data, then use left_join to combine it with the science data.\n\n# Create a dataframe of country latitude and longitude data\nworld_data &lt;- map_data(map=\"world\")\n\nOne quirk of the two dataframes (world_data and the PISA data) is that some countries have different names. For example, in the PISA data, the United Kingdom, and in the rworldmap package, UK. We need to change the PISA version to match the rworldmap.\n\ntmp &lt;- unique(world_data$region)\n\n# The names of two countries in the PISA data set and world_data data set don't match (UK/United Kingdom and US/United States). Change the level names in the PISA data to match the world_data\nlevels(WorldSci$region)[levels(WorldSci$region)==\"United Kingdom\"] &lt;- \"UK\"\nlevels(WorldSci$region)[levels(WorldSci$region)==\"United States\"] &lt;- \"USA\"\nlevels(WorldSci$region)[levels(WorldSci$region)==\"B-S-J-Z (China)\"] &lt;- \"China\"\nlevels(WorldSci$region)[levels(WorldSci$region)==\"Russian Federation\"] &lt;- \"Russia\"\n\n# dplyr method\n# WorldSci &lt;- WorldSci %&gt;%\n#   mutate(region = case_when(\n#                       region == \"United Kingdom\" ~ \"UK\",\n#                       region == \"United States\"  ~ \"USA\",\n#                       region == \"B-S-J-Z (China)\" ~ \"China\",\n#                       region == \"Russian Federation\" ~ \"Russia\",\n#                       .default = region\n#   ))\n\n\n# Add the country latitude and longitude data to the PISA scores\nWorldSci &lt;- left_join(WorldSci, world_data, by=\"region\")\n\n# Use geom_map to plot the basic world map (fill is white, line colour is black)\n# Use geom_polygon to plot the PISA data\n# Add a colour scale\n\nLabels&lt;-WorldSci%&gt;%\n  group_by(region)%&gt;%\n  summarise(meanSci=mean(meanSci), lat=mean(lat), long=mean(long))%&gt;%\n  na.omit()\n\nTo plot the data, we use ggplot, with the data set to WorldSci, and the x and y variables set to long and lat, the longitudes and latitudes. We specify that we want to keep the grouping of the dataframe (i.e. by country).\nFirst we use geom_map to plot a blank map using the data - this will be base for the filled countries. In the aes we give the longitudes and latitudes, and, as we want a blank map set the fill to white and the line colour to black.\nFinally, we use geom_polygon to draw coloured shapes, with the fill changing by the value of meanSci. To make the map look nice, I have used a pre-defined colour scale.\n\n# Use geom_map to plot the basic world map (fill is white, line colour is black)\n# Use geom_polygon to plot the PISA data\n# Add a colour scale\nggplot(data = WorldSci, aes(x=long, y=lat, group=group)) +\n  geom_map(data=world_data, \n           map=world_data, \n           aes(long, lat, map_id=region), \n           fill=\"white\", \n           colour=\"black\")+\n  geom_polygon(aes(fill=meanSci)) +\n  scale_fill_viridis_c(option = \"viridis\")\n\n\n\n\nTo add labels, you can create a data.frame, with only the country names, and their longitudes and latitudes (the mean of the country longitude and latitude), to use as the labels. You can then add geom_text_repelto add the labels. The repel means the labels won’t overlap. Given the number of countries, using geom_text_repel creates a warning that some labels won’t fit.\nNote geom_text_repel(data=Labels, inherit.aes = F, aes(x=long, y=lat,label=region)) we specify the label data.frame, tell the function to use different aesthetics that the first aes call for the map inherit.aes = F and, in aes pass the positions of the labels and specifiy that the labels are in the region vector.\n\nggplot(data = WorldSci, \n       aes(x=long, y=lat, group=group)) +\n  geom_map(data=world_data,\n           map=world_data, \n           aes(map_id=region), \n           fill=\"white\",\n           colour=\"black\")+\n  geom_polygon(aes(fill=meanSci)) +\n  scale_fill_viridis_c(option = \"viridis\") +\n  geom_text_repel(data=Labels,\n                 inherit.aes = F,\n                 aes(x=long, y=lat,label=region))"
  },
  {
    "objectID": "chapters/04-Presentations.html",
    "href": "chapters/04-Presentations.html",
    "title": "04 Presentations",
    "section": "",
    "text": "This task is worth 10% of total marks\nPrepare a 5-minute presentation: Compare a qualitative and quantitative paper on the same theme. What are the strengths and limitations of each approach for addressing the question?\nEnsure the two papers address a broadly similar question (for example, what factors impact female students' decision to study post-compulsory design education?). The research questions of the papers need not be identical but should be similar enough for the comparison to be valid.\nThe presentations should include the following elements\n\nThe research questions/aims of both papers are set out.\nThe sample and methods of each paper are clearly described.\nThe strengths and limitations of each paper are set out. Take care to avoid generic critiques, for example, the sample size of the quantitative paper could be larger. Try and develop critiques of specific elements of each paper.\n\nAreas to focus on include:\n\nAre concepts and variables meaningful and well-defined?\nAre the impacts of the sample selection on the findings acknowledged?\nIs the impact of the tools on the data acknowledged? For example, how might interview or survey questions shape responses?\nAre claims in the findings presented in a way that acknowledges how they were produced? For example, are limits of generalisability and validity acknowledged?\n\nThe marking points are:\n\nWere the research aims of both papers described?\nWere the samples and methods of both papers clearly reported?\nWere strengths of the qualitative paper reported?\nWere strengths of the quantitative paper reported?\nWere limitations of the qualitative paper reported?\nWere limitations of the quantitative paper reported?\n\n\n\n\n\n\n\nTip\n\n\n\nMake sure you practice your presentation to fit into the time\n\n\n\n\n\n\n\n\nTip\n\n\n\nAvoid generic strengths and limitations such as, the quantitative paper has higher statistical generalisability. Aim to refer to unique features of the papers. How were the variables constructed? What was unique about the findings in each case?"
  },
  {
    "objectID": "chapters/05-Introduction_to_PISA.html",
    "href": "chapters/05-Introduction_to_PISA.html",
    "title": "05 Introduction to PISA",
    "section": "",
    "text": "Please read through 2018 technical report: PISA technical report\n\nRemember to load the PISA 2018 data set\n\nlibrary(arrow)\nlibrary(tidyverse)\n\nPISA_2018 &lt;- read_parquet(r\"[&lt;folder&gt;PISA_2018_student_subset.parquet]\")\n\n\nThough it has been noted that interest, as measured by publications, interest in International large-scale assessments (ILSAs) peaked around 2012 (Jerrim 2023), ILSAs remain a useful comparative tool for detecting patterns in educational achievement over time and across countries.\nThe OECD Programme for International Student Assessment is an international, survey of 15-year-old students (OECD 2018). The survey includes items that measure achievement in mathematics, reading and science, various competencies (for example, digital skills and problem solving) and participants’ perceptions of their school and home. In addition to the student survey which is the focus of this paper, teacher and parent surveys collect additional data.\nThe first PISA survey took place in 2000 (this round of data collection was followed by the inclusion of additional countries in 2001) (OECD 2018). The assessment has taken place every three years (2000, 2003, 2006, 2009, 2012, 2015, 2018 and 2022). The 2022 survey was delayed due to the COVID pandemic (OECD 2021). The number of participating countries has risen from 43, in 2000, to 690,000 in 2022. The number of participating students is shown in Table 1.\nTable 1: Number of students completing PISA assessment by year\n\n\nYear\nNumber completing assessment\n\n\n\n2000\n265,000\n\n\n2003\n275,000\n\n\n2006\n400,000\n\n\n2009\n470,000\n\n\n2012\n510,000\n\n\n2015\n540,000\n\n\n2018\n600,000\n\n\n2022\n690,000\n\n\n\nThe PISA survey uses a probabilistic, stratified clustered survey design (Jerrim et al. 2017).\nTo ensure that countries make equal contributions to regression models when they have different response rates, senate weights are applied to data (Jerrim et al. 2017).\nA number of limitations of the PISA methodology have been noted. Sampling issues, including sample representatives, non-response rates and population coverage (Zieger et al. 2022; Rutkowski and Rutkowski 2016; Gillis, Polesel, and Wu 2016; Hopmann, Brinek, and Retzl 2007).\nAnders et al. (2021) and Jerrim (2021) have shown that assumptions for imputing values for non-participating students used to construct the sample may have significant impacts on achievement scores.\nThree sources of error are worth considering (OECD 2019). First, sampling error, uncertainty in the degree to which results from the sample generalise to wider populations - in 2018, the OECD average sampling error was 0.4 of a PISA point score. Second, measurement error, uncertainty in the extent to which test items measure proficiency. In 2018, the measurement error was around 0.8 of a point in mathematics and science and 0.5 of a score point in reading. Third, the link error is the uncertainty in comparison between scores in different years. For comparisons of Science scores between 2018 and 2015, the link error is 1.5 points.\nFrom 2015, the majority of countries have used computer based test, following a switch from paper assessments (Jerrim 2016). A randomised control trial of the two methods of delivery, conducted by the OECD prior to the switch indicated a difference in score between those taking paper and computer tests. The OECD introduced an adjustment to compensate for this effect, but the difference is not entirely removed by the correction Jerrim et al. (2018). However, Jerrim notes that ‘in terms of cross-country rankings, there remains a high degree of consistency…the vast majority of countries are simply ’shifted’ by a uniform amount’ (pp. 508-509).\nSee also Feskens, Fox, and Zwitser (2019) - change in scores due to changed mode. E.g. ‘The reported decrease in mean science scores in 2015 was larger than the decrease in mathematics.4 This might be due to the introduction of new interactive items, which only took place for the science domain.’ (Feskens, Fox, and Zwitser 2019, 245)\n\n\nRecall you can use group_by and summarise to group individual student measures and find means and standard deviations for countries. For example, to find the mean wealth scores for the countries, and rank in descending order, we first select the variables of interest CNT and WEALTH, then group_by CNT and summarise to get the mean. As there are some NA values, we need to include na.rm=TRUE to tell summarise to ignore the missing values. Finally, we arrange in descending order by the new variable we create meanwealth. We can do the same and add a calculation to get the standard deviation.\n\nPISA2018WealthRank &lt;- PISA_2018 %&gt;%\n  select(CNT, WEALTH) %&gt;% # Select variables of interest\n  group_by(CNT) %&gt;% # group by country\n  summarise(meanwealth=mean(WEALTH, na.rm=TRUE)) %&gt;% \n                    # summarise  country data to find the mean WEALTH\n  arrange(desc(meanwealth)) # arrange in descending order based on the meanwealth score\n\n# With standard deviations\n\nPISA2018WealthRank &lt;- PISA_2018 %&gt;%\n  select(CNT, WEALTH) %&gt;% # Select variables of interest\n  group_by(CNT) %&gt;% # group by country\n  summarise(meanwealth=mean(WEALTH, na.rm =TRUE),  \n            # summarise  country data to find the mean WEALTH\n            sdwealth=sd(WEALTH, na.rm=TRUE)) %&gt;% # and standard deviation\n  arrange(desc(meanwealth)) # arrange in descending order based on the meanwealth score\n\n\nRecall you can use geom_bar to plot a bar graph. For example, if we wanted to plot the PISA2018WealthRank dataframe we just created, we pass the data to ggplot. Recall that if you are passing geom_bar the exact values you want to plot, rather than making it count (for example, by including the original dataset with all student entries), you need to specify geom_bar(stat='identity')\nI have added +theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) which rotates the text on the x-axis.\n\nggplot(PISA2018WealthRank, aes(x=CNT, y=meanwealth))+\n  geom_bar(stat='identity')+\n  theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))\n\n\n\n\nWe can improve this plot by reordering the x-axis to rank the countries - we switch x=CNT to x=reorder(CNT, -meanwealth) that is we reorder the x axis based on descending (indicated by the minus sign -meanwealth) meanwealth.\n\nggplot(PISA2018WealthRank, aes(x=reorder(CNT, -meanwealth), y=meanwealth)) +\n  geom_bar(stat='identity') +\n  theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))\n\n\n\n\nIf you like, you can add colour, tidy up the axis labels, and give a title:\n\nggplot(PISA2018WealthRank, aes(x=reorder(CNT, -meanwealth), y=meanwealth))+\n  geom_bar(stat='identity', fill=\"skyblue\")+\n  theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))+\n  ggtitle(\"Countries ranked by WEALTH\")+\n  xlab(\"Country\")+\n  ylab(\"Mean WEALTH\")\n\n\n\n\n\nTo plot a scatter plot, recall we use geom_point. For example, to plot reading scores against mathematics scores in China (note China’s CNT value: B-S-J-Z (China) which indicates the data ) we: a) create a data set of reading and science scores after filtering for China; b) pass the data to ggplot; c) use ’aes to specify the x and y variables and d) plot with geom_point().\n\nChinaplot &lt;- PISA_2018 %&gt;%\n  select(CNT, PV1READ, PV1SCIE) %&gt;%\n  filter(CNT==\"B-S-J-Z (China)\")\nggplot(Chinaplot, aes(x=PV1READ, y=PV1SCIE)) +\n  geom_point()\n\n\n\n\nThat graph is quite dense, so we can use the alpha function to make the points slightly transparent, size to make them smaller, and set their colour. I will also tidy up the axis names and add a line.\n\nChinaplot&lt;-PISA_2018 %&gt;%\n  select(CNT, PV1READ, PV1SCIE) %&gt;%\n  filter(CNT==\"B-S-J-Z (China)\")\n\nggplot(Chinaplot, aes(x=PV1READ, y=PV1SCIE)) +\n  geom_point(alpha=0.6, size=0.1, colour=\"red\") +\n  xlab(\"Reading score\") +\n  ylab(\"Science score\") +\n  geom_smooth(method=\"lm\", colour=\"black\")\n\n\n\n\n\nAn alternative type of plot, you have seen before, is the density plot, which is a kind of continuous histogram. The density plot can be useful for visualising the achievement scores of students. For example, the mathematics scores of girls and boys (recall the gender variable is ST004D01T) in the US. Notice, for the plot, I use aes to set my x variable, and then specify that the plot should fill by gender (fill=ST004D01T). Finally, in geom_density(alpha=0.6) I set the alpha to 0.6 to make the fill areas partially transparent.\n\nUSMathplot &lt;- PISA_2018 %&gt;%\n  select(CNT, PV1MATH, ST004D01T) %&gt;%\n  filter(CNT==\"United States\")\nggplot(USMathplot, aes(x=PV1MATH, fill=ST004D01T)) +\n  geom_density(alpha=0.6)\n\n\n\n\n\nA powerful feature of ggplot is being able to produce the same graph for multiple values of a variable, for example, for mutliple countries. For example, we may want to produce the density graph of PV1MATH score by gender, for several countries in the data set. To do that, we produce a data set of PV1MATH scores, and gender (ST004D01T) and filter for four countries (Philippines, UK, Bulgaria and Germany). We use the same code as above to plot the graphs but add +facet_wrap(.~CNT) - facet_wrap tells ggplot to produce a multipanel plot and .~CNT means do the same as above, but vary across countries.\n\nMathplot &lt;- PISA_2018 %&gt;%\n  select(CNT, PV1MATH, ST004D01T) %&gt;%\n  filter(CNT==\"Philippines\"|CNT== \"United Kingdom\"|CNT== \"Bulgaria\" |CNT==\"Germany\")\nggplot(Mathplot, aes(x=PV1MATH, fill=ST004D01T)) +\n  geom_density(alpha=0.6) +\n  facet_wrap(. ~ CNT)\n\n\n\n\n\nA useful analytical choice is to categorise some a numerical variable into ordinal classes. For example, rather than treating WEALTH as a continuous scale, you might want to split into high and low wealth groups (for example, those above and below the mean value). To do this, first calculate the mean mean(WEALTH). Then we add a new vector, which we will call wealthclass using the mutate function. We set the value of this wealthclass using ifelse. If WEALTH is more than the mean score, we set wealthclass to HIGH, and if it is anything else, we set it to LOW. We do that using wealthclass=ifelse(WEALTH&gt;MeanUKwealth, \"High\", \"Low\"). Note in ifelse the first value is returned if the identity is true (i.e. if WEALTH&gt;MeanUKwealth wealthclass is set to High). If the value if not true, the second value is set (e.g. if WEALTH is not &gt; MeanUKwealth then wealthclass is set to LOW)\nFor example, create a dataset of UK participants WEALTH sorted into HIGH and LOW categories.\n\nUKPISA2018 &lt;- PISA_2018 %&gt;%\n  select(CNT, WEALTH) %&gt;%\n  filter(CNT==\"United Kingdom\")\n\nMeanUKwealth &lt;- mean(UKPISA2018$WEALTH, na.rm=TRUE)\n\nUKPISA2018 &lt;- UKPISA2018 %&gt;%\n  mutate(wealthclass=ifelse(WEALTH&gt;MeanUKwealth, \"High\", \"Low\"))\n\n\n\n\nCreate a ranked list of countries by their mean science scores (PV1SCIE). What are the top five countries for science? Do the same for reading (PV1READ). What patterns do you notice? Why might a researcher be critical of such rankings [Extension: Include the standard deviation of each country (hint: use the sd function) - can you detect any patterns?]\n\nShow the answerPISA2018SciRank&lt;-PISA_2018%&gt;%\n  select(CNT, PV1SCIE)%&gt;% # Select variables of interest\n  group_by(CNT)%&gt;% # group by country\n  summarise(meansci=mean(PV1SCIE))%&gt;% # summarise  country data to find the mean Sci score\n  arrange(desc(meansci)) # arrange in descending order based on the meansci score\n\nPISA201ReadRank&lt;-PISA_2018%&gt;%\n  select(CNT, PV1READ)%&gt;% # Select variables of interest\n  group_by(CNT)%&gt;% # group by country\n  summarise(meanread=mean(PV1READ))%&gt;% # summarise  country data to find  mean Read score\n  arrange(desc(meanread)) # arrange in descending order based on the meansci score\n\n# With standard deviations\n\nPISA2018SciRank&lt;-PISA_2018%&gt;%\n  select(CNT, PV1SCIE)%&gt;% # Select variables of interest\n  group_by(CNT)%&gt;% # group by country\n  summarise(meansci=mean(PV1SCIE), \n            sdsci=sd(PV1SCIE))%&gt;% # summarise  country data to find the mean Sci score\n  arrange(desc(meansci)) # arrange in descending order based on the meansci score\n\nPISA201ReadRank&lt;-PISA_2018%&gt;%\n  select(CNT, PV1READ)%&gt;% # Select variables of interest\n  group_by(CNT)%&gt;% # group by country\n  summarise(meanread=mean(PV1READ),\n            sdread=sd(PV1READ))%&gt;% # summarise  country data to find  mean Read score\n  arrange(desc(meanread)) # arrange in descending order based on the meansci score\n\n\n\n\n\nUse geom_density to plot distributions Plot the distribution of Japanese and UK mathematics scores - what patterns do you notice?\n\n\n\nShow the answerJPUKMath&lt;-PISA_2018 %&gt;%\n  select(CNT, PV1MATH) %&gt;%\n  filter(CNT==\"United Kingdom\"|CNT==\"Japan\")\n\nggplot(data=JPUKMath,\n       aes(x=PV1MATH, fill=CNT)) +\n  geom_density(alpha=0.5)\n\n\n\n\n\n\n\nExamine gender differences: Plot the distributions of mathematics achievement in the UK by gender.\n\n\n\nShow the answerUKMathGender &lt;- PISA_2018 %&gt;%\n  select(CNT, PV1MATH, ST004D01T) %&gt;%\n  filter(CNT==\"United Kingdom\")\n\nggplot(data=UKMathGender,\n       aes(x=PV1MATH, fill=ST004D01T)) +\n  geom_density(alpha=0.5)\n\n\n\n\n\n\nPlot density graphs of gender differences in mathematics scores in the UK, US, Japan, Korea and Finland. Hint use facet_wrap(.~CNT)\n\n\nShow the answerMathGender &lt;- PISA_2018 %&gt;%\n  select(CNT, PV1MATH, ST004D01T) %&gt;%\n  filter(CNT==\"United Kingdom\"|CNT==\"United States\"|CNT==\"Japan\"| CNT==\"Korea\"|CNT==\"Finland\")\n\nggplot(data=MathGender,\n       aes(x=PV1MATH, fill=ST004D01T)) +\n  geom_density(alpha=0.5) +\n  facet_wrap(.~CNT)\n\n\n\n\n\n\nPlot a scatter graph of mean mathematics achievement (y-axis) by mean wealth (x-axis) with each country as a single point.\n\n\nShow the answerWealthdata &lt;- PISA_2018 %&gt;%\n  select(CNT, WEALTH, PV1MATH) %&gt;%\n  group_by(CNT) %&gt;%\n  summarise(MeanWealth=mean(WEALTH, na.rm = TRUE),\n            MeanMath=mean(PV1MATH, na.rm = TRUE))\n\nggplot(data=Wealthdata,\n       aes(x=MeanWealth, y=MeanMath)) +\n  geom_point(alpha=0.5) +\n  xlab(\"Wealth\") +\n  ylab(\"Mathematics score\")\n\n\n\n\nHighlight outliers (any score of over 550) in a different colour\n\nShow the answerWealthdata &lt;- PISA_2018 %&gt;%\n  select(CNT, WEALTH, PV1MATH) %&gt;%\n  group_by(CNT) %&gt;%\n  summarise(MeanWealth=mean(WEALTH, na.rm = TRUE),\n            MeanMath=mean(PV1MATH, na.rm = TRUE)) %&gt;%\n  mutate(label=ifelse(MeanMath&gt;550, \"Red\", \"Blue\"))\n\nggplot(data=Wealthdata,\n       aes(x=MeanWealth, y=MeanMath, colour=label)) +\n  geom_point() +\n  xlab(\"Wealth\") +\n  ylab(\"Mathematics score\")\n\n\n\n\nAdd the country names as a label to the outliers\n\nShow the answerWealthdata &lt;- PISA_2018 %&gt;%\n  select(CNT, WEALTH, PV1MATH) %&gt;%\n  group_by(CNT) %&gt;%\n  summarise(MeanWealth=mean(WEALTH, na.rm = TRUE),\n            MeanMath=mean(PV1MATH, na.rm = TRUE)) %&gt;%\n  mutate(label=ifelse(MeanMath&gt;550, \"Red\", \"Blue\")) %&gt;%\n  mutate(labelname=ifelse(MeanMath&gt;550, \n                          as.character(CNT), \n                          NA))\n  \n\nggplot(data=Wealthdata,\n       aes(x=MeanWealth, y=MeanMath, colour=label)) +\n  geom_point() +\n  geom_text(aes(label=labelname), \n            colour=\"black\", \n            check_overlap = TRUE) +\n  xlab(\"Wealth\") +\n  ylab(\"Mathematics score\")\n\n\n\n\n\n\nExamine Likert responses by country using facet plot.\nFor ST125Q01NA - How old were you when you started early childhood education? Plot responses, first, for the whole data set, then facet plot for the UK, Germany, Belgium, Austria, France, Poland, Estonia, Finland and Italy.\n\n\nShow the answerCulturedata&lt;-PISA_2018 %&gt;%\n  select(CNT, ST125Q01NA) %&gt;%\n  group_by(CNT)\n  \nggplot(data=Culturedata,\n       aes(x=ST125Q01NA)) +\n  geom_bar() +\n  xlab(\"How old were you when you started early childhood education?\") +\n  theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))\n\n\n\n\nThen use faceting to split the plots by country\n\nShow the answerCulturedata &lt;- PISA_2018 %&gt;%\n  select(CNT, ST125Q01NA) %&gt;%\n  filter(CNT==\"United Kingdom\"|CNT==\"Germany\" | CNT==\"Belgium\"|   CNT==\"Austria\"| CNT==\"France\" | CNT==\"Poland\" | CNT==\"Estonia\" | CNT==\"Finland\"| CNT==\"Italy\")\n  \nggplot(data=Culturedata,\n       aes(x=ST125Q01NA, fill=CNT))+\n  geom_bar()+\n  xlab(\"How old were you when you started early childhood education?\") +\n  theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +\n  facet_wrap(. ~ CNT)\n\n\n\n\n\n\nCategorising Variables\nSplit the WEALTH variable for the UK and Germany into the following groups:\n\n\nWEALTH\nName of category\n\n\n\n&gt;1\nVery High\n\n\n0&gt;WEALTH&lt;1\nHigh\n\n\n0&lt;\nLow\n\n\n\nPlot bar graphs of participants in these categories for both countries\n\n\nShow the answerWealth &lt;- PISA_2018 %&gt;%\n  select(CNT, WEALTH) %&gt;%\n  filter(CNT==\"United Kingdom\" | CNT==\"Germany\") %&gt;%\n  mutate(WTHCTG = ifelse(WEALTH &gt; 0, \n                       ifelse(WEALTH &gt; 1,\n                             \"Very high\",\n                             \"High\"), \n                       \"Low\"))%&gt;%\n  group_by(CNT) %&gt;%\n  droplevels()\n\nggplot(data=Wealth, \n       aes(x=WTHCTG, fill=WTHCTG))+\n  geom_bar()+\n  facet_wrap(.~CNT)+\n  xlab(\"Wealth grouping\")\n\n\n\n\n:::\n\n\n\n\n\n\nTip"
  },
  {
    "objectID": "chapters/05-Introduction_to_PISA.html#pre-session-tasks",
    "href": "chapters/05-Introduction_to_PISA.html#pre-session-tasks",
    "title": "05 Introduction to PISA",
    "section": "",
    "text": "Please read through 2018 technical report: PISA technical report\n\nRemember to load the PISA 2018 data set\n\nlibrary(arrow)\nlibrary(tidyverse)\n\nPISA_2018 &lt;- read_parquet(r\"[&lt;folder&gt;PISA_2018_student_subset.parquet]\")"
  },
  {
    "objectID": "chapters/05-Introduction_to_PISA.html#the-pisa-assessments",
    "href": "chapters/05-Introduction_to_PISA.html#the-pisa-assessments",
    "title": "05 Introduction to PISA",
    "section": "",
    "text": "Though it has been noted that interest, as measured by publications, interest in International large-scale assessments (ILSAs) peaked around 2012 (Jerrim 2023), ILSAs remain a useful comparative tool for detecting patterns in educational achievement over time and across countries.\nThe OECD Programme for International Student Assessment is an international, survey of 15-year-old students (OECD 2018). The survey includes items that measure achievement in mathematics, reading and science, various competencies (for example, digital skills and problem solving) and participants’ perceptions of their school and home. In addition to the student survey which is the focus of this paper, teacher and parent surveys collect additional data.\nThe first PISA survey took place in 2000 (this round of data collection was followed by the inclusion of additional countries in 2001) (OECD 2018). The assessment has taken place every three years (2000, 2003, 2006, 2009, 2012, 2015, 2018 and 2022). The 2022 survey was delayed due to the COVID pandemic (OECD 2021). The number of participating countries has risen from 43, in 2000, to 690,000 in 2022. The number of participating students is shown in Table 1.\nTable 1: Number of students completing PISA assessment by year\n\n\nYear\nNumber completing assessment\n\n\n\n2000\n265,000\n\n\n2003\n275,000\n\n\n2006\n400,000\n\n\n2009\n470,000\n\n\n2012\n510,000\n\n\n2015\n540,000\n\n\n2018\n600,000\n\n\n2022\n690,000\n\n\n\nThe PISA survey uses a probabilistic, stratified clustered survey design (Jerrim et al. 2017).\nTo ensure that countries make equal contributions to regression models when they have different response rates, senate weights are applied to data (Jerrim et al. 2017).\nA number of limitations of the PISA methodology have been noted. Sampling issues, including sample representatives, non-response rates and population coverage (Zieger et al. 2022; Rutkowski and Rutkowski 2016; Gillis, Polesel, and Wu 2016; Hopmann, Brinek, and Retzl 2007).\nAnders et al. (2021) and Jerrim (2021) have shown that assumptions for imputing values for non-participating students used to construct the sample may have significant impacts on achievement scores.\nThree sources of error are worth considering (OECD 2019). First, sampling error, uncertainty in the degree to which results from the sample generalise to wider populations - in 2018, the OECD average sampling error was 0.4 of a PISA point score. Second, measurement error, uncertainty in the extent to which test items measure proficiency. In 2018, the measurement error was around 0.8 of a point in mathematics and science and 0.5 of a score point in reading. Third, the link error is the uncertainty in comparison between scores in different years. For comparisons of Science scores between 2018 and 2015, the link error is 1.5 points.\nFrom 2015, the majority of countries have used computer based test, following a switch from paper assessments (Jerrim 2016). A randomised control trial of the two methods of delivery, conducted by the OECD prior to the switch indicated a difference in score between those taking paper and computer tests. The OECD introduced an adjustment to compensate for this effect, but the difference is not entirely removed by the correction Jerrim et al. (2018). However, Jerrim notes that ‘in terms of cross-country rankings, there remains a high degree of consistency…the vast majority of countries are simply ’shifted’ by a uniform amount’ (pp. 508-509).\nSee also Feskens, Fox, and Zwitser (2019) - change in scores due to changed mode. E.g. ‘The reported decrease in mean science scores in 2015 was larger than the decrease in mathematics.4 This might be due to the introduction of new interactive items, which only took place for the science domain.’ (Feskens, Fox, and Zwitser 2019, 245)"
  },
  {
    "objectID": "chapters/05-Introduction_to_PISA.html#a-reminder-about-summarising-data-graphing-and-categorising",
    "href": "chapters/05-Introduction_to_PISA.html#a-reminder-about-summarising-data-graphing-and-categorising",
    "title": "05 Introduction to PISA",
    "section": "",
    "text": "Recall you can use group_by and summarise to group individual student measures and find means and standard deviations for countries. For example, to find the mean wealth scores for the countries, and rank in descending order, we first select the variables of interest CNT and WEALTH, then group_by CNT and summarise to get the mean. As there are some NA values, we need to include na.rm=TRUE to tell summarise to ignore the missing values. Finally, we arrange in descending order by the new variable we create meanwealth. We can do the same and add a calculation to get the standard deviation.\n\nPISA2018WealthRank &lt;- PISA_2018 %&gt;%\n  select(CNT, WEALTH) %&gt;% # Select variables of interest\n  group_by(CNT) %&gt;% # group by country\n  summarise(meanwealth=mean(WEALTH, na.rm=TRUE)) %&gt;% \n                    # summarise  country data to find the mean WEALTH\n  arrange(desc(meanwealth)) # arrange in descending order based on the meanwealth score\n\n# With standard deviations\n\nPISA2018WealthRank &lt;- PISA_2018 %&gt;%\n  select(CNT, WEALTH) %&gt;% # Select variables of interest\n  group_by(CNT) %&gt;% # group by country\n  summarise(meanwealth=mean(WEALTH, na.rm =TRUE),  \n            # summarise  country data to find the mean WEALTH\n            sdwealth=sd(WEALTH, na.rm=TRUE)) %&gt;% # and standard deviation\n  arrange(desc(meanwealth)) # arrange in descending order based on the meanwealth score\n\n\nRecall you can use geom_bar to plot a bar graph. For example, if we wanted to plot the PISA2018WealthRank dataframe we just created, we pass the data to ggplot. Recall that if you are passing geom_bar the exact values you want to plot, rather than making it count (for example, by including the original dataset with all student entries), you need to specify geom_bar(stat='identity')\nI have added +theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) which rotates the text on the x-axis.\n\nggplot(PISA2018WealthRank, aes(x=CNT, y=meanwealth))+\n  geom_bar(stat='identity')+\n  theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))\n\n\n\n\nWe can improve this plot by reordering the x-axis to rank the countries - we switch x=CNT to x=reorder(CNT, -meanwealth) that is we reorder the x axis based on descending (indicated by the minus sign -meanwealth) meanwealth.\n\nggplot(PISA2018WealthRank, aes(x=reorder(CNT, -meanwealth), y=meanwealth)) +\n  geom_bar(stat='identity') +\n  theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))\n\n\n\n\nIf you like, you can add colour, tidy up the axis labels, and give a title:\n\nggplot(PISA2018WealthRank, aes(x=reorder(CNT, -meanwealth), y=meanwealth))+\n  geom_bar(stat='identity', fill=\"skyblue\")+\n  theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))+\n  ggtitle(\"Countries ranked by WEALTH\")+\n  xlab(\"Country\")+\n  ylab(\"Mean WEALTH\")\n\n\n\n\n\nTo plot a scatter plot, recall we use geom_point. For example, to plot reading scores against mathematics scores in China (note China’s CNT value: B-S-J-Z (China) which indicates the data ) we: a) create a data set of reading and science scores after filtering for China; b) pass the data to ggplot; c) use ’aes to specify the x and y variables and d) plot with geom_point().\n\nChinaplot &lt;- PISA_2018 %&gt;%\n  select(CNT, PV1READ, PV1SCIE) %&gt;%\n  filter(CNT==\"B-S-J-Z (China)\")\nggplot(Chinaplot, aes(x=PV1READ, y=PV1SCIE)) +\n  geom_point()\n\n\n\n\nThat graph is quite dense, so we can use the alpha function to make the points slightly transparent, size to make them smaller, and set their colour. I will also tidy up the axis names and add a line.\n\nChinaplot&lt;-PISA_2018 %&gt;%\n  select(CNT, PV1READ, PV1SCIE) %&gt;%\n  filter(CNT==\"B-S-J-Z (China)\")\n\nggplot(Chinaplot, aes(x=PV1READ, y=PV1SCIE)) +\n  geom_point(alpha=0.6, size=0.1, colour=\"red\") +\n  xlab(\"Reading score\") +\n  ylab(\"Science score\") +\n  geom_smooth(method=\"lm\", colour=\"black\")\n\n\n\n\n\nAn alternative type of plot, you have seen before, is the density plot, which is a kind of continuous histogram. The density plot can be useful for visualising the achievement scores of students. For example, the mathematics scores of girls and boys (recall the gender variable is ST004D01T) in the US. Notice, for the plot, I use aes to set my x variable, and then specify that the plot should fill by gender (fill=ST004D01T). Finally, in geom_density(alpha=0.6) I set the alpha to 0.6 to make the fill areas partially transparent.\n\nUSMathplot &lt;- PISA_2018 %&gt;%\n  select(CNT, PV1MATH, ST004D01T) %&gt;%\n  filter(CNT==\"United States\")\nggplot(USMathplot, aes(x=PV1MATH, fill=ST004D01T)) +\n  geom_density(alpha=0.6)\n\n\n\n\n\nA powerful feature of ggplot is being able to produce the same graph for multiple values of a variable, for example, for mutliple countries. For example, we may want to produce the density graph of PV1MATH score by gender, for several countries in the data set. To do that, we produce a data set of PV1MATH scores, and gender (ST004D01T) and filter for four countries (Philippines, UK, Bulgaria and Germany). We use the same code as above to plot the graphs but add +facet_wrap(.~CNT) - facet_wrap tells ggplot to produce a multipanel plot and .~CNT means do the same as above, but vary across countries.\n\nMathplot &lt;- PISA_2018 %&gt;%\n  select(CNT, PV1MATH, ST004D01T) %&gt;%\n  filter(CNT==\"Philippines\"|CNT== \"United Kingdom\"|CNT== \"Bulgaria\" |CNT==\"Germany\")\nggplot(Mathplot, aes(x=PV1MATH, fill=ST004D01T)) +\n  geom_density(alpha=0.6) +\n  facet_wrap(. ~ CNT)\n\n\n\n\n\nA useful analytical choice is to categorise some a numerical variable into ordinal classes. For example, rather than treating WEALTH as a continuous scale, you might want to split into high and low wealth groups (for example, those above and below the mean value). To do this, first calculate the mean mean(WEALTH). Then we add a new vector, which we will call wealthclass using the mutate function. We set the value of this wealthclass using ifelse. If WEALTH is more than the mean score, we set wealthclass to HIGH, and if it is anything else, we set it to LOW. We do that using wealthclass=ifelse(WEALTH&gt;MeanUKwealth, \"High\", \"Low\"). Note in ifelse the first value is returned if the identity is true (i.e. if WEALTH&gt;MeanUKwealth wealthclass is set to High). If the value if not true, the second value is set (e.g. if WEALTH is not &gt; MeanUKwealth then wealthclass is set to LOW)\nFor example, create a dataset of UK participants WEALTH sorted into HIGH and LOW categories.\n\nUKPISA2018 &lt;- PISA_2018 %&gt;%\n  select(CNT, WEALTH) %&gt;%\n  filter(CNT==\"United Kingdom\")\n\nMeanUKwealth &lt;- mean(UKPISA2018$WEALTH, na.rm=TRUE)\n\nUKPISA2018 &lt;- UKPISA2018 %&gt;%\n  mutate(wealthclass=ifelse(WEALTH&gt;MeanUKwealth, \"High\", \"Low\"))"
  },
  {
    "objectID": "chapters/05-Introduction_to_PISA.html#seminar-activities",
    "href": "chapters/05-Introduction_to_PISA.html#seminar-activities",
    "title": "05 Introduction to PISA",
    "section": "",
    "text": "Create a ranked list of countries by their mean science scores (PV1SCIE). What are the top five countries for science? Do the same for reading (PV1READ). What patterns do you notice? Why might a researcher be critical of such rankings [Extension: Include the standard deviation of each country (hint: use the sd function) - can you detect any patterns?]\n\nShow the answerPISA2018SciRank&lt;-PISA_2018%&gt;%\n  select(CNT, PV1SCIE)%&gt;% # Select variables of interest\n  group_by(CNT)%&gt;% # group by country\n  summarise(meansci=mean(PV1SCIE))%&gt;% # summarise  country data to find the mean Sci score\n  arrange(desc(meansci)) # arrange in descending order based on the meansci score\n\nPISA201ReadRank&lt;-PISA_2018%&gt;%\n  select(CNT, PV1READ)%&gt;% # Select variables of interest\n  group_by(CNT)%&gt;% # group by country\n  summarise(meanread=mean(PV1READ))%&gt;% # summarise  country data to find  mean Read score\n  arrange(desc(meanread)) # arrange in descending order based on the meansci score\n\n# With standard deviations\n\nPISA2018SciRank&lt;-PISA_2018%&gt;%\n  select(CNT, PV1SCIE)%&gt;% # Select variables of interest\n  group_by(CNT)%&gt;% # group by country\n  summarise(meansci=mean(PV1SCIE), \n            sdsci=sd(PV1SCIE))%&gt;% # summarise  country data to find the mean Sci score\n  arrange(desc(meansci)) # arrange in descending order based on the meansci score\n\nPISA201ReadRank&lt;-PISA_2018%&gt;%\n  select(CNT, PV1READ)%&gt;% # Select variables of interest\n  group_by(CNT)%&gt;% # group by country\n  summarise(meanread=mean(PV1READ),\n            sdread=sd(PV1READ))%&gt;% # summarise  country data to find  mean Read score\n  arrange(desc(meanread)) # arrange in descending order based on the meansci score\n\n\n\n\n\nUse geom_density to plot distributions Plot the distribution of Japanese and UK mathematics scores - what patterns do you notice?\n\n\n\nShow the answerJPUKMath&lt;-PISA_2018 %&gt;%\n  select(CNT, PV1MATH) %&gt;%\n  filter(CNT==\"United Kingdom\"|CNT==\"Japan\")\n\nggplot(data=JPUKMath,\n       aes(x=PV1MATH, fill=CNT)) +\n  geom_density(alpha=0.5)\n\n\n\n\n\n\n\nExamine gender differences: Plot the distributions of mathematics achievement in the UK by gender.\n\n\n\nShow the answerUKMathGender &lt;- PISA_2018 %&gt;%\n  select(CNT, PV1MATH, ST004D01T) %&gt;%\n  filter(CNT==\"United Kingdom\")\n\nggplot(data=UKMathGender,\n       aes(x=PV1MATH, fill=ST004D01T)) +\n  geom_density(alpha=0.5)\n\n\n\n\n\n\nPlot density graphs of gender differences in mathematics scores in the UK, US, Japan, Korea and Finland. Hint use facet_wrap(.~CNT)\n\n\nShow the answerMathGender &lt;- PISA_2018 %&gt;%\n  select(CNT, PV1MATH, ST004D01T) %&gt;%\n  filter(CNT==\"United Kingdom\"|CNT==\"United States\"|CNT==\"Japan\"| CNT==\"Korea\"|CNT==\"Finland\")\n\nggplot(data=MathGender,\n       aes(x=PV1MATH, fill=ST004D01T)) +\n  geom_density(alpha=0.5) +\n  facet_wrap(.~CNT)\n\n\n\n\n\n\nPlot a scatter graph of mean mathematics achievement (y-axis) by mean wealth (x-axis) with each country as a single point.\n\n\nShow the answerWealthdata &lt;- PISA_2018 %&gt;%\n  select(CNT, WEALTH, PV1MATH) %&gt;%\n  group_by(CNT) %&gt;%\n  summarise(MeanWealth=mean(WEALTH, na.rm = TRUE),\n            MeanMath=mean(PV1MATH, na.rm = TRUE))\n\nggplot(data=Wealthdata,\n       aes(x=MeanWealth, y=MeanMath)) +\n  geom_point(alpha=0.5) +\n  xlab(\"Wealth\") +\n  ylab(\"Mathematics score\")\n\n\n\n\nHighlight outliers (any score of over 550) in a different colour\n\nShow the answerWealthdata &lt;- PISA_2018 %&gt;%\n  select(CNT, WEALTH, PV1MATH) %&gt;%\n  group_by(CNT) %&gt;%\n  summarise(MeanWealth=mean(WEALTH, na.rm = TRUE),\n            MeanMath=mean(PV1MATH, na.rm = TRUE)) %&gt;%\n  mutate(label=ifelse(MeanMath&gt;550, \"Red\", \"Blue\"))\n\nggplot(data=Wealthdata,\n       aes(x=MeanWealth, y=MeanMath, colour=label)) +\n  geom_point() +\n  xlab(\"Wealth\") +\n  ylab(\"Mathematics score\")\n\n\n\n\nAdd the country names as a label to the outliers\n\nShow the answerWealthdata &lt;- PISA_2018 %&gt;%\n  select(CNT, WEALTH, PV1MATH) %&gt;%\n  group_by(CNT) %&gt;%\n  summarise(MeanWealth=mean(WEALTH, na.rm = TRUE),\n            MeanMath=mean(PV1MATH, na.rm = TRUE)) %&gt;%\n  mutate(label=ifelse(MeanMath&gt;550, \"Red\", \"Blue\")) %&gt;%\n  mutate(labelname=ifelse(MeanMath&gt;550, \n                          as.character(CNT), \n                          NA))\n  \n\nggplot(data=Wealthdata,\n       aes(x=MeanWealth, y=MeanMath, colour=label)) +\n  geom_point() +\n  geom_text(aes(label=labelname), \n            colour=\"black\", \n            check_overlap = TRUE) +\n  xlab(\"Wealth\") +\n  ylab(\"Mathematics score\")\n\n\n\n\n\n\nExamine Likert responses by country using facet plot.\nFor ST125Q01NA - How old were you when you started early childhood education? Plot responses, first, for the whole data set, then facet plot for the UK, Germany, Belgium, Austria, France, Poland, Estonia, Finland and Italy.\n\n\nShow the answerCulturedata&lt;-PISA_2018 %&gt;%\n  select(CNT, ST125Q01NA) %&gt;%\n  group_by(CNT)\n  \nggplot(data=Culturedata,\n       aes(x=ST125Q01NA)) +\n  geom_bar() +\n  xlab(\"How old were you when you started early childhood education?\") +\n  theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))\n\n\n\n\nThen use faceting to split the plots by country\n\nShow the answerCulturedata &lt;- PISA_2018 %&gt;%\n  select(CNT, ST125Q01NA) %&gt;%\n  filter(CNT==\"United Kingdom\"|CNT==\"Germany\" | CNT==\"Belgium\"|   CNT==\"Austria\"| CNT==\"France\" | CNT==\"Poland\" | CNT==\"Estonia\" | CNT==\"Finland\"| CNT==\"Italy\")\n  \nggplot(data=Culturedata,\n       aes(x=ST125Q01NA, fill=CNT))+\n  geom_bar()+\n  xlab(\"How old were you when you started early childhood education?\") +\n  theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +\n  facet_wrap(. ~ CNT)\n\n\n\n\n\n\nCategorising Variables\nSplit the WEALTH variable for the UK and Germany into the following groups:\n\n\nWEALTH\nName of category\n\n\n\n&gt;1\nVery High\n\n\n0&gt;WEALTH&lt;1\nHigh\n\n\n0&lt;\nLow\n\n\n\nPlot bar graphs of participants in these categories for both countries\n\n\nShow the answerWealth &lt;- PISA_2018 %&gt;%\n  select(CNT, WEALTH) %&gt;%\n  filter(CNT==\"United Kingdom\" | CNT==\"Germany\") %&gt;%\n  mutate(WTHCTG = ifelse(WEALTH &gt; 0, \n                       ifelse(WEALTH &gt; 1,\n                             \"Very high\",\n                             \"High\"), \n                       \"Low\"))%&gt;%\n  group_by(CNT) %&gt;%\n  droplevels()\n\nggplot(data=Wealth, \n       aes(x=WTHCTG, fill=WTHCTG))+\n  geom_bar()+\n  facet_wrap(.~CNT)+\n  xlab(\"Wealth grouping\")\n\n\n\n\n:::\n\n\n\n\n\n\nTip"
  },
  {
    "objectID": "chapters/06-T-testsPISA.html#types-of-t-test",
    "href": "chapters/06-T-testsPISA.html#types-of-t-test",
    "title": "06 T-tests",
    "section": "\n2.1 Types of t-test",
    "text": "2.1 Types of t-test\nThere are a number of types of t-tests:\n\nOne-tailed test - checks if the mean of one group is different in one direction (e.g. are scores only higher)\nTwo-tailed tests - checks if the means are different in two directions - i.e. are tests higher or lower\nPaired tests - compares the means of measurements from the same individual or object (e.g. in a pre- and post-test - the comparison of means and before and after scores compares the same student’s scores before and after)\nUnpaired t-tests - compares the means of two unrelated groups (for example, are the mean science scores of boys and girls different)\n\nFor more information on t-tests, see chapter 13, in Navaro’s Learning Statistics with R."
  },
  {
    "objectID": "chapters/06-T-testsPISA.html#assumptions-of-t-tests",
    "href": "chapters/06-T-testsPISA.html#assumptions-of-t-tests",
    "title": "06 T-tests",
    "section": "\n2.2 Assumptions of t-tests",
    "text": "2.2 Assumptions of t-tests\nThere are four assumptions that need to be met by dataset for a t-test to be applicable: a) the data are continuous b) the sample was randomly sampled c) The variance of the data in each group is similar (homogeneity of variance) d) The data are approximately normally distributed\n\n\n\n\n\n\nNote\n\n\n\nA rule of thumb researchers use is that if the ratio of variances of the larger sample to the smaller is less than 4, then a t-test can be used."
  },
  {
    "objectID": "chapters/06-T-testsPISA.html#normality-checking",
    "href": "chapters/06-T-testsPISA.html#normality-checking",
    "title": "06 T-tests",
    "section": "\n2.3 Normality checking",
    "text": "2.3 Normality checking\nTo check for normality we can use a number of different tests and approaches, some of which will be covered in the seminar. For data sets that are below 5000 observations then Sharpiro-Wilk is a good test to use. For data sets above 5000 (as with the PISA data) then qqplots and the Kolmogorov-Smirnov Test test are good approaches. Histograms can also be used to help visualise the data and compare with the normal distribution.\nAre the PISA reading scores in the UK normally distributed?\nQuantiles are sections of data, for example a type of quantile is a quartile, a section of data containing a quarter of the data points, a quintile contains 20% of the data and so on. A quintile-quantile plot, plots the quantiles of two distributions against each other. If the distributions are the same, a straight line is formed.\n\n# Create a UK reading subset\nPISAUKRead &lt;- PISA_2018 %&gt;%\n  select(CNT, PV1READ) %&gt;%\n  filter(CNT==\"United Kingdom\")\n# Perform a qqplot\nqqnorm(PISAUKRead$PV1READ)\n# If data are normally distributed, a qq plot should be a straight line.\n# To assist judgement, you can add a straight line with:\nqqline(PISAUKRead$PV1READ, col=\"red\")\n\n\n\n# The data in this case look normal.\n\nA non-graphical approach to normality testing is the Kolmogorov-Smirnov Test test. The package dgof contains ks.test which tests for normality. The test is carried out by passing the data to ks.test(PISA_2018$PV1READ, \"pnorm\", mean=mean(PISA_2018$PV1READ), sd=sd(PISA_2018$PV1READ)). \"pnorm\" sets the test to testing for normality (ks.test can test for different distributions), we also pass the function the mean (mean) and standard deviation (sd) of our dataset. If the p-value is above 0.05, the data are normally distributed (or parametric).\n\n# the Kolmogorov-Smirnov Test\nlibrary(dgof)\n# Create a UK reading subset\nPISAUKRead&lt;-PISA_2018%&gt;%\n  select(CNT, PV1READ)%&gt;%\n  filter(CNT==\"United Kingdom\")\nks.test(PISAUKRead$PV1READ, \"pnorm\", mean=mean(PISAUKRead$PV1READ), sd=sd(PISAUKRead$PV1READ))\n\n\n    One-sample Kolmogorov-Smirnov test\n\ndata:  PISAUKRead$PV1READ\nD = 0.01386, p-value = 0.009895\nalternative hypothesis: two-sided\n\n# The p-value is less than 0.05, assume the data are not normally distributed\n\n\n\n\n\n\n\nWarning\n\n\n\nThe usefulness of normality tests is contested - for large samples, tests like the Kolmogorov-Smirnov test can return values below 0.05 (i.e. report that the data are not normal), for very small deviations from the normal (hanna2013psychology?). Normality tests may be a useful backup, for small samples, if the qqplot is hard to interpret but, with the large samples typical in the PISA data, may give contradictory outcomes to the two visual tests.\n\n\nFinally, a third approach, which is harder to judge, is to plot a histogram and to examine it for the normal shape.\n\n# Create a UK reading subset\nPISAUKRead &lt;- PISA_2018 %&gt;%\n  select(CNT, PV1READ) %&gt;%\n  filter(CNT==\"United Kingdom\")\n# Plot a histogram\nggplot(data=PISAUKRead,\n       aes(x=PV1READ)) +\n  geom_histogram(binwidth = 5, fill=\"darkseagreen4\")\n\n\n\n# from the histrogram, the data look normally distributed"
  },
  {
    "objectID": "chapters/06-T-testsPISA.html#checking-for-equal-variances",
    "href": "chapters/06-T-testsPISA.html#checking-for-equal-variances",
    "title": "06 T-tests",
    "section": "\n2.4 Checking for Equal Variances",
    "text": "2.4 Checking for Equal Variances\nThe second assumption of a test is that the samples have equal variance. Variance describes the spread of the data (standard deviation is the square root of variance).\nTo check for equal variances, we can divide the variance of one sample by the other sample. A rule of thumb researchers use is that if the ratio of variances of the larger sample to the smaller is less than four, then a t-test can be used (boneau1960effects?). R will check this for you, and if they are unequal, will use the test for unequal variances (Welch’s test).\nTo check for the ratio of variance, we can use the var function, and calculate the ratio of the sample. We add na.rm=TRUE to the var function to omit NA values. For example, determine the ratio of girls’ and boys’ reading scores in the UK.\n\n# Create a UK reading subset for boys\nPISAUKReadM &lt;- PISA_2018 %&gt;%\n  select(CNT, PV1READ,ST004D01T) %&gt;%\n  filter(CNT==\"United Kingdom\"|ST004D01T==\"Male\")\n\n# Create a UK reading subset for girls\nPISAUKReadF &lt;- PISA_2018 %&gt;%\n  select(CNT, PV1READ,ST004D01T) %&gt;%\n  filter(CNT==\"United Kingdom\"|ST004D01T==\"Female\")\n# Find the variance\nMVar &lt;- var(PISAUKReadM$PV1READ, na.rm =TRUE)\nFVar &lt;- var(PISAUKReadF$PV1READ, na.rm=TRUE)\nMVar/FVar\n\n[1] 1.150343\n\n\nThe ratio of variances is 1.15 so the samples meet the variance criterion for t-tests.\n\n\n\n\n\n\nNote\n\n\n\nChecking and Filtering for Outliers\nOften, we need to check and filter for outliers in the data. There are many ways to do this, depending on the distribution of the data and how extreme the outliers are that we want to remove. A good rule of thumb is the median +/- 1.5 times the interquartile range (IQR), where the IQR is the upper quartile - lower quartile. If the data is normally distributed, then the mean +/- 1.5 time the standard deviation (sd) can be used. If we only want to remove more extreme outliers, then 2 or even 3 times the IQR (or sd) from the median (or mean) can be used instead.\nOnce we have determined the upper and lower bound of our outliers, we can remove any data points that lie outside of this and then perform our statistical test on the data.\n\nAnswer# Create a subset of UK math scores\nUKPISAmath &lt;- PISA_2018 %&gt;%\n  select(CNT, PV1MATH) %&gt;%\n  filter(CNT==\"United Kingdom\")\n\n# Test for normality in current form\nks.test(UKPISAmath$PV1MATH, \"pnorm\", mean=mean(UKPISAmath$PV1MATH), sd=sd(UKPISAmath$PV1MATH))\n\n# p-value = 0.04783 - only just normal\n# Calculate value of scores at 1.5 x sd above and below the mean\noutl_h_b&lt;-mean(PISA_2018$PV1MATH, na.rm=TRUE) +1.5 * sd(PISA_2018$PV1MATH, na.rm=TRUE)\noutl_l_b&lt;-mean(PISA_2018$PV1MATH, na.rm=TRUE) -1.5 * sd(PISA_2018$PV1MATH, na.rm=TRUE)\n\n# Filter values that are 1.5 x sd above and below the mean\nUKPISAmath &lt;- UKPISAmath %&gt;%\n filter(PV1MATH &gt; outl_l_b & PV1MATH &lt; outl_h_b)\n\n# Test for normality again\nks.test(UKPISAmath$PV1MATH, \"pnorm\", mean=mean(UKPISAmath$PV1MATH), sd=sd(UKPISAmath$PV1MATH))\n# p-value now &lt; 2.2e-16 - a much more normal distribution"
  },
  {
    "objectID": "chapters/06-T-testsPISA.html#eta-squared",
    "href": "chapters/06-T-testsPISA.html#eta-squared",
    "title": "06 T-tests",
    "section": "\n5.1 Eta-squared",
    "text": "5.1 Eta-squared\nNow knowing that there are significant differences between the two class groups, we can next determine how much variation in the test score is explained by class. To do this we calculate a variable called eta-squared.\nEta-squared gives the proportion of variance explained by each variable. The eta squared function is in the package lsr so we will install lsr, and then use the result of our anova (resaov) to calculate the eta squared variable using the function etaSquared. To report the value of eta as a percentage we need to multiply the output of eta by 100.\nEta squared tells us the proportion of the total variance that is explained by a variable (you can also think of it as an effect size). An eta squared value of 1 indicates all the variance of a sample is explain by some variable and 0 means the variable is not responsible for any of the observed variance. We can multiply the eta-squared score by 100 to get a value for the percentage of variance explained.\nThe percentage of variance explained is a useful figure. For example, it has been reported that schools only account for 14% of the variance in progress 8 scores, whilst family explains 43% (Wilkinson, Bryson, and Stokes (2018)).\n\nlibrary(lsr)\neta &lt;- as.data.frame(etaSquared(resaov))\neta &lt;- eta*100\neta\n\n      eta.sq eta.sq.part\nCNT 26.29404    26.29404\n\n\nThe important column here is the eta.sq column - it tells us that the country explains 26% of the variance in test scores. (The second column contains information about partial eta-squared, which we won’t go into, but are used when the results of each measure are not independent i.e. one result influences another).\n\n\n\n\n\n\nNote\n\n\n\nAs a rule of thumb, a percentage variance explained of 1% is considered small, 6% medium and 14% and more large"
  },
  {
    "objectID": "chapters/06-T-testsPISA.html#tukeys-hsd",
    "href": "chapters/06-T-testsPISA.html#tukeys-hsd",
    "title": "06 T-tests",
    "section": "\n5.2 Tukey’s HSD",
    "text": "5.2 Tukey’s HSD\nWhen an anova test reports that are some statistically significant differences between groups, it does not imply there are statistically significant differences between all subgroups. For example, if the anova reports statistically significant differences by age, statistically significant differences might exist between 11, 12 and 13-year old students, but not between 13 and 14-year olds.\nWe can use an additional anova test, Tukey’s Honest Significant Difference test (or Tukey’s HSD for short), to find out which pairs of subgroups have statistically significant differences in means.\nConsider the question: Are there statistically significant differences in the variance of science scores of the UK, US, France and Germany? To determine if such differences exist, we create a new subset for those countries’ science scores, and then run an anova test by country, reporting the eta squared value.\n\nPISAMULTI &lt;- PISA_2018 %&gt;%\n  select(CNT, PV1SCIE)%&gt;%\n  filter(CNT==\"United Kingdom\" | CNT==\"United States\" | CNT==\"Germany\" | CNT==\"France\")\n  # filter(CNT %in% c(\"United Kingdom\", \"United States\", \"Germany\", \"France\"))\n\nresaov&lt;-aov(PV1SCIE ~ CNT, data=PISAMULTI)\nsumresaov&lt;-summary(resaov)\nsumresaov\n\n               Df    Sum Sq Mean Sq F value Pr(&gt;F)    \nCNT             3   1071227  357076   37.36 &lt;2e-16 ***\nResiduals   30411 290638789    9557                   \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\neta&lt;-as.data.frame(etaSquared(resaov))\neta&lt;-eta*100\neta\n\n       eta.sq eta.sq.part\nCNT 0.3672231   0.3672231\n\n\nThe anova results tell us there are significant differences between the countries, which account for 0.4% of variance in scores. We can then run a Tukey HSD test to determine which countries have significant differences between mean scores.\n\nTukeyHSD(resaov)\n\n  Tukey multiple comparisons of means\n    95% family-wise confidence level\n\nFit: aov(formula = PV1SCIE ~ CNT, data = PISAMULTI)\n\n$CNT\n                                   diff        lwr        upr     p adj\nFrance-Germany               -18.844787 -23.489214 -14.200359 0.0000000\nUnited Kingdom-Germany        -9.056104 -13.073086  -5.039123 0.0000000\nUnited States-Germany         -7.024614 -11.985354  -2.063874 0.0015665\nUnited Kingdom-France          9.788682   5.972393  13.604971 0.0000000\nUnited States-France          11.820172   7.020499  16.619845 0.0000000\nUnited States-United Kingdom   2.031490  -2.164019   6.226999 0.5987930\n\n\nFrom that we get a table with p values (p adj) for different pairs of countries. Note that these are below 0.005 for all pairs of countries, except the US and the UK. So we can conclude there are significant differences in science scores between all countries except the UK and the US."
  },
  {
    "objectID": "chapters/06-T-testsPISA.html#task-1-choice-of-tests",
    "href": "chapters/06-T-testsPISA.html#task-1-choice-of-tests",
    "title": "06 T-tests",
    "section": "\n6.1 Task 1 Choice of tests",
    "text": "6.1 Task 1 Choice of tests\nConsider the following scenarios. Which (if any) of the t-tests would be most of appropriate, including whether it would be a one or two tailed test.\n\n\n\n\n\n\nNote\n\n\n\nOne and two-tailed tests\nRemember that a one-tailed test only looks for differences in one direction from the mean (for example, that one sample has a higher mean than the other). A two-tailed tests tests for the possibility of the means of the two groups being higher or lower than each other.\n\n\n\n\nAn educational researcher wants to test a teaching approach with a group of 12 students to see if an intervention increases performance in their year 6 SATs results. Pupils are given a SATS paper before the intervention and again after. The results of these are normalised and then compared.\nA teacher wants to see if their pupils’ GCSE computer science test scores are in line with the national average or not. The tests are out of 180 marks.\nThe DfE want to compare uptake of STEM subjects pre and post pandemic to see if there has been any change in the percentage of students studying at least one STEM subject for A level.\nA school wants to compare salaries of staff between this academic year and last academic year to see whether there has been a significant increase.\nThe same school as in d) wants to compare salaries of support staff and teaching staff to see if there is a significant difference.\nA researcher wants to find out how much time pupils spend looking at screens during lesson time, to see if there is a difference between year 7 and year 10 students. 10 pupils in year 7 and 10 pupils in year 10 are randomly selected across a school and observed throughout a school day in November. The times are recorded to the nearest minute.\nA business manager wants to check if the financial expenditure on STEM teachers per year is similar to the national average (based on average numbers of pupils on role)\n\n\n\nAnswer# Answers\n\n# a)  An educational researcher wants to test a teaching approach with a group of 12 students to see if an intervention increases performance in their year 6 SATs results. Pupils are given a SATS paper before the intervention and again after. The results of these are normalised and then compared.\n\n# Paired (because we compare pairs of results (before and after) for the same student) and two-tailed (because we are interested in the means being higher or lower)\n\n# b)  A teacher wants to see if their pupils' GCSE computer science test scores are in line with the national average or not. The tests are out of 180 marks.\n\n# Unpaired (the teacher compares their students with another pool) and two-tailed (because we are interested in the means being higher or lower)\n\n# c)  The DfE want to compare uptake of STEM subjects pre and post pandemic to see if there has been any change in the percentage of students studying at least one STEM subject for A level.\n\n# Unpaired (the students taking STEM subjects before and after the pandemic will be different individuals from different cohorts) and two-tailed (because we are interested in the means being higher or lower)\n\n# d)  A school wants to compare salaries of staff between this academic year and last academic year to see whether there has been a significant increase.\n\n# Possibly paired (if the staff body has remained the same), and two-tailed (because we are interested in the means being higher or lower)\n\n# e)  The same school as in d) wants to compare salaries of support staff and teaching staff to see if there is a significant difference.\n\n# Unpaired (because there are two different groups, teachers and support staff), and two-tailed (because we are interested in the mean salaries being higher or lower)\n\n# f)  A researcher wants to find out how much time pupils spend looking at screens during lesson time, to see if there is a difference between year 7 and year 10 students. 10 pupils in year 7 and 10 pupils in year 10 are randomly selected across a school and observed  throughout a school day in November. The times are recorded to the nearest minute.\n\n# Unpaired (because there are two different groups, Y7 and Y10), and two-tailed (because we are interested in the means of times being higher or lower)\n\n# g)  A business manager wants to check if the financial expenditure on STEM teachers per year is similar to the national average (based on average numbers of pupils on role)\n\n# Unpaired (because there are two different groups, the school and the national cohort), and two-tailed (because we are interested in the expenditure means being higher or lower)"
  },
  {
    "objectID": "chapters/06-T-testsPISA.html#task-2-normality-checking",
    "href": "chapters/06-T-testsPISA.html#task-2-normality-checking",
    "title": "06 T-tests",
    "section": "\n6.2 Task 2 Normality Checking",
    "text": "6.2 Task 2 Normality Checking\n\nDetermine if the following subsets of PISA data are normal (you will need to use select and filter). Try to use all three methods of normality checking (a) qqplots, b) the Kolmogorov-Smirnov test, c) histogram plotting, to reach your conclusion\nAre the following data normally distributed: a) PV1MATH scores in the UK; b) PV1MATH scores in Malta; c) Students in the UK who score more than 750 on their science test.\n\nAnswer# a) PV1MATH scores in the UK\n# Create UK Math subset\nUKMath&lt;-PISA_2018%&gt;%\n  select(CNT, PV1MATH)%&gt;%\n  filter(CNT==\"United Kingdom\")\n  # Perform a qqplot\nqqnorm(UKMath$PV1MATH)\n# If data are normally distributed, a qq plot should be a straight line.\n# To assist judgement, you can add a straight line with:\nqqline(UKMath$PV1MATH, col=\"red\")\n# The data in this case look normal.\n\n# Perform the KS test\nks.test(UKMath$PV1MATH, \"pnorm\", mean=mean(UKMath$PV1MATH), sd=sd(UKMath$PV1MATH))\n# The p-value is 0.04783, less than 0.05, implying the data are not normal, but recall the over sensitivity of the test.\n\n# Plot a histogram\nggplot(data=UKMath,\n       aes(x=PV1MATH))+\n  geom_histogram(binwidth = 5, fill=\"darkseagreen4\")\n# The data in this case look normal.\n\n# b) PV1MATH scores in Malta\n\n# Create Malta Math subset\nMalMath&lt;-PISA_2018%&gt;%\n  select(CNT, PV1MATH)%&gt;%\n  filter(CNT==\"Malta\")\n  # Perform a qqplot\nqqnorm(MalMath$PV1MATH)\n# If data are normally distributed, a qq plot should be a straight line.\n# To assist judgement, you can add a straight line with:\nqqline(MalMath$PV1MATH, col=\"red\")\n# The data in this case look normal.\n\n# Perform the KS test\nks.test(MalMath$PV1MATH, \"pnorm\", mean=mean(MalMath$PV1MATH), sd=sd(MalMath$PV1MATH))\n# The p-value, 0.03173, less than 0.05, implying the data are not normally distributed, but recall the over sensitivity of the test.\n\n# Plot a histogram\nggplot(data=MalMath,\n       aes(x=PV1MATH))+\n  geom_histogram(binwidth = 5, fill=\"darkseagreen4\")\n# The data in this case look normal.\n\n# c) UK science high achievers\n\n# Create a UK over 750 Science score subset\nUKHighSci&lt;-PISA_2018%&gt;%\n  select(CNT, PV1SCIE)%&gt;%\n  filter(CNT==\"United Kingdom\" & PV1SCIE&gt;750)\n  # Perform a qqplot\nqqnorm(UKHighSci$PV1SCIE)\n# If data are normally distributed, a qq plot should be a straight line.\n# To assist judgement, you can add a straight line with:\nqqline(UKHighSci$PV1SCIE, col=\"red\")\n# I am not entirely convinced from the line!\n\n# Perform the KS test\nks.test(UKHighSci$PV1SCIE, \"pnorm\", mean=mean(UKHighSci$PV1SCIE), sd=sd(UKHighSci$PV1SCIE))\n# The p-value is 0.7683 more than 0.05, so we can assume the scores are not normal\n\n# Plot a histogram\nggplot(data=UKHighSci,\n       aes(x=PV1SCIE))+\n  geom_histogram(binwidth = 5, fill=\"darkseagreen4\")\n# The data don't look normal here"
  },
  {
    "objectID": "chapters/06-T-testsPISA.html#task-3-variance-checking",
    "href": "chapters/06-T-testsPISA.html#task-3-variance-checking",
    "title": "06 T-tests",
    "section": "\n6.3 Task 3 Variance checking",
    "text": "6.3 Task 3 Variance checking\nDetermine if the variance of these samples meets the criteria to carry out a t-test: a) Boys and Girls maths scores in the UK b) Reading scores in the US and the UK c) Wealth scores of boys and girls in the US\n\n\n\n\n\n\nTip\n\n\n\nRecall, the rule of thumb researchers use is that if the ratio of variances of the larger sample to the smaller is less than four, then a t-test can be used (boneau1960effects?)\n\n\n\n\nAnswer# a)\n# Create a UK maths subset for boys\nPISAUKMATHM&lt;-PISA_2018%&gt;%\n  select(CNT, PV1MATH,ST004D01T)%&gt;%\n  filter(CNT==\"United Kingdom\"|ST004D01T==\"Male\")\n# Create a UK reading subset for girls\nPISAUKMATHF&lt;-PISA_2018%&gt;%\n  select(CNT, PV1MATH,ST004D01T)%&gt;%\n  filter(CNT==\"United Kingdom\"|ST004D01T==\"Female\")\n# Find the variance\nMVar&lt;-var(PISAUKMATHM$PV1MATH, na.rm =TRUE)\nFVar&lt;-var(PISAUKMATHF$PV1MATH, na.rm=TRUE)\nMVar/FVar\n# The ratio of variance is 1.132708 so a t-test can be performed\n\n# b)\n# Create a US reading score dataframe\nUSREAD&lt;-PISA_2018%&gt;%\n  select(CNT, PV1READ)%&gt;%\n  filter(CNT==\"United States\")\n# Create a UK reading score dataframe\nUKREAD&lt;-PISA_2018%&gt;%\n  select(CNT, PV1READ)%&gt;%\n  filter(CNT==\"United Kingdom\")\n# Find the variance\nUKVar&lt;-var(UKREAD$PV1READ, na.rm =TRUE)\nUSVar&lt;-var(USREAD$PV1READ, na.rm=TRUE)\nUKVar/USVar\n# The ratio of variance is 0.813 so a t-test can be performed\n\n# c)\n# Create a US Male Wealth  dataframe\nUSWEALTHM&lt;-PISA_2018%&gt;%\n  select(CNT, WEALTH, ST004D01T)%&gt;%\n  filter(CNT==\"United States\"|ST004D01T==\"Male\")\n# Create a US Female Wealth  dataframe\nUSWEALTHF&lt;-PISA_2018%&gt;%\n  select(CNT, WEALTH, ST004D01T)%&gt;%\n  filter(CNT==\"United States\"|ST004D01T==\"Female\")\n# Find the variance\nMVar&lt;-var(USWEALTHM$WEALTH, na.rm =TRUE)\nFVar&lt;-var(USWEALTHF$WEALTH, na.rm=TRUE)\nMVar/FVar\n# The ratio of variance is 1.05469 so a t-test can be performed"
  },
  {
    "objectID": "chapters/06-T-testsPISA.html#task-4-performing-t-tests",
    "href": "chapters/06-T-testsPISA.html#task-4-performing-t-tests",
    "title": "06 T-tests",
    "section": "\n6.4 Task 4 Performing t-tests",
    "text": "6.4 Task 4 Performing t-tests\n\n\nUse the PISA dataset and the gender ST004D01T and PV1MATH (Math score) variables to perform a two-sided, unpaired t-test to determine if boys and girls perform differently on the test in the UK. Before performing the test, check for the normality of the data, and check for equal variance.\n\n\n\n\nChoose a different country of interest to compare performance in males and females in that country\n\n\nAnswer# Are there differences between the mean scores of boys and girls in China PISA mathematics?\n#\n# Select the gender (ST004D01T) and math score columns (PV1MATH)\n# Filter the data to select UK responses\n\nMaleChina &lt;- PISA_2018 %&gt;%\n  select(CNT,ST004D01T, PV1MATH) %&gt;%\n  filter(CNT=='B-S-J-Z (China)', ST004D01T=='Male')\n\nFemaleChina&lt;-PISA_2018 %&gt;%\n  select(CNT,ST004D01T, PV1MATH) %&gt;%\n  filter(CNT=='B-S-J-Z (China)', ST004D01T=='Female')\n\n# The conditions to do a t-test include that the data are normally distributed\nqqnorm(MaleChina$PV1MATH)\nqqline(MaleChina$PV1MATH, col=\"red\")\nqqnorm(FemaleChina$PV1MATH)\nqqline(FemaleChina$PV1MATH, col=\"red\")\n\n\n# The plots produces relatively straight lines so the distributions can be # assumed to be normal\n#\n# We will then check the variances of the two data sets\n\nVarM&lt;-var(MaleChina$PV1MATH, na.rm=TRUE)\nVarF&lt;-var(FemaleChina$PV1MATH, na.rm=TRUE)\nVarM/VarF\n\n# The variance ratio is close to 1 (1.17)\n# So our two conditions are met and can we can perform the t-test\n\n# Create a UK Math subset\nCHIMATH&lt;-PISA_2018%&gt;%\n  select(CNT, PV1MATH,ST004D01T)%&gt;%\n  filter(CNT==\"B-S-J-Z (China)\")\n# Plot a two-sided, unpaired t-test\nt.test(PV1MATH ~ ST004D01T, data = CHIMATH, \n       paired = FALSE, alternative = \"two.sided\")\n\n# The p-value is &lt;0.05 (2.414e-07) suggesting there are statistically\n# differences between boys and girls in mathematics in China\n\n\n\n\n\nNow try to compare the performance of males and females in Maths in all the OECD countries in the PISA dataset. You may need to think about how to do this using R without repeating the test for each country.\n\n\nAnswerMaleOECD &lt;- PISA_2018 %&gt;%\n  select(OECD, ST004D01T, PV1MATH) %&gt;%\n  filter(OECD=='Yes', ST004D01T=='Male')\n\nFemaleOECD &lt;- PISA_2018 %&gt;%\n  select(OECD, ST004D01T, PV1MATH) %&gt;%\n  filter(OECD=='Yes', ST004D01T=='Female')\n\nqqnorm(MaleOECD$PV1MATH)\nqqline(MaleOECD$PV1MATH, col=\"red\")\nqqnorm(FemaleOECD$PV1MATH)\nqqline(FemaleOECD$PV1MATH, col=\"red\")\n\n\n# The plots produces relatively straight lines so the distributions can be assumed to be normal\n\n# We will then check the variances of the two data sets\n\nVarM &lt;- var(MaleOECD$PV1MATH, na.rm=TRUE)\nVarF &lt;- var(FemaleOECD$PV1MATH, na.rm=TRUE)\nVarM / VarF\n\n# The variance ratio is close to 1 (1.1)\n# So our two conditions are met and can we can perform the t-test\n\n# The p-value is &lt;0.05 (2.2e-16) suggesting there are statistically\n# differences between boys and girls\n\nOECD &lt;- PISA_2018 %&gt;%\n  select(OECD, ST004D01T, PV1MATH) %&gt;%\n  filter(OECD=='Yes')\n\nt.test(PV1MATH ~ ST004D01T, data = OECD, \n       paired = FALSE, alternative = \"two.sided\")\n\n\n\n\n\nAre there statistically significant differences in mean wealth scores of boys and girls in the UK?\n\n\nAnswerMaleUK &lt;- PISA_2018 %&gt;%\n  select(ST004D01T, WEALTH) %&gt;%\n  filter(ST004D01T=='Male')\n\nFemaleUK &lt;- PISA_2018 %&gt;%\n  select(ST004D01T, WEALTH) %&gt;%\n  filter(ST004D01T=='Female')\n\nqqnorm(MaleUK$WEALTH)\nqqline(MaleUK$WEALTH, col=\"red\")\nqqnorm(FemaleUK$WEALTH)\nqqline(FemaleUK$WEALTH, col=\"red\")\n\n# The plots here are somewhat skewed which might suggest not performing the test\n\n# We will then check the variances of the two data sets\n\nVarM &lt;- var(MaleUK$WEALTH, na.rm=TRUE)\nVarF &lt;- var(FemaleUK$WEALTH, na.rm=TRUE)\nVarM / VarF\n\n# The variance ratio is close to 1 (1.1)\n# So our two conditions are met and can we can perform the t-test\n\nWEALTH &lt;- PISA_2018 %&gt;%\n  select(WEALTH, ST004D01T, CNT) %&gt;%\n  filter(CNT=='United Kingdom')\n\nt.test(PV1MATH ~ ST004D01T, data = OECD, \n       paired = FALSE, alternative = \"two.sided\")\n\n# p-value &lt; 2.2e-16 so there are statistically significant differences between boys' and girls' reported wealth in the UK"
  },
  {
    "objectID": "chapters/06-T-testsPISA.html#task-5-multiple-t-tests-with-anova",
    "href": "chapters/06-T-testsPISA.html#task-5-multiple-t-tests-with-anova",
    "title": "06 T-tests",
    "section": "\n6.5 Task 5 Multiple t-tests with anova",
    "text": "6.5 Task 5 Multiple t-tests with anova\n\nFor the UK, France, Thailand, and the US determine if there are statistically significant differences in variation in mathematics scores.\n\nanswerPISAMULTI&lt;-PISA_2018 %&gt;%\n  select(CNT, PV1MATH)%&gt;%\n  filter(CNT==\"United Kingdom\" | CNT==\"Thailand\" | CNT==\"United States\" | CNT==\"France\")\n\n\nresaov&lt;-aov(PV1MATH ~ CNT, data=PISAMULTI)\nsumresaov&lt;-summary(resaov)\nsumresaov\n\n               Df    Sum Sq Mean Sq F value Pr(&gt;F)    \nCNT             3  19708753 6569584   731.4 &lt;2e-16 ***\nResiduals   33593 301722376    8982                   \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nanswereta&lt;-as.data.frame(etaSquared(resaov))\neta&lt;-eta*100\neta\n\n      eta.sq eta.sq.part\nCNT 6.131563    6.131563\n\nanswerTukeyHSD(resaov)\n\n  Tukey multiple comparisons of means\n    95% family-wise confidence level\n\nFit: aov(formula = PV1MATH ~ CNT, data = PISAMULTI)\n\n$CNT\n                                   diff        lwr        upr p adj\nUnited Kingdom-France          9.517876   5.818238  13.217513     0\nThailand-France              -49.928145 -53.960994 -45.895296     0\nUnited States-France         -14.083379 -18.736341  -9.430416     0\nThailand-United Kingdom      -59.446021 -62.786149 -56.105892     0\nUnited States-United Kingdom -23.601254 -27.668520 -19.533988     0\nUnited States-Thailand        35.844766  31.472215  40.217318     0\n\nanswer# There are statistically significant differences in mathematics scores for all pairs of countries\n\n\n\n\nFor the UK, are there statistically significant differences in reading score by students who attend different types of school (ISCEDO), e.g. Vocational, General etc.\n\nanswerUKSchRead&lt;-PISA_2018 %&gt;%\n  select(CNT, PV1READ, ISCEDO)%&gt;%\n  filter(CNT==\"United Kingdom\")\n\n\nresaov&lt;-aov(PV1READ ~ ISCEDO, data=UKSchRead)\nsumresaov&lt;-summary(resaov)\nsumresaov\n\n               Df    Sum Sq Mean Sq F value  Pr(&gt;F)   \nISCEDO          2    126441   63221   6.614 0.00135 **\nResiduals   13815 132056332    9559                   \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nanswereta&lt;-as.data.frame(etaSquared(resaov))\neta&lt;-eta*100\neta\n\n           eta.sq eta.sq.part\nISCEDO 0.09565645  0.09565645\n\nanswerTukeyHSD(resaov)\n\n  Tukey multiple comparisons of means\n    95% family-wise confidence level\n\nFit: aov(formula = PV1READ ~ ISCEDO, data = UKSchRead)\n\n$ISCEDO\n                                diff         lwr       upr     p adj\nPre-Vocational-General    -102.78896 -175.284439 -30.29348 0.0025668\nVocational-General         -21.40641  -55.251751  12.43893 0.2993528\nVocational-Pre-Vocational   81.38255    1.423372 161.34172 0.0449504\n\nanswer# There are statistically significant differences between Pre-vocational and general, and vocational and pre-vocational, but not between vocational and general.\n\n\n\n\nFor the UK, use ifelse on the WEALTH variable to create categories for four quartiles (divide the data into top; upper-mid; lower-mid; and bottom). Use anova to determine between which groups there are statistically significant differences in science scores\nHint: You can use quantiles&lt;-quantile(UKSci$PV1SCIE, prob=c(.25,.5,.75), na.rm=TRUE) to give the values of PV1SCIE that account for 25%, 50% and 75% of the responses.\n\nanswerUKSci&lt;-PISA_2018 %&gt;%\n  select(CNT, PV1SCIE, WEALTH)%&gt;%\n  filter(CNT==\"United Kingdom\")%&gt;%\n  na.omit()%&gt;%\n  droplevels()%&gt;%\n  select(PV1SCIE, WEALTH)\n# Find the cut of points for 25%, 50% and 75% (quantiles) of WEALTH\nquantiles&lt;-quantile(UKSci$WEALTH, prob=c(.25,.5,.75), na.rm=TRUE)\n\nUKSci&lt;-UKSci%&gt;%\n  mutate(WEALTH=ifelse(WEALTH&lt;quantiles[1], \"Bottom\", \n                        ifelse(WEALTH&lt;quantiles[2], \"Lower-mid\",\n                               ifelse(WEALTH&lt;quantiles[3], \"Upper-mid\",\"Top\"))))\n\nresaov&lt;-aov(PV1SCIE ~ WEALTH, data=UKSci)\nsumresaov&lt;-summary(resaov)\nsumresaov\n\n               Df    Sum Sq Mean Sq F value Pr(&gt;F)    \nWEALTH          3   1531216  510405   57.19 &lt;2e-16 ***\nResiduals   13363 119258836    8925                   \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nanswerTukeyHSD(resaov)\n\n  Tukey multiple comparisons of means\n    95% family-wise confidence level\n\nFit: aov(formula = PV1SCIE ~ WEALTH, data = UKSci)\n\n$WEALTH\n                          diff         lwr       upr     p adj\nLower-mid-Bottom     11.013562   5.0690229 16.958100 0.0000116\nTop-Bottom           29.568912  23.6310625 35.506762 0.0000000\nUpper-mid-Bottom     17.452150  11.5204961 23.383804 0.0000000\nTop-Lower-mid        18.555350  12.6108119 24.499889 0.0000000\nUpper-mid-Lower-mid   6.438588   0.5002385 12.376938 0.0274236\nUpper-mid-Top       -12.116762 -18.0484159 -6.185109 0.0000009\n\nanswer# There are statistically significant differences between all groups by wealth"
  },
  {
    "objectID": "chapters/06-T-testsPISA.html#recreating-a-paper-in-r",
    "href": "chapters/06-T-testsPISA.html#recreating-a-paper-in-r",
    "title": "06 T-tests",
    "section": "\n7.1 Recreating a paper in R",
    "text": "7.1 Recreating a paper in R\n\nLooking at the reading Cook (2014), consider the following\n\n\nIs it possible to replicate the results using the PISA 2018 data set? Make a graph showing the difference in male and female PV1MATH results for each country CNT. To do this we are going to have to:\n\n\nwork out the mean() maths score PV1MATH for each country CNT and gender ST004D01T grouping, call this meanmath and create a new dataframe to store this\nfrom this dataframe, create two new dataframes, one for males only and one for females only\n\nrename() (see ?@sec-renaming) the meanmath score in each dataframe to male_mean and female_mean\n\nbind the dataframes together using using column bind function cbind(&lt;male_df&gt;, &lt;female_df&gt;) and store this in a new dataframe called Mathgendergap. NOTE: cbind only accepts tables with different names, so you’ll need to select select(CNT, male_mean) from the male dataframe and select(female_mean) from the female dataframe.\nuse mutate (see ?@sec-mutate) to calculate the difference in male and female mean maths scores for each country\nplot the results for each country\n\n\n\ncreating difference dataset# A relatively simple recreation (without significance testing)\nMathgendergap &lt;- PISA_2018 %&gt;%\n  select(CNT,PV1MATH,ST004D01T) %&gt;%\n  group_by(CNT,ST004D01T)%&gt;%\n  summarise(meanmath=mean(PV1MATH)) %&gt;%\n  ungroup()\n\n# alternative, using column binding, cbind():\nMathgendergap&lt;-  cbind(Mathgendergap %&gt;% \n                           filter(ST004D01T == \"Male\") %&gt;%\n                           rename(male_mean = meanmath) %&gt;%\n                             select(CNT, male_mean),\n                        Mathgendergap %&gt;%\n                           filter(ST004D01T == \"Female\") %&gt;%\n                             rename(female_mean = meanmath) %&gt;%\n                             select(female_mean))\n\n# alternatively you can use pivot_wider\n# Mathgendergap &lt;- pivot_wider(Mathgendergap, names_from = ST004D01T, values_from = meanmath)\n\nMathgendergap &lt;- Mathgendergap %&gt;%\n  mutate(difference = female_mean - male_mean) %&gt;%\n  arrange(desc(difference))\n\n\nThe above code doesn’t include the t-test results for each country, to do this we need to run some more complex code, you can see how it works below:\n\n\n\n\n\n\nWhat issues are there with using a t-test for the context given in the paper?\nHow do your findings from question 3 and the 2018 dataset compare with those in the paper? Are there any differences or disagreements with your findings?\nHow could the paper be improved? :::"
  },
  {
    "objectID": "chapters/07-ChisqPISA.html",
    "href": "chapters/07-ChisqPISA.html",
    "title": "07 Chi-square tests",
    "section": "",
    "text": "We will continue to use the PISA_2018 dataset, make sure it is loaded.\n\n# Load PISA data\n\nlibrary(arrow)\nlibrary(tidyverse)\n\nPISA_2018 &lt;- read_parquet(r\"[&lt;folder&gt;PISA_2018_student_subset.parquet]\")"
  },
  {
    "objectID": "chapters/07-ChisqPISA.html#pre-session-task---loading-the-data",
    "href": "chapters/07-ChisqPISA.html#pre-session-task---loading-the-data",
    "title": "07 Chi-square tests",
    "section": "",
    "text": "We will continue to use the PISA_2018 dataset, make sure it is loaded.\n\n# Load PISA data\n\nlibrary(arrow)\nlibrary(tidyverse)\n\nPISA_2018 &lt;- read_parquet(r\"[&lt;folder&gt;PISA_2018_student_subset.parquet]\")"
  },
  {
    "objectID": "chapters/07-ChisqPISA.html#assumptions-of-chi-square-tests",
    "href": "chapters/07-ChisqPISA.html#assumptions-of-chi-square-tests",
    "title": "07 Chi-square tests",
    "section": "\n2.1 Assumptions of Chi-square tests",
    "text": "2.1 Assumptions of Chi-square tests\nFour assumptions need to be met in order to use a chi-square test: • The data (both variables) should be categorical (for ordinal data, see the section on Kruskal Wallis tests below). • All observations are independent • Cells in the contingency table (see below) are mutually exclusive • Expected values in each cell in the contingency table should be five or greater for more than 80% of cells.\nSee Section 12.5 in Navaro’s Learning Statistics with R"
  },
  {
    "objectID": "chapters/07-ChisqPISA.html#creating-contingency-tables",
    "href": "chapters/07-ChisqPISA.html#creating-contingency-tables",
    "title": "07 Chi-square tests",
    "section": "\n3.1 Creating contingency tables",
    "text": "3.1 Creating contingency tables\nChi-square calculations depend on contingency tables. A contingency table is a table that shows the frequency counts for two variables. We can use the xtabs function to create contingency tables in R.\nFor example, imagine we want to create a contingency table for the number of boys and girls in the UK and US in the PISA sample. First we create a subset of the PISA_2018 data.frame including country and gender, and filter for the two countries. We use the xtabs function to create the table. We pass the subset data (UKUSgender) to xtabs and indicate the columns and rows we want ~CNT + ST004D01T\n\n# Example contingency table\n\nUKUSgender &lt;- PISA_2018 %&gt;%\n  select(CNT, ST004D01T) %&gt;% # Select gender and country variables\n  filter(CNT==\"United Kingdom\"|CNT==\"United States\") %&gt;% # Filter for  UK and the US\n  droplevels() # To prevent the levels for other countries confusing the table\n\nContTable&lt;-xtabs(data=UKUSgender, ~CNT + ST004D01T)\nContTable\n\n                ST004D01T\nCNT              Female Male\n  United Kingdom   6996 6822\n  United States    2376 2462"
  },
  {
    "objectID": "chapters/07-ChisqPISA.html#an-example-does-the-disritbution-of-male-and-female-students-in-the-uk-fit-the-expected-pattern-5050",
    "href": "chapters/07-ChisqPISA.html#an-example-does-the-disritbution-of-male-and-female-students-in-the-uk-fit-the-expected-pattern-5050",
    "title": "07 Chi-square tests",
    "section": "\n4.1 An example: Does the disritbution of male and female students in the UK fit the expected pattern (50:50)?",
    "text": "4.1 An example: Does the disritbution of male and female students in the UK fit the expected pattern (50:50)?\nTo perform the goodness of fit test, we make a subset dataframe of the UK data including the ST004D01T (gender variable).\n\n# Perform a chi-square goodness of fit test on categorical data related to gender in the UK\n\nUKPISAgender&lt;-PISA_2018%&gt;%\n  select(CNT, ST004D01T)%&gt;% # Select gender and country variables\n  filter(CNT==\"United Kingdom\")%&gt;% # Filter for the UK\n  droplevels() # To prevent the levels for other countries confusing the table\n\nGenderContTable&lt;-xtabs(data=UKPISAgender,~CNT + ST004D01T)\n\nchisq.test(GenderContTable, p=c(1/2,1/2))\n\nThe outcome of the chi squared test returns a p-value = 0.1388. This is greater than 0.05, suggesting we reject the null hypothesis, and the numbers of boys and girls in the UK sample does not match a 50:50 distribution."
  },
  {
    "objectID": "chapters/07-ChisqPISA.html#an-example-gender-distribution-in-the-pisa-sample",
    "href": "chapters/07-ChisqPISA.html#an-example-gender-distribution-in-the-pisa-sample",
    "title": "07 Chi-square tests",
    "section": "\n4.2 An example: Gender distribution in the PISA sample",
    "text": "4.2 An example: Gender distribution in the PISA sample\n\n\nShould we accept or reject the hypothesis that the populations of boys and girls in the United States, Japan and China are 50:50?\n\n\nShow the code# Perform a chi-square goodness of fit test on categorical data related to gender in the US, Japan and China\n\nUSPISAgender&lt;-PISA_2018%&gt;%\n  select(CNT, ST004D01T)%&gt;% # Select gender and country variables\n  filter(CNT==\"United States\")%&gt;% # Filter for the US\n  droplevels() # To prevent the levels for other countries confusing the table\n\nGenderContTable&lt;-xtabs(data=USPISAgender,~CNT + ST004D01T)\n\nchisq.test(GenderContTable, p=c(1/2,1/2))\n\n# In the US, population of M:F differs from 50:50 p= 0.2163, reject null hypothesis of equality.\n\nJPNPISAgender&lt;-PISA_2018%&gt;%\n  select(CNT, ST004D01T)%&gt;% # Select gender and country variables\n  filter(CNT==\"Japan\")%&gt;% # Filter for the Japan\n  droplevels() # To prevent the levels for other countries confusing the table\n\nGenderContTable&lt;-xtabs(data=JPNPISAgender,~CNT + ST004D01T)\n\nchisq.test(GenderContTable, p=c(1/2,1/2))\n\n# In Japan, population of M:F differs from 50:50 p= 0.09373, reject null hypothesis of equality.\n\nChinaPISAgender&lt;-PISA_2018%&gt;%\n  select(CNT, ST004D01T)%&gt;% # Select gender and country variables\n  filter(CNT==\"B-S-J-Z (China)\")%&gt;% # Filter for China\n  droplevels() # To prevent the levels for other countries confusing the table\n\nGenderFreqTable&lt;-xtabs(data=ChinaPISAgender,~CNT + ST004D01T)\n\nchisq.test(GenderFreqTable, p=c(1/2,1/2))\n# In China, population of M:F is 50:50 p= 3.724e-06, accept null hypothesis of equality.\n\n\n\n\n\n\n\n\n\nTip\n\n\n\nR uses standard form: an output of p= 3.724e-06, represents, p=3.724x10-6, or p=0.0000003724."
  },
  {
    "objectID": "chapters/07-ChisqPISA.html#chi-square-test-of-independence",
    "href": "chapters/07-ChisqPISA.html#chi-square-test-of-independence",
    "title": "07 Chi-square tests",
    "section": "\n4.3 Chi-square test of independence",
    "text": "4.3 Chi-square test of independence\nGoodness of fit tests can be useful, but they rely on knowing the expected distribution (for example, assuming a 50:50 distribution of boys and girls).\nAn alternative ways of using a Chi-square test, is the test of independence. This approach determines whether two categorical variables in a sample are related.\nFor example, a categorical variable in the same is item - ST011Q04TA - is there a a quiet place to study in the home? Which can be responded to with ‘yes’ or ‘no’ (or &lt;NA&gt;).\nWe might want to see if students in the UK respond to this question in the same way as the rest of the sample. That is, are students in the UK just as likely to have a quiet place to study as their international peers.\nA simple first attempt is to create frequency tables for the UK and the rest of the sample and examine the responses.\n\n# Produce tables of counts of having a quiet room for the UK and the rest of the sample\n\nQuiRoom&lt;-PISA_2018%&gt;%\n  select(ST011Q04TA)%&gt;% # Select quiet room\n  droplevels() # To prevent the levels for other countries confusing the table\n\nQuiFreqTable&lt;-xtabs(data=QuiRoom,~ST011Q04TA)\nprint(QuiFreqTable)\n\nUKQuiRoom&lt;-PISA_2018%&gt;%\n  select(CNT, ST011Q04TA)%&gt;% # Select quiet room and country variables\n  filter(CNT==\"United Kingdom\")%&gt;% # Filter for the UK\n  droplevels() # To prevent the levels for other countries confusing the table\n\nUKQuiFreqTable&lt;-xtabs(data=UKQuiRoom,~ST011Q04TA)\nprint(UKQuiFreqTable)\n\nFrom the data, it is hard to tell if the UK is different from the overall pattern. To make things easier, we can use mutate to add a percentage column to aid comparison.\n\n# Produce tables of counts of having a quiet room for the UK and the rest of the sample\n\nQuiRoom&lt;-PISA_2018%&gt;%\n  select(ST011Q04TA)%&gt;% # Select quiet room\n  droplevels() # To prevent the levels for other countries confusing the table\n\nQuiFreqTable&lt;-xtabs(data=QuiRoom,~ST011Q04TA)\nQuiFreqTable&lt;-as.data.frame(QuiFreqTable)\nTotal=sum(QuiFreqTable$Freq) # Find the total count\nQuiFreqTable&lt;-QuiFreqTable%&gt;%\n  mutate(Perc=(Freq*100)/Total) # Mutate the table to calculate the percentage\nprint(QuiFreqTable)\n\nUKQuiRoom&lt;-PISA_2018%&gt;%\n  select(CNT, ST011Q04TA)%&gt;% # Select quiet room and country variables\n  filter(CNT==\"United Kingdom\")%&gt;% # Filter for the UK\n  droplevels() # To prevent the levels for other countries confusing the table\n\nUKQuiFreqTable&lt;-xtabs(data=UKQuiRoom,~ST011Q04TA)\nUKQuiFreqTable&lt;-as.data.frame(UKQuiFreqTable)\nTotal=sum(UKQuiFreqTable$Freq) # Find the total count\nUKQuiFreqTable&lt;-UKQuiFreqTable%&gt;%\n  mutate(Perc=(Freq*100)/Total)  # Mutate the table to calculate the percentage\nprint(UKQuiFreqTable)"
  },
  {
    "objectID": "chapters/07-ChisqPISA.html#plotting-the-chi-square-relationships",
    "href": "chapters/07-ChisqPISA.html#plotting-the-chi-square-relationships",
    "title": "07 Chi-square tests",
    "section": "\n4.4 Plotting the chi-square relationships",
    "text": "4.4 Plotting the chi-square relationships\nThe numbers in the contingency table are hard to interpret - it is challenging to see how far out the numbers for each row are from each other. Alternatively, we can visualise the data from the contingency table by building a mosaic plot, a form of stacked bar chart. Mosaic plots can be a useful visulations before running a chi-squared test.\nTo create a mosaic plot, you are going to need to install and load the ggmosaic package. See ?@sec-load-run-pckges for more details on how to do this.\nImagine we want to plot the ‘quiet room’ data (ST011Q04TA) from the previous section for the UK, US, and Brazil\nTo create the mosaic plot we use ggplot, as we used for previous graphs. As before, we first pass the data (in this case QuiRoom) to ggplot. Then, to create the graph, geom_mosaic is used. geom_mosaic does not have a direct mapping of input to x and y variable so we need to pass it what we want plotted on the y-axis (ST011Q04TA) and x-axis (CNT) within the product function (product(ST011Q04TA, CNT)). We can also specify how we want the rectangles to be coloured (in our case, by CNT).\n\n # install.packages(\"ggmosaic\")\nlibrary(ggmosaic)\n\nQuiRoom&lt;-PISA_2018%&gt;%\n  select(ST011Q04TA, CNT)%&gt;%\n  filter(CNT==\"United Kingdom\" | CNT==\"Brazil\"| CNT==\"United States\")%&gt;%\n  droplevels()\n\n# plot results\nggplot(data = QuiRoom) +\n  geom_mosaic(aes(x = product(ST011Q04TA, CNT), fill=CNT))+\n  xlab(\"Country\")+\n  ylab(\"Do you have a quiet room to work in?\")"
  },
  {
    "objectID": "chapters/07-ChisqPISA.html#running-chi-square-tests-of-independence",
    "href": "chapters/07-ChisqPISA.html#running-chi-square-tests-of-independence",
    "title": "07 Chi-square tests",
    "section": "\n4.5 Running Chi square tests of independence",
    "text": "4.5 Running Chi square tests of independence\nThe mosaic plot suggests the availability of quiet rooms is different between the UK and Brazil, but the difference is only small between the UK and the US. Simply looking at the data does not tell us if the distributions are different - a Chi-square tests of independence can report the significance level, which can help us make a judgement.\nThe null hypothesis in a test of independence is that the categorial variables are not related. So in the case of comparing the UK and Brazil the null hypothesis is: ‘There is no relationship between the country (UK or Brazil) and availability of a quiet room’.\n\n# Produce tables of counts of having a quiet room for the UK and the rest of the sample\n\nBraUKQuiRoom&lt;-PISA_2018%&gt;%\n  select(ST011Q04TA, CNT)%&gt;% # Select quiet room\n  filter(CNT==\"Brazil\"| CNT==\"United Kingdom\")%&gt;% # Filter for Brazil and UK\n  droplevels() # To prevent the levels for other countries confusing the table\n\nBraUKQuiFreqTable&lt;-xtabs(~ST011Q04TA+CNT, data=BraUKQuiRoom)\n\nUKUSQuiRoom&lt;-PISA_2018%&gt;%\n  select(CNT, ST011Q04TA)%&gt;% # Select quiet room and country variables\n  filter(CNT==\"United Kingdom\"|CNT==\"United States\")%&gt;% # Filter for the UK\n  droplevels() # To prevent the levels for other countries confusing the table\n\nUKUSQuiFreqTable&lt;-xtabs(~ST011Q04TA+CNT, data=UKUSQuiRoom)\n\n# Perform Chisq test between UK and Brazil\nchisq.test(BraUKQuiFreqTable)\n# p-value &lt; 2.2e-16, less than 0.05, so there are signifcant differences by UK and Brazil, the null hypothesis is rejected\n# Perform Chisq test between UK and US\nchisq.test(UKUSQuiFreqTable)\n# p-value = 1.924e-15 less than 0.05, so there are signifcant differences by UK and Brazil, the null hypothesis is rejected\n\nThe test here returns a p-value=1. This is more than 0.05 so implies there is a the null hypothesis can be accepted. The null hypothesis is that and it is assumed that the availability of quiet rooms in the UK is different from the population as a whole."
  },
  {
    "objectID": "chapters/07-ChisqPISA.html#task-1---creating-contingency-tables",
    "href": "chapters/07-ChisqPISA.html#task-1---creating-contingency-tables",
    "title": "07 Chi-square tests",
    "section": "\n6.1 Task 1 - Creating contingency tables",
    "text": "6.1 Task 1 - Creating contingency tables\n\n\nCreate a contingency table for UK, Germany and France levels of maternal education (ST005Q01TA). In which countries are most mothers (in total) educated to post school level?\n\n\n\n\n\n\n\nTip\n\n\n\nThe responses to ST005Q01TA are:\n\nISCED level 3A\nPost-16 technical equivalents\nISCED level 3B, 3C\nA-level equivalents\nISCED level 2\nLower secondary education ISCED level 1\nPrimary Education She did not complete ISCED Level 1\nDid not complete primary education\n\n\n\n\nShow the code# Create contingency table of mother's level of education\n\nMatEd&lt;-PISA_2018%&gt;%\n  select(CNT, ST005Q01TA)%&gt;% # Select maternal ed and country variables\n  filter(CNT==\"United Kingdom\"| CNT==\"France\"|CNT==\"Germany\")%&gt;% # Filter for CNT\n  droplevels() # To prevent the levels for other countries confusing the table\n\nContTab&lt;-xtabs(~ST005Q01TA +CNT, data=MatEd)\nContTab\n\n                                     CNT\nST005Q01TA                            Germany France United Kingdom\n  ISCED level 3A                         1590   3501           6024\n  ISCED level 3B, 3C                      400   1559           4991\n  ISCED level 2                          2025    711            670\n  ISCED level 1                            14     91             92\n  She did not complete  ISCED level 1     233    159            100\n\nShow the code# The country with the highest number of level 3A mothers is the UK\n\n\n\n\nST011Q01TA asks if students have a desk to study at. Create a contingency table by gender for this variable for students in the UK. Do more girls or boys have a desk?\n\n\nShow the code# Create contingency table of having a desk to study at\n\nDeskUK&lt;-PISA_2018%&gt;%\n  select(CNT, ST011Q01TA, ST004D01T)%&gt;% # Select desk and country variables\n  filter(CNT==\"United Kingdom\")%&gt;% # Filter for the UK\n  droplevels() # To prevent the levels for other countries confusing the table\n\nContTab&lt;-xtabs(~ST011Q01TA + ST004D01T, data=DeskUK, )\nContTab\n\n          ST004D01T\nST011Q01TA Female Male\n       Yes   5968 5728\n       No     763  745\n\nShow the code# More girls have a desk\n\n\n\n\nST011Q06TA asks if students have access to the internet. In which country in the dataset do students report the highest levels of access to the internet?\n\n\n\n\n\n\n\nTip\n\n\n\nTo sort a table, the easiest way is to convert it to a dataframe and then use the arrange function. The default order for arrange is ascending, adding desc switches to descending.\n\n# Arranging a table\n\nContTab&lt;-ContTab%&gt;%\n  as.data.frame()%&gt;%\n  arrange(desc(Freq))\nContTab\n\n  ST011Q01TA ST004D01T Freq\n1        Yes    Female 5968\n2        Yes      Male 5728\n3         No    Female  763\n4         No      Male  745\n\n\n\n\n\n\n    ST011Q06TA                    CNT  Freq\n1          Yes                  Spain 34663\n2          Yes                 Canada 21116\n3          Yes   United Arab Emirates 17616\n4          Yes             Kazakhstan 17511\n5          Yes         United Kingdom 13126\n6          Yes                  Qatar 12613\n7          Yes              Australia 12547\n8          Yes        B-S-J-Z (China) 11286\n9          Yes                  Italy 11127\n10         Yes              Argentina  9871\n11         Yes                 Brazil  9392\n12         Yes                Belgium  8295\n13         Yes                Denmark  7424\n14         Yes               Thailand  7301\n15         Yes     Russian Federation  7285\n16         Yes                 Jordan  7227\n17         Yes         Czech Republic  6864\n18         Yes         Chinese Taipei  6837\n19         Yes                  Chile  6735\n20         Yes              Lithuania  6687\n21         Yes                Austria  6598\n22         Yes              Singapore  6530\n23         Yes                Croatia  6499\n24         Yes                  Korea  6441\n25         Yes                 Serbia  6347\n26         Yes              Indonesia  6297\n27         Yes               Slovenia  6269\n28         Yes             Montenegro  6234\n29         Yes Bosnia and Herzegovina  6084\n30         Yes                 Greece  6067\n31         Yes                 France  6027\n32         Yes             Costa Rica  5974\n33         Yes            New Zealand  5888\n34         Yes                  Japan  5777\n35         Yes                Ukraine  5775\n36         Yes        Slovak Republic  5734\n37         Yes              Hong Kong  5728\n38         Yes            Switzerland  5669\n39         Yes                Belarus  5668\n40         Yes           Saudi Arabia  5625\n41         Yes        Tatarstan (RUS)  5609\n42         Yes                 Norway  5582\n43          No              Indonesia  5557\n44         Yes                Finland  5548\n45         Yes                 Poland  5540\n46         Yes      Baku (Azerbaijan)  5538\n47         Yes               Portugal  5530\n48         Yes                 Israel  5475\n49         Yes                Ireland  5469\n50         Yes      Brunei Darussalam  5347\n51         Yes                 Sweden  5333\n52         Yes        North Macedonia  5246\n53         Yes                Estonia  5173\n54         Yes                 Turkey  5158\n55         Yes                 Latvia  5156\n56         Yes               Colombia  5110\n57         Yes                Albania  5059\n58         Yes                Georgia  5031\n59         Yes                Hungary  5018\n60         Yes             Luxembourg  5010\n61         Yes               Bulgaria  4923\n62         Yes                Moldova  4848\n63         Yes                Romania  4784\n64         Yes                 Mexico  4632\n65         Yes               Malaysia  4628\n66         Yes                Germany  4623\n67         Yes            Netherlands  4616\n68         Yes          United States  4586\n69         Yes                Lebanon  4543\n70         Yes                 Kosovo  4494\n71         Yes                Uruguay  4328\n72         Yes     Dominican Republic  4162\n73         Yes                Vietnam  4109\n74         Yes                 Panama  3801\n75         Yes                  Macao  3726\n76          No            Philippines  3538\n77         Yes                   Peru  3444\n78         Yes                Morocco  3364\n79         Yes            Philippines  3342\n80         Yes                  Malta  3212\n81         Yes                Iceland  3199\n82          No                Morocco  2912\n83          No                   Peru  2540\n84          No               Colombia  2025\n85         Yes    Moscow Region (RUS)  1960\n86          No                 Mexico  1809\n87          No              Argentina  1781\n88          No                 Panama  1731\n89          No             Kazakhstan  1700\n90          No                 Turkey  1642\n91          No                 Jordan  1463\n92          No               Malaysia  1398\n93          No      Brunei Darussalam  1274\n94          No               Thailand  1261\n95          No                Vietnam  1237\n96          No             Costa Rica  1160\n97          No     Dominican Republic  1137\n98          No                Albania  1084\n99          No   United Arab Emirates   949\n100         No                 Brazil   937\n101         No      Baku (Azerbaijan)   904\n102         No                Lebanon   820\n103         No                  Chile   712\n104         No                  Spain   708\n105         No        B-S-J-Z (China)   683\n106         No                  Qatar   657\n107         No                Uruguay   616\n108         No                 Canada   382\n109         No                  Italy   364\n110         No                 Kosovo   351\n111         No                Moldova   347\n112         No         Chinese Taipei   325\n113         No                Georgia   319\n114         No             Montenegro   297\n115         No                  Japan   292\n116         No              Australia   289\n117         No           Saudi Arabia   258\n118         No                 Greece   247\n119         No Bosnia and Herzegovina   232\n120         No                 Israel   207\n121         No          United States   180\n122         No                 France   176\n123         No                Romania   173\n124         No                  Korea   168\n125         No             Luxembourg   164\n126         No            New Zealand   149\n127         No                 Serbia   138\n128         No                Austria   137\n129         No         United Kingdom   136\n130         No              Hong Kong   133\n131         No               Bulgaria   128\n132         No                Ukraine   126\n133         No              Singapore   114\n134         No     Russian Federation   112\n135         No               Portugal   111\n136         No        Slovak Republic   111\n137         No                Germany    98\n138         No                Belarus    83\n139         No              Lithuania    83\n140         No                Belgium    81\n141         No                  Malta    77\n142         No        North Macedonia    68\n143         No                Ireland    63\n144         No            Switzerland    62\n145         No                Hungary    62\n146         No        Tatarstan (RUS)    59\n147         No         Czech Republic    58\n148         No                Croatia    57\n149         No            Netherlands    56\n150         No                 Sweden    55\n151         No                 Latvia    51\n152         No                  Macao    45\n153         No               Slovenia    45\n154         No                 Norway    43\n155         No                 Poland    36\n156         No                Denmark    33\n157         No                Estonia    27\n158         No    Moscow Region (RUS)    21\n159         No                Finland    20\n160         No                Iceland    19"
  },
  {
    "objectID": "chapters/07-ChisqPISA.html#task-2---goodness-of-fit-test.-are-the-responses-of-the-survey-in-proportion-to-populations",
    "href": "chapters/07-ChisqPISA.html#task-2---goodness-of-fit-test.-are-the-responses-of-the-survey-in-proportion-to-populations",
    "title": "07 Chi-square tests",
    "section": "\n6.2 Task 2 - Goodness of fit test. Are the responses of the survey in proportion to populations?",
    "text": "6.2 Task 2 - Goodness of fit test. Are the responses of the survey in proportion to populations?\n\nThe populations of three countries in the sample are:\n\n\nCountry\nPopulation\nRatio\n\n\n\nUS\n332 million\n0.69\n\n\nGermany\n83 million\n0.17\n\n\nUK\n67 million\n0.14\n\n\n\nAre the number of responses in the sample a good fit for the overall populations?\nUse a goodness of fit implementation of Chi square with the null hypothesis that the proportion of students in the sample of PISA match that of the overall population. Hint: You can use the CNT column to create counts of the total dataset.\n\n\nShow the codeSubset &lt;- PISA_2018 %&gt;%\n  select(CNT) %&gt;%\n  filter(CNT==\"United Kingdom\"|CNT==\"United States\"|CNT==\"Germany\") %&gt;%\n  droplevels()\n\nCNTcount &lt;- as.data.frame(table(Subset))\n\nchisq.test(CNTcount$Freq, p=c(0.17, 0.14, 0.69))\n\n# The UK has many more responses that expected by proportion of its size."
  },
  {
    "objectID": "chapters/07-ChisqPISA.html#task-3---goodness-of-fit-test-birth-month-distribution",
    "href": "chapters/07-ChisqPISA.html#task-3---goodness-of-fit-test-birth-month-distribution",
    "title": "07 Chi-square tests",
    "section": "\n6.3 Task 3 - Goodness of fit test: Birth month distribution",
    "text": "6.3 Task 3 - Goodness of fit test: Birth month distribution\n\nPerform a goodness of fit test to determine if the birth months (ST003D02T) of respondents are distributed as expected in\n\nthe whole sample;\nin the UK. Use ggplot to plot a column graph of both data sets (the world and the UK).\nWhat might explain any patterns you see.\n\n\n\nShow the codeWorldmonth &lt;- PISA_2018 %&gt;%\n  select(ST003D02T) %&gt;%\n  droplevels()\n\nWorldmonth &lt;- as.data.frame(table(Worldmonth))\n\nExpected &lt;- c(rep(1/12, times=12))\n\nchisq.test(Worldmonth$Freq, p=Expected)\n\n# p-value &lt; 2.2e-16, which is less than 0.05, reject the null hypothesis.The world data does not follow the expect distribution\n\nUKmonth &lt;- PISA_2018 %&gt;%\n  select(ST003D02T, CNT) %&gt;%\n  filter(CNT==\"United Kingdom\") %&gt;%\n  select(ST003D02T) %&gt;%\n  droplevels()\n\nUKmonth &lt;- as.data.frame(table(UKmonth))\n\nExpected &lt;- c(rep(1/12, times=12))\n\nchisq.test(UKmonth$Freq, p=Expected)\n\n# p-value &lt; 2.2e-16, which is less than 0.05, reject the null hypothesis.The world data does not follow the expect distribution\n\nggplot(data=Worldmonth,\n       aes(x=ST003D02T, y=Freq, fill=ST003D02T)) +\n  geom_col() +\n  ggtitle(\"World birth months\")\n\nggplot(data=UKmonth,\n       aes(x=ST003D02T,y=Freq, fill=ST003D02T)) +\n  geom_col() +\n  ggtitle(\"UK birth months\")"
  },
  {
    "objectID": "chapters/07-ChisqPISA.html#task-4---country-differences---hypothesis-testing",
    "href": "chapters/07-ChisqPISA.html#task-4---country-differences---hypothesis-testing",
    "title": "07 Chi-square tests",
    "section": "\n6.4 Task 4 - Country differences - hypothesis testing",
    "text": "6.4 Task 4 - Country differences - hypothesis testing\n\nPerform a hypothesis test to determine:\n\n\nISCEDO contains information about the type of school students attend - responses can be: General, Pre-Vocational, Vocational or Modular. Determine if the attendance at such schools is equivalent in the United Kingdom, United States, France, and Germany.\n\nPlot a mosaic plot of the proportions\n\nShow the codeSchTypes &lt;- PISA_2018 %&gt;%\n  select(CNT, ISCEDO) %&gt;% # choose country and type of school\n  filter(CNT==\"United Kingdom\"|CNT==\"United States\"|\n           CNT== \"France\"|CNT==\"Germany\")%&gt;% # filter by four countries\n  droplevels() # Remove other countries which exist as factors\n\n# Create a contingency table\nSchCont&lt;-xtabs(data=SchTypes, ~ISCEDO+CNT)\n\nchisq.test(SchCont) # Perform the test\n# The p-value is less than 0.05 (p-value &lt; 2.2e-16), therefore we reject the null hypothesis that the distributions are the same\n\nggplot(data=SchTypes) +\n  geom_mosaic(aes(x=product(ISCEDO,CNT), fill=ISCEDO))\n\n\n\n\n\nAre there significant differences between Japan, Greece and the UK in IC001Q01TA, Available for you to use at home: Desktop computer? (Yes or No). Produce a mosaic plot.\n\n\nShow the codeDesktop &lt;- PISA_2018 %&gt;%\n  select(CNT, IC001Q01TA) %&gt;% # choose country and use of computer\n  filter(CNT==\"United Kingdom\"|CNT==\"Japan\"| CNT==\"Greece\") %&gt;% # filter by countries\n  droplevels() # Remove other countries which exist as factors\n\n# Produce a contingency table\nContDesk &lt;- xtabs(data=Desktop, ~CNT+IC001Q01TA)\n\nchisq.test(ContDesk) # Perform the test\n# The p-value is less than 0.05 (p-value &lt; 2.2e-16), therefore we reject the null hypothesis that the distributions are the same\n\nggplot(data=Desktop) +\n  geom_mosaic(aes(x=product(IC001Q01TA,CNT), fill=IC001Q01TA))\n\n\n\n\nPerform a hypothesis test to determine if ST007Q01TA - the highest level of schooling completed by respondents’ fathers, is different in the UK, US, France and Germany.\nPlot a mosaic plot of the proportions.\nFollow up question: Are the proportions of paternal education different in the three European countries (UK, France and Germany)?\n\n\n\n\n\n\nTip\n\n\n\nHint: assume the null hypothesis is that fathers have the same level of qualifications in the four countries.\n\n\n\nShow the codePatEdTypes&lt;-PISA_2018%&gt;%\n  select(CNT, ST007Q01TA)%&gt;% # choose country and type of school\n  filter(CNT==\"United Kingdom\"|CNT==\"United States\"|\n           CNT== \"France\"|CNT==\"Germany\")%&gt;% # filter by four countries\n  droplevels() # Remove other countries which exist as factors\n\nConttable&lt;-xtabs(data=PatEdTypes,~CNT,ST007Q01TA)\nchisq.test(Conttable) # Perform the test\n# The p-value is less than 0.05 (p-value &lt; 2.2e-16), therefore we reject the null hypothesis that the distributions are the same\n\n# Create a geom_mosaic\nggplot(data=PatEdTypes)+\n  geom_mosaic(aes(x=product(ST007Q01TA,CNT), fill=ST007Q01TA))+\n  ylab(\"Frequency of father's level of qualification\")+\n  xlab(\"Country\")+\n  theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))# Rotate x-axis labels\n\n# Follow up Question\n\nPatEdTypes&lt;-PISA_2018%&gt;%\n  select(CNT, ST007Q01TA)%&gt;% # choose country and type of school\n  filter(CNT==\"United Kingdom\"|CNT== \"France\"|CNT==\"Germany\")%&gt;% \n  droplevels() # Remove other countries which exist as factors\n\nConttable&lt;-xtabs(data=PatEdTypes,~CNT,ST007Q01TA)\nchisq.test(Conttable) # Perform the test\n# The p-value is less than 0.05 (p-value &lt; 2.2e-16), therefore we reject the null hypothesis that the distributions are the same\n\n# Create a geom_mosaic\nggplot(data=PatEdTypes)+\n  geom_mosaic(aes(x=product(ST007Q01TA,CNT), fill=ST007Q01TA))+\n  ylab(\"Frequency of father's level of qualification\")+\n  xlab(\"Country\")+\n  theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))# Rotate x-axis labels"
  },
  {
    "objectID": "chapters/07-ChisqPISA.html#useful-resources",
    "href": "chapters/07-ChisqPISA.html#useful-resources",
    "title": "07 Chi-square tests",
    "section": "\n8.1 Useful resources",
    "text": "8.1 Useful resources"
  },
  {
    "objectID": "chapters/08-Writing_report.html",
    "href": "chapters/08-Writing_report.html",
    "title": "08 Writing a quantitative report",
    "section": "",
    "text": "In the lecture you looked at Du and Wong (2019) as an example of a quantitative report. This session will help you structure your writing for your own quantitative report in assignment 3."
  },
  {
    "objectID": "chapters/08-Writing_report.html#activity-1-proposing-a-question",
    "href": "chapters/08-Writing_report.html#activity-1-proposing-a-question",
    "title": "08 Writing a quantitative report",
    "section": "1.1 Activity 1: Proposing a question",
    "text": "1.1 Activity 1: Proposing a question\n\nSpend 10 minutes researching a problem (this can’t be extensive but find something that is flagged as requiring more research). Alternatively, you make already have a problem, in which case move onto the next step\nState a rough research problem:\ne.g., There is an imbalance in the number of students studying a-level biology (i.e., too few boys)\nTurn the problem into a question:\ne.g., What school features correlate with higher and lower level of male uptake of a-level biology?\nIncrease the specificity of the question:\ne.g., In DfE school census data for the period 2017-2022 what school variables (including number of biology teachers, uptake of GCSE triple science, % of FSM students etc.) correlate with higher and lower level of male uptake of a-level biology?"
  },
  {
    "objectID": "chapters/08-Writing_report.html#activity-2-find-a-data-set-and-check-its-applicability",
    "href": "chapters/08-Writing_report.html#activity-2-find-a-data-set-and-check-its-applicability",
    "title": "08 Writing a quantitative report",
    "section": "1.2 Activity 2: Find a data set and check its applicability",
    "text": "1.2 Activity 2: Find a data set and check its applicability\n\nUse the list of open data sets to choose an appropriate data set\nDoes it include all the data to answer your question? Which items will you use in your analysis? What form is the data you will use in?\nWhat form of cleaning will the data require?\nWill you need to draw on multiple data sets?"
  },
  {
    "objectID": "chapters/08-Writing_report.html#activity-3-decide-on-approaches-to-analysis",
    "href": "chapters/08-Writing_report.html#activity-3-decide-on-approaches-to-analysis",
    "title": "08 Writing a quantitative report",
    "section": "1.3 Activity 3: Decide on approaches to analysis",
    "text": "1.3 Activity 3: Decide on approaches to analysis\n\nWhat types of data are relevant to your questions (continuous, discontinuous?)\nWhat types of test will you need to run?\nWhat kind of descriptive statistics will be useful?"
  },
  {
    "objectID": "chapters/08-Writing_report.html#activity-4-sketch-a-research-plan",
    "href": "chapters/08-Writing_report.html#activity-4-sketch-a-research-plan",
    "title": "08 Writing a quantitative report",
    "section": "1.4 Activity 4: Sketch a research plan",
    "text": "1.4 Activity 4: Sketch a research plan\n\nWhen will you finalize your question?\nWhen will you carry out your data analysis?\nWhen will you write up?\nWhat help will you need?\nHow can you collaborate with peers?\nWhat R/SPSS/Excel skills do you need to acquire?"
  },
  {
    "objectID": "chapters/10-Correlation_and_regression.html#other-correlation-coefficients",
    "href": "chapters/10-Correlation_and_regression.html#other-correlation-coefficients",
    "title": "10 Correlation and regression",
    "section": "\n3.1 Other correlation-coefficients",
    "text": "3.1 Other correlation-coefficients\nWhen looking for correlations in data that is non-parametric, i.e. not normally distributed you could use Spearman’s rank order correlation-coefficient (rho ρ) rather than Pearson’s r. cor.test(... method = \"...\") allows you to specify the method used for correlation, you can set this to Spearman’s rho by writing method = \"spearman\"\nData will need to contain continuous or ordinal variables. The Spearman correlation coefficient is based on the ranked values for each variable rather than the raw data. The Spearman correlation between two variables is equal to the Pearson correlation between the rank values of those two variables.\nWe want to look at the correlation between attitudes towards the learning activities in schools (ATTLNACT) and wealth (WEALTH) for females from the UK with fathers who are Cooks.\n\n# all the females who have fathers that are Cooks(!)\nsub_data &lt;- PISA_2018 %&gt;% \n                filter(CNT == \"United Kingdom\",\n                       ST004D01T == \"Female\",\n                       OCOD2 == \"Cooks\")\n\nGraphing this data, it is unclear if it is normalised:\n\nggplot(sub_data) + geom_density(aes(x=ATTLNACT))\n\n\n\n\nWe can run the Shapiro-Wilk Test to check for the the normality of the data, any alpha value greater than 0.05 means we can assume that the data is normally distributed.\n\nshapiro.test(sub_data$ATTLNACT)\n\n\n    Shapiro-Wilk normality test\n\ndata:  sub_data$ATTLNACT\nW = 0.84971, p-value = 0.003354\n\n\nIn this case the data isn’t normally distributed as p &lt; 0.05 and we need to use a non-parametric correlation test. We need to run Spearman rather than Pearson:\n\ncor.test(sub_data$WEALTH, sub_data$ATTLNACT, method = \"spearman\")\n\n\n    Spearman's rank correlation rho\n\ndata:  sub_data$WEALTH and sub_data$ATTLNACT\nS = 1369, p-value = 0.3097\nalternative hypothesis: true rho is not equal to 0\nsample estimates:\n      rho \n0.2269763 \n\n\nThe result shows no significant correlation (p=0.31) between wealth and attitude to school for this group of students\n\n\n\n\n\n\nImportant\n\n\n\nthe central limit theorem means that when you have a sufficiently large sample you can presume that the data is normally distributed. As a rule of thumb “30 is the magic number”, and any samples you are studying with 30 or more data items can be treated as parametric, e.g. you would always use pearson when running correlation analysis on 30 or more items.\n\n\nWhen dealing with non-parametric and small data sets you can also use Kendall’s Tau i.e. cor.test(... method = \"kendall\")"
  },
  {
    "objectID": "chapters/10-Correlation_and_regression.html#reporting-correlations",
    "href": "chapters/10-Correlation_and_regression.html#reporting-correlations",
    "title": "10 Correlation and regression",
    "section": "\n3.2 Reporting correlations",
    "text": "3.2 Reporting correlations\nTo interpret the correlation co-efficient of a model we can use the following table:\n\n\nCorrelation co-efficient\nRelationship\n\n\n\n.70 or higher\nvery strong positive\n\n\n.40 to .69\nstrong positive\n\n\n.30 to .39\nmoderate positive\n\n\n.20 to .29\nweak positive\n\n\n.01 to .19\nnegligible or none\n\n\n0\nno relationship\n\n\n-.01 to -.19\nnegligible or none\n\n\n-.20 to -.29\nweak negative\n\n\n-.30 to -.39\nmoderate negative\n\n\n-.40 to -.69\nstrong negative\n\n\n-.70 or higher\nvery strong negative\n\n\n\nWhen writing a report we might present our findings like this:\n\nThere was no significant relationship between the perceived quality of sleep and its impact on Mood, r = -.12, p = .17\n\nor\n\nThere is a significant very strong correlation between overall well-being and life satisfaction, r = .86, p = .00"
  },
  {
    "objectID": "chapters/10-Correlation_and_regression.html#linear-models-and-regression",
    "href": "chapters/10-Correlation_and_regression.html#linear-models-and-regression",
    "title": "10 Correlation and regression",
    "section": "\n4.1 Linear models and regression",
    "text": "4.1 Linear models and regression\nThe model used is a linear one, therefore, we describe the relationship using the equation of a straight line. In linear regression, with one dependent and one independent variable, we use the Method of Least Squares to find the line of best fit. The means finding a straight line that passes as close as possible to all the points. The distance between a point and this line is called a residual. The line of best fit is the line where the sum of the residuals squared is the smallest number possible.\n\n\nMethod of Least Squares\n\nThe line that is created can be described by the equation:\nOutput = Intercept + Coefficient * Input \nLet’s use linear regression to explore the relationship between the score in maths(PV1MATH) and the score in reading (PV1READ). To build this model we use the lm command:\nlm(&lt;dependent_var&gt; ~ &lt;independent_var&gt; , data=&lt;dataframe&gt;)\nThe first part defines the model we are going to explore, listing the dependent variable and separating it from the independent variable[s] with a tilde ~. You can specify multiple independent variables by adding more plusses, but for the example here we are only going to use one. Once the model has been built we can feed it into the summary(&lt;mdl&gt;) command to output the results:\n\n\n\nCall:\nlm(formula = PV1MATH ~ PV1READ, data = PISA_2018)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-289.48  -39.35   -0.79   38.68  341.71 \n\nCoefficients:\n             Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept) 9.617e+01  3.254e-01   295.5   &lt;2e-16 ***\nPV1READ     8.003e-01  6.942e-04  1152.9   &lt;2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 58.42 on 606625 degrees of freedom\n  (5377 observations deleted due to missingness)\nMultiple R-squared:  0.6866,    Adjusted R-squared:  0.6866 \nF-statistic: 1.329e+06 on 1 and 606625 DF,  p-value: &lt; 2.2e-16\n\n\nIf you look at the Coefficents: table we can see that PV1READ is significant in explaining the outcome of the model as the p-value Pr(&gt;|t|) is less than 0.001 &lt;2e-16 ***. The null hypothesis is that one variable does not predict another, we can dismiss this. By looking at the Estimate we can also see by how much a PV1MATH grade would increase if the PV1READ increased by one: 0.8003. Additionally, we have R2 value of 0.6866, this suggests that the model is very good at explaining the value of the dependent variable, 68.7% of the variance in the PV1MATH grade is explained by the PV1READ grade."
  },
  {
    "objectID": "chapters/10-Correlation_and_regression.html#r-squared",
    "href": "chapters/10-Correlation_and_regression.html#r-squared",
    "title": "10 Correlation and regression",
    "section": "\n4.2 R squared",
    "text": "4.2 R squared\nWith large data sets you will often find a statistically significant difference, but p-values should be read with caution as the larger the data set you use the more likely you are to get a low p-value. The actual magnitude of a significant difference might be very small. r-squared and adjusted r-squared are ways for you to report on the magnitude of a significant difference and when you report the findings from a linear model you should be looking at the p and the R^2^ values. You have already met R, this is the correlation coefficient from earlier, R2 is this value squared:\n\n\nR - The correlation between the observed values of the outcome, and the values predicted by the model.\n\nR2 - The proportion of variance in the dependent variable accounted for by the model.\n\nAdj. R2 - An estimate of R2 in the population (shrinkage), often very similar to plain R2.\n\nImagine we take two experiments a) and b)\n\n\na) larger effect-size; b) smaller effect-size from Coe (2002)\n\nBoth have statistically significant results, but it’s clear that the impact of the intervention in graph a) is larger as there is less overlap between the curves, i.e. there is more difference between the the outcomes.\n\nif the difference were as in graph (a) it would be very significant; in graph (b), on the other hand, the difference might hardly be noticeable (Coe 2002, p2)\n\nDifferent effect sizes have different meanings and there is some debate on how to interpret them, with different interpretations for different fields of research (Schäfer and Schwarz 2019)\n\nHow to interpret effect sizes (Cohen 1962)\n\n\nEffect size value\nEffect size\n\n\n\n0.0 to 0.19\nnegligible\n\n\n0.2 to 0.49\nsmall\n\n\n0.5 to 0.79\nmedium\n\n\n0.8+\nlarge\n\n\n\nYou might be familiar with the Education Endowment Foundation’s Teaching and Learning Toolkit which outlines the Impact of different interventions on student learning. For example, repeating a year is seen to decrease student progress by 3 months and providing students with feedback is seen to increase student progress by 6 months. Behind the scenes they are using effect-sizes to predict the impact of educational interventions. In their model an effect-size of 0.1 is considered to have “Low impact”, but also an effect size of this magnitude is translated to 2 months progress in the Toolkit (Higgins et al. 2016, 5)."
  },
  {
    "objectID": "chapters/10-Correlation_and_regression.html#task-1",
    "href": "chapters/10-Correlation_and_regression.html#task-1",
    "title": "10 Correlation and regression",
    "section": "\n8.1 Task 1",
    "text": "8.1 Task 1\n\nGroup discussion:\n\nWhat were the most important findings from Stoet and Geary’s paper?\nHow trustworthy are the results?\nWhat do these results mean for gender equality in STEM?\n\n\nWhat are Spearman’s Rho and Pearson’s r? When might you use one rather than the other?\n\n\nanswer#&gt; When the data you use has outliers or is not \n#&gt; normally distributed (non-parametric) you should use Spearman's Rho\n#&gt; you can test this by checking that shapiro.test p &gt;0.05\n\n\n\nIdentify dependent and independent variables in the following scenarios and select the most appropriate statistical test (from all that you have learnt) for the analysis.\n\n\nThe government is trying to understand which groups of people have been affected by a pandemic. They have data on healthcare professionals, education professionals and train drivers and the number of days taken off ill in the last 6 months.\nA cigarette company, working in a country that still allows cigarette advertising(!), wants to work out which groups in society are not currently smoking that many cigarettes. They want to find out if city dwellers are more likely to smoke than people living in the countryside.\nA netball team is trying to work out how likely their players are to get injured in a season. They have data on the number of injuries per player and the number of minutes each player has been playing netball.\nA country is trying to find out whether girls or boys are better behaved in schools. They have access to school databases that record the number of bad behaviour slips for each student.\n\n\nanswer# The government is trying to understand which groups of people have been affected by a pandemic. They have data on healthcare professionals, education professionals and train drivers and the number of days taken off ill in the last 6 months.\n#&gt; Dependendent: days off ill\n#&gt; Independent: job role\n#&gt; Suggested model: ANOVA to check if there are differences between jobs\n\n# A cigarette company, working in a country that still allows cigarette advertising(!), wants to work out which groups in society are not currently smoking that many cigarettes. They want to find out if city dwellers are more likely to smoke than people living in the countryside.\n#&gt; Dependent: Smoker / Non Smoker\n#&gt; Independent: City / Countryside residence\n#&gt; Suggested model: Chi-square\n\n# A netball team is trying to work out how likely their players are to get injured in a season. They have data on the number of injuries per player and the number of minutes each player has been playing netball.\n#&gt; Dependent: injuries\n#&gt; Independent: time on court\n#&gt; Suggested model: Linear model/regression\n\n# A country is trying to find out whether girls or boys are better behaved in schools. They have access to school databases that record the number of bad behaviour slips for each student.\n#&gt; Dependent: behaviour slips\n#&gt; Independent: Gender (Girls/Boys)\n#&gt; Suggested model: t-test\n\n\n\nInterpret this correlation coefficient between the Index of economic, social and cultural status ESCS and Family wealth WEALTH\n\n\n\n\n\n    Pearson's product-moment correlation\n\ndata:  PISA_2018$ESCS and PISA_2018$WEALTH\nt = 751.83, df = 595193, p-value &lt; 2.2e-16\nalternative hypothesis: true correlation is not equal to 0\n95 percent confidence interval:\n 0.6966207 0.6992267\nsample estimates:\n     cor \n0.697926 \n\n\n\nanswer#&gt; The Index of economic, social and cultural status `ESCS` is strongly\n#&gt; correlated with Family wealth `WEALTH`, with a correlation coefficient\n#&gt; of 0.697926. This model is signficant with a p-value of &lt; 0.001\n\n\n\nInterpret this linear model based on the FBI’s 2006 crime statistics. It explores the relationship between size of population (1,000s) and the number of murders (units)1:\n\n\n\n\nEstimate\nStd. Error\nt value\nPr(&gt;|t|)\n\n\n\n(Intercept)\n-0.726\n0.089\n-8.191\n&lt;2e-16 ***\n\n\nPop_thou\n0.103\n0.001\n145.932\n&lt;2e-16 ***\n\n\n\nAdj R2 0.721\n\nanswer#&gt; The model is pretty good at explaining the variance, The Adj. R2\n#&gt; shows that population explains 72% of the variance in murders.\n#&gt; The model is significant as p &lt; 0.001. For every increase in \n#&gt; population of 1000 people, the model predicts another 0.1 deaths.\n\n\n\nWork out the correlation between a country’s mean female science grade and mean male science grade. Should you use Spearman’s Rho or Pearson’s r in your model? Why?\n\n\nanswerdf &lt;- PISA_2018 %&gt;% group_by(CNT, ST004D01T) %&gt;% summarise(maths = mean(PV1MATH))\n\nmaths_male   &lt;- df %&gt;% filter(ST004D01T == \"Male\")\nmaths_female &lt;- df %&gt;% filter(ST004D01T == \"Female\")\n\ncor.test(maths_male$maths, maths_female$maths)\n\n#&gt; you should use Pearson as the shapiro wilkes test has a p-vale &gt; 0.05\n\nshapiro.test(maths_female$maths)\n#&gt; p-value = 0.1727\n\nshapiro.test(maths_male$maths)\n#&gt; p-value = 0.1414\n\n\n\nCreate a linear model to explore the relationship between the time spent in science lessons (SMINS) and the grade in science (PV1SCIE)\n\n\nanswermdl &lt;- lm(PV1SCIE ~ SMINS, data = PISA_2018)\nsummary(mdl)\n\n#&gt; For every extra minute spent learning science, \n#&gt; there is a grade increase of 0.07, \n#&gt; SMINS is a significant predictor p &lt;2e-16 ***, \n#&gt; but the overall model has a very low R squared value of 0.01625\n\n\nAdd the student maths score PV1MATH this model, how does this change the outcome?\n\nanswermdl &lt;- lm(PV1SCIE ~ SMINS + PV1MATH, data = PISA_2018)\nsummary(mdl)\n\n#&gt; For every extra minute spent learning science each week, \n#&gt; there is now a grade increase of only 0.015, \n#&gt; i.e. when controlling for maths outcomes, time in science \n#&gt; lessons explains less of the overall science grade. \n#&gt; Both factors remain significant and the overall model \n#&gt; now has a very high R squared value of 0.6974\n\n\n\nLoad the school level data set for 2018 (file here) and explore the fields.\n\nUsing a linear model, how do “Shortage of educational staff” STAFFSHORT and “Shortage of educational material” EDUSHORT relate to “Student behaviour hindering learning” STUBEHA\n\nanswermdl &lt;- lm(STUBEHA ~ STAFFSHORT + EDUSHORT, data=PISA_2018_school)\nsummary(mdl)\n\n#&gt; STAFFSHORT has a slightly larger estimate, 0.214186, than EDUSHORT, 0.17148.\n#&gt; This means as staff and educational resource shortages increase, so does\n#&gt; student behaviour hindering learning.\n#&gt; Both factors are significant p &lt;2e-16 ***\n#&gt; The effect size of the overall model is low, at 0.08346\n\n\nAdjust the model to incorporate the percentage of boys in a school (see SC002Q01TA and SCHSIZE), what difference does this make?\n\nanswertbl_beh_predict &lt;- PISA_2018_school %&gt;% \n  mutate(boy_per = 100 * SC002Q01TA / SCHSIZE)\n\nmdl &lt;- lm(STUBEHA ~ STAFFSHORT + EDUSHORT + boy_per, data=tbl_beh_predict)\nsummary(mdl)\n\n#&gt; adding percentage of boys to the model increases the effect size 0.09553,\n#&gt; albeit, still a small one.\n#&gt; when controlling for boy_per the estimate of staff shortages\n#&gt; decreases slightly, and the estimate of educational shortages\n#&gt; increases. The estimate of boy_per is significant, for every \n#&gt; one percent increase in boys in a school, student behaviour\n#&gt; hindering learning increases by 0.005, this model shows an all \n#&gt; girls school would likely have a student behaviour hindering\n#&gt; learning value 0.5 lower than an all boys school!\n#&gt; it'd be worth double checking to see if boy_per is parametric\n\n\nHow does the explanatory value of this model change if you only look at schools in the UK?\n\nanswermdl &lt;- lm(STUBEHA ~ STAFFSHORT + EDUSHORT + boy_per, \n          data=tbl_beh_predict %&gt;% filter(CNT == \"United Kingdom\"))\nsummary(mdl)\n\n#&gt; for the UK the effect size is larger at 0.1686, more of the variance of\n#&gt; STUBEHA is explained by this model than for other countries\n#&gt; educational resource shortages have a negative impact on STUBEHA, \n#&gt; albeit with a very small estimate -0.003519\n#&gt; staff shortages have a bigger impact that other countries, with an\n#&gt; estimate of 0.396835\n\n\n\nUsing left_join (see Section 9.3), link each student record in PISA_2018 to their school details (file here). You will need need to select a subset of the school table to cover: CNT, CNTSCHID, SC016Q02TA, SC156Q03HA, SC156Q04HA, SC154Q01HA, SC154Q02WA, SC154Q05WA, SC154Q08WA, SC154Q09HA, STRATIO, CLSIZE, EDUSHORT, STAFFSHORT, STUBEHA\n\n\n\nleft_join code#&gt; SC016Q02TA   Percentage of total funding for school year from: Student fees or school charges paid by parents\n#&gt; SC156Q03HA   At school: A programme to use digital devices for teaching and learning in specific subjects\n#&gt; SC156Q04HA   At school: Regular discussions with teaching staff about the use of digital devices for pedagogical purposes\n#&gt; SC154Q01HA   School's use of assessments of students: To guide students' learning\n#&gt; SC154Q02WA   School's use of assessments of students: To inform parents about their child's progress\n#&gt; SC154Q05WA   School's use of assessments of students: To compare the school to &lt;district or national&gt; performance\n#&gt; SC154Q08WA   School's use of assessments of students: To identify aspects of instruction or the curriculum that could be improved\n#&gt; SC154Q09HA   School's use of assessments of students: To adapt teaching to the students' needs\n#&gt; STRATIO  Student-Teacher ratio\n#&gt; CLSIZE   Class Size (cheating here slightly as this is a nominal field which roughly maps to the continuous)\n#&gt; EDUSHORT Shortage of educational material (WLE)\n#&gt; STAFFSHORT   Shortage of educational staff (WLE)\n#&gt; STUBEHA  Student behaviour hindering learning (WLE)\n\nPISA_2018_stusch &lt;- \n  left_join(PISA_2018 %&gt;% select(CNT, CNTSCHID, ST004D01T, WEALTH, \n                                 ESCS, PV1SCIE, PV1MATH, PV1READ), \n             PISA_2018_school %&gt;% \n              select(CNT, CNTSCHID, SC016Q02TA, SC156Q03HA, SC156Q04HA,\n                     SC154Q01HA, SC154Q02WA, SC154Q05WA, SC154Q08WA,\n                     SC154Q09HA, STRATIO, CLSIZE, EDUSHORT, STAFFSHORT, STUBEHA))\n\n\nUsing a linear model, find out how well the student teacher ratio STRATIO in a school predicts the mean maths achievement PV1MATH in that school. HINT: you need one row for each school, so use summarise with unique on STRATIO and mean on PV1MATH:\n\nanswerstu_tch_mat &lt;- PISA_2018_stusch %&gt;% \n  group_by(CNTSCHID) %&gt;%\n  summarise(stu_tch_rat = unique(STRATIO),\n            maths = mean(PV1MATH))\n\nmdl_stu_tch_mat &lt;- lm(maths ~ stu_tch_rat, data=stu_tch_mat)\nsummary(mdl_stu_tch_mat)\n\n#&gt; it's significant p &lt;2e-16 ***, but with a very low \n#&gt; estimates/betas, i.e. one extra student per teacher \n#&gt; decreases the maths score by just 1.3 points, \n#&gt; additionally the R squared value is low 0.02499 \n#&gt; this is \"low impact\" in the EEF toolkit\n\n\nAdjust the linear model used above to incorporate STUBEHA “Student behaviour hindering learning” in addition to the student teacher ratio:\n\nanswerstu_tch_mat_bev &lt;- PISA_2018_stusch %&gt;% \n  group_by(CNTSCHID) %&gt;%\n  summarise(stu_tch_rat = unique(STRATIO),\n            behaviour = unique(STUBEHA),\n            maths = mean(PV1MATH))\n\n#&gt; max(stu_tch_mat_bev$behaviour, na.rm = TRUE)\n#&gt; min(stu_tch_mat_bev$behaviour, na.rm = TRUE)\n\nmdl_stu_tch_mat_bev &lt;- lm(maths ~ stu_tch_rat + behaviour, data=stu_tch_mat_bev)\nsummary(mdl_stu_tch_mat_bev)\n\n#&gt; both factors are significant p&lt;2e-16 ***, but with low estimates/betas, \n#&gt; i.e. one extra student per teacher decreases \n#&gt; the maths score by 1.2 points and the aggregated student behaviour hinder \n#&gt; learning decreases maths by 11.1 points \n#&gt; (max behaviour = 3.6274, min = -4.3542), additionally the R squared value \n#&gt; is better, but still low 0.05619\n\n\n\nExplore the schools data set to look at other interesting models. The school data set has a lot more numeric/continuous fields than the student table! To find these fields use this code:\n\n\nfind numeric fields# to get the names of numeric fields along with their labels\nnms &lt;- PISA_2018_school %&gt;% select(where(is.numeric)) %&gt;% names()\nlbls &lt;- map_dfr(nms,~{\n  lbl &lt;- attr(PISA_2018_school[[.x]], \"label\")\n  nme &lt;- .x\n  row &lt;- c(nme, lbl)\n  names(row) &lt;- c(\"name\", \"label\")\n  return(row)\n})\n\n\n\nIn pairs discuss how you could use correlation and regression in your own research. Start building some models to explore the data sets.\nRecreate the Stoet & Geary analysis (see Section 9.4) to see if there is a “gender gap in intraindividual mathematics scores” that is “larger in more gender-equal countries”. You might expect this to be the case as it exists for science. Is this a STEM wide finding? How does the science model look for 2018 data? Was it a one off finding?\n\n\nanswer# standardise the results for each student in line with pg7\n# https://eprints.leedsbeckett.ac.uk/id/eprint/4753/6/symplectic-version.pdf\n\nlibrary(tidyverse)\nlibrary(arrow)\nlibrary(ggrepel)\n\nPISA_2015_GGGI &lt;- left_join(\n  PISA_2015 %&gt;% select(CNT, ST004D01T, PV1MATH, PV1SCIE, PV1READ, SCIEEFF),\n  GGGI %&gt;% select(Country, Overall.Score),\n  by=c(\"CNT\"=\"Country\"))\n\n# step 1\nPISA_2015z &lt;- PISA_2015_GGGI %&gt;% \n  rename(gender = ST004D01T) %&gt;%\n  group_by(CNT) %&gt;%\n  mutate(zMaths   = scale(PV1MATH),\n         zScience = scale(PV1SCIE), \n         zReading = scale(PV1READ))\n\n# step 2\nPISA_2015z &lt;- PISA_2015z %&gt;% \n  mutate(zGeneral = (zMaths + zScience + zReading) / 3)\n\n# step 3\nPISA_2015z &lt;- PISA_2015z %&gt;% \n  mutate(rel_MATH = zMaths   - zGeneral,\n         rel_SCIE = zScience - zGeneral,\n         rel_READ = zReading - zGeneral)\n\n# step 4 part 1\nPISA_2015z &lt;- PISA_2015z %&gt;% \n  group_by(CNT, gender) %&gt;%\n  summarise(zMaths = mean(zMaths, na.rm=TRUE),\n            zScience = mean(zScience, na.rm=TRUE),\n            zReading = mean(zReading, na.rm=TRUE),\n            zGeneral = mean(zGeneral, na.rm=TRUE),\n            rel_MATH = zMaths - zGeneral,\n            rel_SCIE = zScience - zGeneral,\n            rel_READ = zReading - zGeneral,\n            gggi = unique(Overall.Score))\n\n# step 4 part 2\npisa_gggi_diff &lt;- PISA_2015z %&gt;%\n  select(CNT, gender, gggi, rel_MATH) %&gt;%\n  pivot_wider(names_from = gender,\n              values_from = rel_MATH) %&gt;%\n  mutate(difference =  Male - Female)\n\nggplot(pisa_gggi_diff,\n       aes(x=difference, y=gggi)) + \n  geom_point(colour=\"red\") +\n  geom_smooth(method=\"lm\") +\n  geom_text_repel(aes(label=CNT),\n            box.padding = 0.2,\n            max.overlaps = Inf,\n            colour=\"black\") +\n  xlab(paste0(\"relative difference in PV1MATH scores (male-female)\"))\n\n# perform correlation analysis\nresult &lt;- cor.test(pisa_gggi_diff$gggi, \n                    pisa_gggi_diff$difference, \n                    method=\"spearman\")\nresult\n#&gt; this result isn't significant as p-value &gt; 0.05\n#&gt; additionally the correlation coefficient is negative\n#&gt; this suggests that the STEM gender paradox doesn't apply to maths."
  },
  {
    "objectID": "chapters/10-Correlation_and_regression.html#task-2-correlation-tasks",
    "href": "chapters/10-Correlation_and_regression.html#task-2-correlation-tasks",
    "title": "10 Correlation and regression",
    "section": "\n8.2 Task 2 Correlation tasks",
    "text": "8.2 Task 2 Correlation tasks\n\nUse cor.test to explore the following relationships:\n\n\nPV1MATH to PV1SCIE, is this a stronger relationship than that between Maths and Reading?\n\n\nanswercor.test(PISA_2018$PV1MATH, PISA_2018$PV1SCIE, method = \"pearson\")\n#&gt; cor 0.8451287\n\ncor.test(PISA_2018$PV1MATH, PISA_2018$PV1READ, method = \"pearson\")\n#&gt; cor 0.828626\n\n#&gt; very slightly, yes!\n\n\n\nThe wealth WEALTH of females ST004D01T and their Reading PV1READ score, how does this compare to males? Why might they be different?\n\n\nanswerdata &lt;- PISA_2018 %&gt;% filter(ST004D01T == \"Female\")\ncor.test(data$WEALTH, data$PV1READ, method = \"pearson\")\n\n\ndata &lt;- PISA_2018 %&gt;% filter(ST004D01T == \"Male\")\ncor.test(data$WEALTH, data$PV1READ, method = \"pearson\")\n#&gt; cor 0.2553069\n\n\n\nFor the United Kingdom How does the sense of belonging to school BELONG correlate with the attitude to learning activities ATTLNACT? How does the UK compare against other countries?\n\n\nanswerdata &lt;- PISA_2018 %&gt;% filter(CNT == \"United Kingdom\")\ncor.test(data$BELONG, data$ATTLNACT, method = \"pearson\")\n#&gt; cor 0.1314652\n\n\n\n\n\n\n\n\n\nTip\n\n\n\nIf you want to find all the numeric fields, i.e. the fields that you can easily run correlation calculations on, use the following code to list them:\n\nPISA_2018 %&gt;% select(where(is.numeric)) %&gt;% names()\n\n [1] \"WVARSTRR\"   \"ESCS\"       \"LMINS\"      \"CNTSCHID\"   \"CNTSTUID\"  \n [6] \"ST060Q01NA\" \"MMINS\"      \"SMINS\"      \"TMINS\"      \"CULTPOSS\"  \n[11] \"WEALTH\"     \"PV1MATH\"    \"PV1READ\"    \"PV1SCIE\"    \"ATTLNACT\"  \n[16] \"BELONG\"     \"DISCLIMA\""
  },
  {
    "objectID": "chapters/10-Correlation_and_regression.html#task-3-regression-tasks",
    "href": "chapters/10-Correlation_and_regression.html#task-3-regression-tasks",
    "title": "10 Correlation and regression",
    "section": "\n8.3 Task 3 Regression Tasks",
    "text": "8.3 Task 3 Regression Tasks\n\n\nIs it reasonable to presume that using 5 interventions from the education endowment foundation toolkit, each with effect-sizes of 0.1, i.e. 2 months improvement, will increase the progress for the average student in your class by 10 months (5 * 2)?\nRun a regression model to look at how science grades predict Maths outcomes in UK students. How does this compare to students in France?\n\n\nanswermdl &lt;- lm(PV1MATH ~ PV1SCIE, \n          data=PISA_2018 %&gt;% filter(CNT==\"United Kingdom\"))\nsummary(mdl)\n#&gt; Estimate = 0.757\n#&gt; p&lt;0.001\n#&gt; R2 = 0.6378\n\nmdl &lt;- lm(PV1MATH ~ PV1SCIE, \n          data=PISA_2018 %&gt;% filter(CNT==\"France\"))\nsummary(mdl)\n#&gt; Estimate = 0.834\n#&gt; p&lt;0.001\n#&gt; R2 = 0.7326\n\n#&gt; both models are significant, but the model in France has a higher R squared value, i.e. Science is a better predictor of maths outcomes in France than it is in the UK.\n\n\n\nCreate a linear model to look at how wealth WEALTH influences Maths grades in the United Kingdom and Belarus. If we use the Education Endowment Foundation’s interpretation of effect sizes (Higgins et al. 2016, 5) what is the impact of increasing the wealth of students in each country?\n\n\nanswermdl &lt;- lm(PV1MATH ~ WEALTH, \n          data=PISA_2018 %&gt;% filter(CNT==\"United Kingdom\"))\nsummary(mdl)\n#&gt; Estimate = 14.3\n#&gt; p&lt;0.001\n#&gt; R2 = 0.01999\n#&gt; this is just below 0.02, meaning the model has \"Very low or no impact\"\n\nmdl &lt;- lm(PV1MATH ~ WEALTH, \n          data=PISA_2018 %&gt;% filter(CNT==\"Belarus\"))\nsummary(mdl)\n#&gt; Estimate = 31.4\n#&gt; p&lt;0.001\n#&gt; R2 = 0.05476\n#&gt; Wealth has a greater impact on Maths results in Belarus than in the UK, with an effect size of \"Low\""
  },
  {
    "objectID": "chapters/10-Correlation_and_regression.html#task-4-linear-regression-tasks",
    "href": "chapters/10-Correlation_and_regression.html#task-4-linear-regression-tasks",
    "title": "10 Correlation and regression",
    "section": "\n8.4 Task 4 Linear regression tasks",
    "text": "8.4 Task 4 Linear regression tasks\n\n\nWhat errors can you see in this code:\n\n\nml(ST113Q01TA ~ ST004D01T, WEALTH, data = PISA_2015)\n\n\nanswer# 1. lm rather than ml\n# 2. + between ST004D01T + WEALTH, rather than an ,\nlm(ST113Q01TA ~ ST004D01T + WEALTH, data = PISA_2015)\n\n\n\nPV1MATH given PV1READ and PV1SCIE"
  },
  {
    "objectID": "chapters/10-Correlation_and_regression.html#sec-Stoet-Geary",
    "href": "chapters/10-Correlation_and_regression.html#sec-Stoet-Geary",
    "title": "10 Correlation and regression",
    "section": "\n9.1 Recreating Stoet and Geary’s paper",
    "text": "9.1 Recreating Stoet and Geary’s paper\nStoet and Geary’s 2018 paper: “The Gender-Equality Paradox in Science, Technology, Engineering, and Mathematics Education” presented controversial findings, including how the increased female uptake of STEM degrees in country could be partially explained (using regression) by the decreased gender equality in that country. We are going to explore part of this paper by looking at another finding (figure 3a) that looked at girls’ achievement in the PISA_2015 science test compared to their maths and reading grades. Comparing this relative grade to boys in the same country, it showed that as gender equality of their country increased, the gap got bigger, i.e. the more gender equal a country, the worse the female relative performance in science.\n\nThe gender gap in intraindividual science scores (a) was larger in more gender-equal countries (rs = .42)"
  },
  {
    "objectID": "chapters/10-Correlation_and_regression.html#loading-data-sets",
    "href": "chapters/10-Correlation_and_regression.html#loading-data-sets",
    "title": "10 Correlation and regression",
    "section": "\n9.2 Loading data sets",
    "text": "9.2 Loading data sets\nTo perform more complex analysis you will often want to join different data sets together. Stoet and Geary (2018) explore gender differences in outcomes with gender equality in countries (see their figures 3 and 4), by using the PISA_2015 data set with the science efficacy SCIEEFF, and science performance (maybe PV1SCIE, or a aggregation of PV1, PV2 etc ) fields; mapping this data set to the 2015 Global Gender Gap Index (GGGI). Let’s try and recreate what they did.\nFirst we are going to download the GGGI, unfortunately, it’s difficult to find the 2015 data set, so we’ll use 2013 instead, which can be found here\nThe data is in a .csv format so we need to use read.csv to get it into R (make sure that you use read.csv rather than read_csv as the names will come out slightly differently)\n\n# load the GGGI\nGGGI &lt;- read.csv(\"&lt;folder&gt;table-3b-detailed-rankings-2013.csv\")\n\nIf we look at the names of the GGGI fields we find that there is a Country column and the Overall.Score column, these are the columns that we are interested in. We can also see that many of the top scoring countries, i.e. those with better gender equality are Nordic countries.\n\nGGGI %&gt;% head(5) %&gt;% select(Country, Overall.Score)\n\n# A tibble: 5 × 2\n  Country     Overall.Score\n  &lt;chr&gt;               &lt;dbl&gt;\n1 Iceland             0.873\n2 Finland             0.842\n3 Norway              0.842\n4 Sweden              0.813\n5 Philippines         0.783\n\n\nNow we will load the 2015 PISA data set, we have a .parquet copy for you here\n\n# load PISA_2015 student data set\nPISA_2015 &lt;- read_parquet(\"&lt;folder&gt;PISA_2015_student_subset.parquet\")"
  },
  {
    "objectID": "chapters/10-Correlation_and_regression.html#sec-leftjoin",
    "href": "chapters/10-Correlation_and_regression.html#sec-leftjoin",
    "title": "10 Correlation and regression",
    "section": "\n9.3 Linking data using left_join\n",
    "text": "9.3 Linking data using left_join\n\nTo link the GGGI to the PISA_2015 data set we will use the left_join function from the tidyverse. This takes a few parameters\nleft_join(&lt;table_1&gt;, &lt;table_2&gt;, by=&lt;matching_field[s]&gt;)\nWe will now join a subset of the PISA_2015 data set to a subset of the GGGI scores:\n\nPISA_2015_GGGI &lt;- left_join(\n  PISA_2015 %&gt;% select(CNT, ST004D01T, PV1MATH, PV1SCIE, PV1READ, SCIEEFF),\n  GGGI %&gt;% select(Country, Overall.Score),\n  by=c(\"CNT\"=\"Country\"))\n\n\nline 1, assigns &lt;- the result of the left_join to a new object, PISA_2015_GGGI,\nline 2, specifies &lt;table_1&gt; to be PISA_2015 with the selected fields, note we have chosen to use PV1 grades here, it’s unclear what the original paper uses (See ?@sec-PV for a discussion on the use of PV grades)\nline 3, specifies &lt;table_2&gt; to be GGGI with just the country and Overall.Score fields\nline 4, specifies the &lt;matching_field&gt; to be CNTfrom PISA_2015 and Country from GGGI, this means that the data in &lt;table_2&gt; will be added to &lt;table_1&gt; where CNT and Country are the same. For example for every entry of Finland in PISA_2015, the Overall.Score of 0.8421 will be added. Where it can’t find a matching country, e.g. Albania doesn’t have a GGGI entry, NA will be added.\n\nYou can see the new data set has attached the Overall.Score field from GGGI to the selected fields from PISA_2015:\n\n\n# A tibble: 3 × 7\n  CNT     ST004D01T PV1MATH PV1SCIE PV1READ SCIEEFF Overall.Score\n  &lt;chr&gt;   &lt;fct&gt;       &lt;dbl&gt;   &lt;dbl&gt;   &lt;dbl&gt;   &lt;dbl&gt;         &lt;dbl&gt;\n1 Albania Female       463.    517.    430.      NA         0.641\n2 Albania Female       430.    480.    463.      NA         0.641\n3 Albania Female       303.    447.    503.      NA         0.641\n\n\n\n\n\n\n\n\nTip\n\n\n\nThere are multiple types of join in the tidyverse, you can find out more about them here\n\n\nThe available joins in the tidyverse, CC 4.0, by rstudio.com"
  },
  {
    "objectID": "chapters/10-Correlation_and_regression.html#sec-standard-stoet-geary",
    "href": "chapters/10-Correlation_and_regression.html#sec-standard-stoet-geary",
    "title": "10 Correlation and regression",
    "section": "\n9.4 Standardising PISA results",
    "text": "9.4 Standardising PISA results\nNext, we will try to wrangle the data into shape to recreate figure 3 from Stoet and Geary (2018). To do this we first need to standardise the grades for maths, science and reading so we can compare the results of students between countries without low performing or high performing countries skewing the results (see Chapter 7 for details on how to standardise data). Following the steps outlined on page 7:\n\n\nWe standardized the mathematics, science, and reading scores on a nation-by-nation basis. We call these new standardized scores zMath, zRead, and zScience.\nWe calculated for each student the standardized average score of the new z-scores and we call this zGeneral.\nThen, we calculated for each student their intra-individual strengths by subtracting zGeneral as follows: relativeSciencestrength = zScience - zGeneral, relativeMathstrength = zMath - zGeneral, relativeReadingstrength = zReading - zGeneral.\nFinally, using these new intra-individual (relative) scores, we calculated for each country the averages for boys and girls and subtracted those to calculate the gender gaps in relative academic strengths\n\n\nproduces the following code:\n\ncode# standardise the results for each student in line with pg7\n# https://eprints.leedsbeckett.ac.uk/id/eprint/4753/6/symplectic-version.pdf\n\nlibrary(tidyverse)\nlibrary(arrow)\nlibrary(ggrepel)\n\n# step 1\nPISA_2015z &lt;- PISA_2015_GGGI %&gt;% \n  rename(gender = ST004D01T) %&gt;%\n  group_by(CNT) %&gt;%\n  mutate(zMaths   = scale(PV1MATH),\n         zScience = scale(PV1SCIE), \n         zReading = scale(PV1READ))\n\n# step 2\nPISA_2015z &lt;- PISA_2015z %&gt;% \n  mutate(zGeneral = (zMaths + zScience + zReading) / 3)\n\n# step 3\nPISA_2015z &lt;- PISA_2015z %&gt;% \n  mutate(rel_MATH = zMaths   - zGeneral,\n         rel_SCIE = zScience - zGeneral,\n         rel_READ = zReading - zGeneral)\n\n# step 4 part 1\nPISA_2015z &lt;- PISA_2015z %&gt;% \n  group_by(CNT, gender) %&gt;%\n  summarise(zMaths = mean(zMaths, na.rm=TRUE),\n            zScience = mean(zScience, na.rm=TRUE),\n            zReading = mean(zReading, na.rm=TRUE),\n            zGeneral = mean(zGeneral, na.rm=TRUE),\n            rel_MATH = zMaths - zGeneral,\n            rel_SCIE = zScience - zGeneral,\n            rel_READ = zReading - zGeneral,\n            gggi = unique(Overall.Score))\n\n# step 4 part 2\npisa_gggi_diff &lt;- PISA_2015z %&gt;%\n  select(CNT, gender, gggi, rel_SCIE) %&gt;%\n  pivot_wider(names_from = gender,\n              values_from = rel_SCIE) %&gt;%\n  mutate(difference =  Male - Female)\n\n\nFinally we will plot the results:\n\ngraph codelibrary(ggrepel)\n\nggplot(pisa_gggi_diff,\n       aes(x=difference, y=gggi)) + \n  geom_point(colour=\"red\") +\n  geom_smooth(method=\"lm\") +\n  geom_text_repel(aes(label=CNT),\n            box.padding = 0.2,\n            max.overlaps = Inf,\n            colour=\"black\") +\n  xlab(paste0(\"relative difference in PV1SCIE scores (male-female)\"))\n\n\n\n\nThe graph is pretty good recreation of what the paper presented, with the general shape the same; differences in grades for each country might be explained by the original paper using 5 plausible values rather than just PV1SCIE, as we have used (Stoet and Geary 2020). Does the statistical model stand up to scrutiny? To find out we will use correlation. Stoet and Geary used Spearman’s rho, signified by the s in rs:\n\nThe most important and novel finding here is that the sex difference in intraindividual strength in science was higher and more favorable to boys in more gender-equal countries, rs = .42, 95% CI = [.19,.61], p &lt; .001, n = 62 (Fig. 3a)\n\nWe can run our version of this model using the following:\n\nresult &lt;- cor.test(pisa_gggi_diff$gggi, \n                    pisa_gggi_diff$difference, \n                    method=\"spearman\")\nresult\n\n\n    Spearman's rank correlation rho\n\ndata:  pisa_gggi_diff$gggi and pisa_gggi_diff$difference\nS = 24384, p-value = 0.02763\nalternative hypothesis: true rho is not equal to 0\nsample estimates:\n      rho \n0.2874342 \n\n\nOur model doesn’t show such a strong correlation. In fact, our model shows a “weak positive” relationship of just 0.287, albeit a significant one (p&lt;0.05).\nFor our version of this model it seems unnecessary to use Spearman’s rho, the number of countries we are comparing with valid data is 59 (pisa_gggi_diff %&gt;% na.omit() %&gt;% nrow()), which is greater than 30 and using the central limit theorem we should be able to use Pearson’s r. Additionally,shapiro.teston both difference andgggi give non-significant results, suggesting Pearson is the better test to use here:\n\nshapiro.test(pisa_gggi_diff$gggi) \n#&gt; p-value = 0.1226\nshapiro.test(pisa_gggi_diff$difference)\n#&gt; p-value = 0.4078\n\nIf we run the model again using Pearson’s r, we get:\n\nresult &lt;- cor.test(pisa_gggi_diff$gggi, \n                    pisa_gggi_diff$difference, \n                    method=\"pearson\")\nresult\n\n\n    Pearson's product-moment correlation\n\ndata:  pisa_gggi_diff$gggi and pisa_gggi_diff$difference\nt = 3.9972, df = 57, p-value = 0.0001863\nalternative hypothesis: true correlation is not equal to 0\n95 percent confidence interval:\n 0.2406661 0.6465242\nsample estimates:\n      cor \n0.4679109 \n\n\nA result much closer to the one published. The differences here might be the result of the different GGGI data set we used or a difference in the way we calculated difference, or something to do with the correlation model used. It would be good to know!\nWe can also explore this data using regression and a linear model looking at the relationship between difference in grades and the gggi value for each country:\n\nmdl &lt;- lm(difference ~ gggi, data = pisa_gggi_diff)\nsummary(mdl)\n\n\nCall:\nlm(formula = difference ~ gggi, data = pisa_gggi_diff)\n\nResiduals:\n      Min        1Q    Median        3Q       Max \n-0.067343 -0.018964 -0.003605  0.023548  0.083991 \n\nCoefficients:\n            Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept) -0.12926    0.05317  -2.431 0.018228 *  \ngggi         0.29826    0.07462   3.997 0.000186 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 0.03247 on 57 degrees of freedom\n  (14 observations deleted due to missingness)\nMultiple R-squared:  0.2189,    Adjusted R-squared:  0.2052 \nF-statistic: 15.98 on 1 and 57 DF,  p-value: 0.0001863\n\n\nThis model also finds a significant difference (p&lt;0.001) and an estimate for gggi of 0.298, i.e. for each increase of 1 in gggi, males will do 0.298 of a standard deviation better than females. The R2 is pretty decent too at 0.219 suggesting the finding that Stoet and Geary reported is a sound one."
  },
  {
    "objectID": "chapters/10-Correlation_and_regression.html#footnotes",
    "href": "chapters/10-Correlation_and_regression.html#footnotes",
    "title": "10 Correlation and regression",
    "section": "Footnotes",
    "text": "Footnotes\n\nhttps://www.statisticssolutions.com/the-linear-regression-analysis-in-spss/:↩︎"
  },
  {
    "objectID": "chapters/11-selecting_statistical_tools.html",
    "href": "chapters/11-selecting_statistical_tools.html",
    "title": "11 Selecting statistical tools",
    "section": "",
    "text": "We will continue to use the PISA_2018 dataset, make sure it is loaded.\n\n# Load PISA data\n\nlibrary(arrow)\nlibrary(tidyverse)\n\nPISA_2018 &lt;- read_parquet(r\"[&lt;folder&gt;PISA_2018_student_subset.parquet]\")"
  },
  {
    "objectID": "chapters/11-selecting_statistical_tools.html#pre-session-task---loading-the-data",
    "href": "chapters/11-selecting_statistical_tools.html#pre-session-task---loading-the-data",
    "title": "11 Selecting statistical tools",
    "section": "",
    "text": "We will continue to use the PISA_2018 dataset, make sure it is loaded.\n\n# Load PISA data\n\nlibrary(arrow)\nlibrary(tidyverse)\n\nPISA_2018 &lt;- read_parquet(r\"[&lt;folder&gt;PISA_2018_student_subset.parquet]\")"
  },
  {
    "objectID": "chapters/11-selecting_statistical_tools.html#task-1-plot-a-graph-of-mean-science-scores-by-country",
    "href": "chapters/11-selecting_statistical_tools.html#task-1-plot-a-graph-of-mean-science-scores-by-country",
    "title": "11 Selecting statistical tools",
    "section": "\n2.1 Task 1 Plot a graph of mean science scores by country",
    "text": "2.1 Task 1 Plot a graph of mean science scores by country\nImagine we wish to compare the mean scores of students on the science element of PISA by plotting a bar graph. First you need to use the sumarise function to calculate means by countries. Then use ggplot with geom_col to create the graph. Extension task: add error bars for the standard deviations of science scores.\n\nShow the code# Task 1: Plot a graph of mean science scores by country\n# Create a variable avgscience - for every country (Group_by(CNT)) calcuate the mean\n# science score (PV1SCIE) and ignore NA (na.rm=TRUE)\navgscience &lt;- PISA_2018 %&gt;% \n  group_by(CNT) %&gt;%\n  summarise(mean_sci = mean(PV1SCIE, na.rm=TRUE)) %&gt;%\n# Arrange in descending order  \n  arrange(desc(mean_sci))\n\n\n# Plot the data in avgscience, x=CNT (reorder to ascending order), mean science score on the y\n# Change the fill colour to red, rotate the text, locate the text and reduce the font size\nggplot(data = avgscience, \n       aes(x= reorder(CNT, -mean_sci), y=mean_sci)) +\ngeom_col(fill=\"red\") +\ntheme(axis.text.x = element_text(angle = 90, hjust=0.95, vjust=0.2, size=5))+\n  labs(x=\"Country\", y=\"Mean Science Score\")\n\n\n\nShow the code# Extension version: added summarise to find standard deviation \navgscience &lt;- PISA_2018 %&gt;% \n  group_by(CNT) %&gt;%\n  summarise(mean_sci = mean(PV1SCIE, na.rm=TRUE),\n            sd_sci=sd(PV1SCIE, na.rm=TRUE)) %&gt;%\n  arrange(desc(mean_sci))\n\n# Extension version: geom_errorbar added with aes y=mean_sci (the centre of the bar) and then the maximum and minimum set to the mean plus or minus the standard deviation (ymin=mean_sci-sd_sci, ymax=mean_sci+sd_sci) \nggplot(data = avgscience, \n       aes(x= reorder(CNT, -mean_sci), y=mean_sci)) +\ngeom_col(fill=\"red\") +\ntheme(axis.text.x = element_text(angle = 90, hjust=0.95, vjust=0.2, size=5))+\n  labs(x=\"Country\", y=\"Mean Science Score\")+\n  geom_errorbar(aes(y=mean_sci, ymin=mean_sci-sd_sci, \n                    ymax=mean_sci+sd_sci), \n                width=0.5, colour='black', size=0.5)"
  },
  {
    "objectID": "chapters/11-selecting_statistical_tools.html#task-2-are-there-differences-in-science-scores-by-gender-for-the-total-data-set",
    "href": "chapters/11-selecting_statistical_tools.html#task-2-are-there-differences-in-science-scores-by-gender-for-the-total-data-set",
    "title": "11 Selecting statistical tools",
    "section": "\n2.2 Task 2 Are there differences in science scores by gender for the total data set?",
    "text": "2.2 Task 2 Are there differences in science scores by gender for the total data set?\nConsider the kinds of variables that represent the science score. What is an appropriate test to determine differences in the means between the two groups? Create two vectors, for boys and girls, that you can feed into the t.test function.\n\nShow the code# Task 2: Are there differences in Science scores by gender for the total data set? (No)\n# A comparision of means of two continuous variables, use a t-test.\n# Choose the  gender (ST004D01T) and science score columns (PV1SCIE) from  2018 data, filter for males \n# Put that data into MaleSci\nMaleSci &lt;- PISA_2018 %&gt;% \n  select(ST004D01T, PV1SCIE) %&gt;% \n  filter(ST004D01T == \"Male\")\n\n# Choose the  gender (ST004D01T) and science score columns (PV1SCIE) from  2018 data, filter for females \n# Put that data into FemaleSci\nFemaleSci &lt;- PISA_2018 %&gt;% \n  select(CNT, ST004D01T, PV1SCIE) %&gt;% \n  filter(ST004D01T == \"Female\")\n\n#Do a t-test comparing MaleSci and FemaleSci\nt.test(MaleSci$PV1SCIE, FemaleSci$PV1SCIE)\n\n\n    Welch Two Sample t-test\n\ndata:  MaleSci$PV1SCIE and FemaleSci$PV1SCIE\nt = -16.184, df = 604181, p-value &lt; 2.2e-16\nalternative hypothesis: true difference in means is not equal to 0\n95 percent confidence interval:\n -4.781097 -3.748183\nsample estimates:\nmean of x mean of y \n 458.5701  462.8347"
  },
  {
    "objectID": "chapters/11-selecting_statistical_tools.html#task-3-are-there-differences-in-science-scores-by-gender-for-uk-students",
    "href": "chapters/11-selecting_statistical_tools.html#task-3-are-there-differences-in-science-scores-by-gender-for-uk-students",
    "title": "11 Selecting statistical tools",
    "section": "\n2.3 Task 3 Are there differences in science scores by gender for UK students?",
    "text": "2.3 Task 3 Are there differences in science scores by gender for UK students?\nAs above, but include a filter by country.\n\nShow the code# Task 3: Are there differences in Science scores by gender for UK students? (No)\n# A comparision of means of two continuous variables, use a t-test.\n# Choose the country (CNT), gender (ST004D01T) and science score columns (PV1SCIE) from  2018 data, filter for males and the UK\n# Put that data into UKMaleSci\nUKMaleSci &lt;- PISA_2018 %&gt;% \n  select(CNT, ST004D01T, PV1SCIE) %&gt;% \n  filter(ST004D01T == \"Male\")  %&gt;% \n  filter(CNT==\"United Kingdom\")\n\n# Choose the country (CNT), gender (ST004D01T) and science score columns (PV1SCIE) from  2018 data, filter for females and the UK\n# Put that data into UKFemaleSci\nUKFemaleSci &lt;- PISA_2018 %&gt;% \n  select(CNT, ST004D01T, PV1SCIE) %&gt;% \n  filter(ST004D01T == \"Female\") %&gt;% \n  filter(CNT==\"United Kingdom\")\n\n# Do a t-test comparing UKMaleSci and UKFemaleSci\nt.test(UKMaleSci$PV1SCIE, UKFemaleSci$PV1SCIE)\n\n\n    Welch Two Sample t-test\n\ndata:  UKMaleSci$PV1SCIE and UKFemaleSci$PV1SCIE\nt = -1.5274, df = 13662, p-value = 0.1267\nalternative hypothesis: true difference in means is not equal to 0\n95 percent confidence interval:\n -5.6282103  0.6983756\nsample estimates:\nmean of x mean of y \n 493.9977  496.4626"
  },
  {
    "objectID": "chapters/11-selecting_statistical_tools.html#task-4-for-the-whole-data-set-is-there-a-correlation-between-students-science-score-and-reading-scores",
    "href": "chapters/11-selecting_statistical_tools.html#task-4-for-the-whole-data-set-is-there-a-correlation-between-students-science-score-and-reading-scores",
    "title": "11 Selecting statistical tools",
    "section": "\n2.4 Task 4 For the whole data set, is there a correlation between students’ science score and reading scores?",
    "text": "2.4 Task 4 For the whole data set, is there a correlation between students’ science score and reading scores?\nReflect on the appropriate test to show correlation between two scores. This test can be carried out quite simply using a couple of lines of code. Extensions: a) perform the same analysis, but consider the impact of gender; b) Find the correlations between reading and science core by country, and rank from most highly correlated to least.\n\nShow the code# Task 4: For the whole data set, is there a correlation between students’ science score reading score? (Yes, significant 0.77)\n\n# Do the regression test between science score (PV1SCIE) and reading score (PV1READ) on the PISA_2018 data\nlmSciRead &lt;- lm(PV1SCIE ~ PV1READ, data=PISA_2018)\nsummary(lmSciRead)\n\n\nCall:\nlm(formula = PV1SCIE ~ PV1READ, data = PISA_2018)\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-269.417  -32.284   -0.294   32.091  266.034 \n\nCoefficients:\n             Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept) 7.904e+01  2.710e-01   291.7   &lt;2e-16 ***\nPV1READ     8.367e-01  5.781e-04  1447.5   &lt;2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 48.65 on 606625 degrees of freedom\n  (5377 observations deleted due to missingness)\nMultiple R-squared:  0.7755,    Adjusted R-squared:  0.7755 \nF-statistic: 2.095e+06 on 1 and 606625 DF,  p-value: &lt; 2.2e-16\n\nShow the code# Extension 1: Add Gender:\n# lmSciRead &lt;- lm(PV1SCIE ~ PV1READ + ST004D01T, data=PISA_2018)\n# summary(lmSciRead)\n\n# Extentions 2: Rank by correlation\n# CNTPISA&lt;-PISA_2018%&gt;%\n#  select(CNT, PV1SCIE, PV1READ)%&gt;%\n#  group_by(CNT)%&gt;%\n#  summarise(MeanSci=mean(PV1SCIE),\n#            MeanRead=mean(PV1READ),\n#            Cor=cor(PV1SCIE,PV1READ)) %&gt;%\n#  arrange(desc(Cor))"
  },
  {
    "objectID": "chapters/11-selecting_statistical_tools.html#task-5-plot-a-representation-of-uk-students-science-score-against-reading-score-with-a-linear-best-fit-line.",
    "href": "chapters/11-selecting_statistical_tools.html#task-5-plot-a-representation-of-uk-students-science-score-against-reading-score-with-a-linear-best-fit-line.",
    "title": "11 Selecting statistical tools",
    "section": "\n2.5 Task 5 Plot a representation of UK students’ science score against reading score, with a linear best fit line.",
    "text": "2.5 Task 5 Plot a representation of UK students’ science score against reading score, with a linear best fit line.\nIt will help here to create a data.frame that contains a filtered version of the whole dataset you can pass to ggplot.\n\nShow the code# Task 5: Plot a representation of UK students’ science score against reading score.\n \n# Choose the three variables of interest, science score (PV1SCIE), reading score (PV1READ) and country (CNT)\n# and filter for the UK. Put the values into regplotdata\nregplotdata&lt;- PISA_2018 %&gt;% \n  select(PV1SCIE, PV1READ, CNT) %&gt;% \n  filter(CNT==\"United Kingdom\")\n\n# Plot the data in regplotdata, set the science score on the x-xis and reading on y-axis, set the size, colour and alpha (transparency)\n# of points and add a linear ('lm') black line\n  ggplot(data = regplotdata, \n         aes(x=PV1SCIE, y=PV1READ)) +\n    geom_point(size=0.5, colour=\"red\", alpha=0.3) + \n    geom_smooth(method = \"lm\", colour=\"black\")+\n    labs(x=\"Science Score\", y=\"Reading score\")"
  },
  {
    "objectID": "chapters/11-selecting_statistical_tools.html#task-6-do-girls-and-boys-in-the-uk-engage-in-different-levels-of-environmental-activism",
    "href": "chapters/11-selecting_statistical_tools.html#task-6-do-girls-and-boys-in-the-uk-engage-in-different-levels-of-environmental-activism",
    "title": "11 Selecting statistical tools",
    "section": "\n2.6 Task 6 Do girls and boys in the UK engage in different levels of environmental activism?",
    "text": "2.6 Task 6 Do girls and boys in the UK engage in different levels of environmental activism?\nThe PISA 2018 data set includes the variable ST222Q09H (I participate in activities in favour of environmental protection). Determine if the data for girls and boys are homogenous (i.e. if the null hypothesis that girls and boys engage in the same levels of activism is true).\n\nShow the code# Task 6: Is there a relationship between UK boys' and girls' levels of enviromnental activism.\n  \nchi_data &lt;- PISA_2018 %&gt;%\n  select(CNT, ST004D01T, ST222Q09HA) %&gt;% \n  filter(CNT==\"United Kingdom\")  %&gt;% \n  na.omit()\n# We wish to compare two categorical variables, gender (Male/Female) and engagement in enviromental activism (Yes/No)\n# Create a frequency table\nActivismtable &lt;- chi_data %&gt;%\n    group_by(ST004D01T, ST222Q09HA)%&gt;%\n    count()\n# Pivot the table to create a contingency table\nActivismtable &lt;- pivot_wider(Activismtable, names_from = ST222Q09HA, values_from = n)\n\n# Drop the first column for passing to chisq.test\nActivismtable &lt;- subset(Activismtable, select=c(\"Yes\",\"No\"))\n  \n# Perform the chisq.test on the data\n\nchisq.test(Activismtable)\n\n\n    Pearson's Chi-squared test with Yates' continuity correction\n\ndata:  Activismtable\nX-squared = 0.07963, df = 1, p-value = 0.7778\n\nShow the code# p-value= 0.7778 - accept the null hypothesis - boys and girls have similar levels of activism"
  },
  {
    "objectID": "chapters/11-selecting_statistical_tools.html#task-7-does-participation-in-environmental-activism-explain-variation-in-science-score-for-uk-students",
    "href": "chapters/11-selecting_statistical_tools.html#task-7-does-participation-in-environmental-activism-explain-variation-in-science-score-for-uk-students",
    "title": "11 Selecting statistical tools",
    "section": "\n2.7 Task 7 Does participation in environmental activism explain variation in science score for UK students?",
    "text": "2.7 Task 7 Does participation in environmental activism explain variation in science score for UK students?\nArguments have been made the students who know more science, might engage in more environmental activism. Determine what percentage of variation in UK science scores is explained by a) the variable ST222Q09HA (I participate in activities in favour of environmental protection); b) ST222Q04HA (I sign environmental petitions online); and c) ST222Q03HA (I choose certain products for ethical or environmental reasons).\n\nShow the code# Task 7: How much varibaility in science score is explained by participation in activism?\n# Explanation of variation is performed by carrying out an anova test\n\nUK_data &lt;- PISA_2018 %&gt;%\n  select(CNT, PV1SCIE, ST222Q09HA, ST222Q04HA, ST222Q03HA) %&gt;%\n  filter(CNT==\"United Kingdom\")  %&gt;% \n  na.omit()\n\n# Perform the anova test\nresaov &lt;- aov(data=UK_data, \n              PV1SCIE ~ST222Q09HA + ST222Q04HA + ST222Q03HA)\nsummary(resaov)\n\n              Df   Sum Sq Mean Sq F value  Pr(&gt;F)   \nST222Q09HA     1    58181   58181   6.984 0.00827 **\nST222Q04HA     1    14619   14619   1.755 0.18540   \nST222Q03HA     1     4618    4618   0.554 0.45662   \nResiduals   2606 21710370    8331                   \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nShow the code#&gt; Significant differences exist for ST222Q09HA (I participate in activities in favour of environmental protection) (Pr(&gt;F)=0.00827) but not ST222Q04HA (signing petitions) (p=0.18540) or choosing products for ethical/environmental reasons (p=0.45662)\n\n# Determine the % of variation explained\nlibrary(lsr)\neta &lt;- etaSquared(resaov)\neta &lt;- 100*eta\neta\n\n               eta.sq eta.sq.part\nST222Q09HA 0.11363973  0.11391504\nST222Q04HA 0.05024603  0.05039979\nST222Q03HA 0.02119558  0.02126664\n\nShow the code#&gt; Participation in environmental activism only explains 0.11% of variation in science scores"
  },
  {
    "objectID": "chapters/12-value_of_quant.html",
    "href": "chapters/12-value_of_quant.html",
    "title": "12 The value of quantitative methods",
    "section": "",
    "text": "In this seminar we will reflect on advantages and disadvantages of using quantitative methods education research."
  },
  {
    "objectID": "chapters/12-value_of_quant.html#task-1---the-education-endowment-fund",
    "href": "chapters/12-value_of_quant.html#task-1---the-education-endowment-fund",
    "title": "12 The value of quantitative methods",
    "section": "2.1 Task 1 - The Education Endowment Fund",
    "text": "2.1 Task 1 - The Education Endowment Fund\nBased on your reading of the summary of the EEF report, page 4: - To what extent is the EEF project useful research for teachers? - Should interventions that receive low ratings, for example the work experience programme of the form evaluated, be rejected? - Should all practices in schools undergo testing of this form? - Given the low effect size of many educational interventions are randomised control trials a helpful approach for providing policy recommendations?"
  },
  {
    "objectID": "chapters/12-value_of_quant.html#task-2---useful-quantification-visible-learning",
    "href": "chapters/12-value_of_quant.html#task-2---useful-quantification-visible-learning",
    "title": "12 The value of quantitative methods",
    "section": "2.2 Task 2 - Useful quantification? Visible Learning",
    "text": "2.2 Task 2 - Useful quantification? Visible Learning\nLook at the representations of effect sizes developed by Hattie:\n\n\n\nConsider this discussion of how Hattie developed these tables: Effect Size\nIs effect size a useful value for teachers to consider when deciding what approaches to adopt?\nAre meta-analyses of different classroom interventions practically useful? Can they guide practice in a meaningful manner? What questions might be asked about a meta-analysis before adopting its findings?\nWhat artefacts (findings that don’t reflect the underlying situation) might arise from meta-analyses that combine the results of different studies?\nCan interventions be ranked in a way that is meaningful for schools and teachers?"
  },
  {
    "objectID": "chapters/12-value_of_quant.html#task-3-the-value-of-quantitative-educational-research",
    "href": "chapters/12-value_of_quant.html#task-3-the-value-of-quantitative-educational-research",
    "title": "12 The value of quantitative methods",
    "section": "2.3 Task 3 The value of quantitative educational research",
    "text": "2.3 Task 3 The value of quantitative educational research\n\nFrom the analyses that we have carried out on the course, report any findings that you think are of value for teaching in your discipline\nWhat barriers currently exist to the development of quantitative research that is useful to STEM teachers?\nGiven the issues with EEF, what might policy makers do to support the meaningful development and use of quantitative education research?\nIs a dichotomy (e.g. a separation in the value and the researchers who conduct the work) between qualitative and quantitative work useful?"
  },
  {
    "objectID": "chapters/A1-PISA_analysis.html",
    "href": "chapters/A1-PISA_analysis.html",
    "title": "PISA",
    "section": "",
    "text": "The Programme for International Student Assessment (PISA) is an OECD initiative that looks at the reading, mathematics and science abilities of students aged 15 years old. Data is collected from ~38 OECD countries and other partner countries every three years.\n\n\nDataset\nDescription\n03\n06\n09\n12\n15\n18\n\n\n\nStudent\ndemographic data on student participants\nx\nx\nx\nx\nx\nx\n\n\nSchool\ndescriptive data about schools\nx\nx\nx\nx\nx\nx\n\n\nParent\na survey for student’s parents including information about home environments and parental education\nx\nx\n\n\n\n\n\n\nTeacher\ndemographic, teaching, qualification and training data\n\n\n\nx\nx\nx\n\n\nCognitive\n\nx\nx\nx\nx\nx\nx\n\n\n\nPISA datasets above can be found on the OECD website. The links in the table above will allow you to download .rds versions of these files which we have created, though they might need additional editing, e.g. reducing the number of columns or changing the types of each column. If you want to find out more about what each field stores, take a look at the corresponding codebook, 2018, 2015."
  },
  {
    "objectID": "chapters/A1-PISA_analysis.html#sec-PV",
    "href": "chapters/A1-PISA_analysis.html#sec-PV",
    "title": "PISA",
    "section": "\n4.1 What are Plausible Values?",
    "text": "4.1 What are Plausible Values?\nIn the PISA dataset, the outcomes of student tests are reported as plausible values, for example, in the variables of the science test (PV1SCIE, PV2SCIE, PV3SCIE, PV3SCIE, and PV5SCIE). It might seem counter intuitive that there are five values for a score on a test.\nPlausible values (PVs) are a way of expressing the error in a measurement. The number of questions in the full PISA survey is very large, so students are randomly allocated to take a subset of questions (and even then, the test still takes two hours!). As no student completes the full set of questions (only 40% of students even answer questions in reading, science and mathematics (OECD2014technical?)), estimating how a student would have performed on the full question set involves some error. Plausible values are a way of expressing the uncertainty in the estimation of student scores.\nOne way of thinking of the PV scores is that they represent five different estimates of students’ abilities based on the questions they have answered. To decrease measurement error, five different approaches are applied to create five different estimates, the PV scores.\nThe PISA Data Analysis Manual suggests:\n\nPopulation statistics should be estimated using each plausible value separately. The reported population statistic is then the average of each plausible value statistic. For instance, if one is interested in the correlation coefficient between the social index and the reading performance in PISA, then five correlation coefficients should be computed and then averaged\nPlausible values should never be averaged at the student level, i.e. by computing in the dataset the mean of the five plausible values at the student level and then computing the statistic of interest once using that average PV value. Doing so would be equivalent to an EAP estimate, with a bias as described in the previous section.\n(monseur2009pisa?)"
  },
  {
    "objectID": "chapters/A1-PISA_analysis.html#why-are-some-countries-oecd-countries-and-others-arent",
    "href": "chapters/A1-PISA_analysis.html#why-are-some-countries-oecd-countries-and-others-arent",
    "title": "PISA",
    "section": "\n4.2 Why are some countries OECD countries and others aren’t?",
    "text": "4.2 Why are some countries OECD countries and others aren’t?\nThe Organisation for Economic Co-operation and Development (OECD) has 38 member states. PISA is run by the OECD and its member states normally take part in each PISA cycle, but other countries are allowed to take part as Partners. You can find more details on participation here.\nResults for OECD members are generally higher than for Partner countries:\n\nPISA_2018 %&gt;% \n  group_by(OECD) %&gt;% \n  summarise(country_n = length(unique(CNT)),\n            math_mean = mean(PV1MATH, na.rm=TRUE),\n            math_sd = sd(PV1MATH, na.rm=TRUE),\n            students_n = n())\n\n# A tibble: 2 × 5\n  OECD  country_n math_mean math_sd students_n\n  &lt;fct&gt;     &lt;int&gt;     &lt;dbl&gt;   &lt;dbl&gt;      &lt;int&gt;\n1 No           43      434.   106.      317477\n2 Yes          37      490.    93.8     294527"
  },
  {
    "objectID": "chapters/A1-PISA_analysis.html#why-are-the-pv-grades-pivoting-around-the-500-mark",
    "href": "chapters/A1-PISA_analysis.html#why-are-the-pv-grades-pivoting-around-the-500-mark",
    "title": "PISA",
    "section": "\n4.3 Why are the PV grades pivoting around the ~500 mark?",
    "text": "4.3 Why are the PV grades pivoting around the ~500 mark?\nThe scores for students in mathematics, reading and science are scaled so that the mean of students in OECD countries is roughly 500 points with a standard deviation of 100 points. To see this, run the following code:\n\nPISA_2018 %&gt;% \n  filter(OECD==\"Yes\") %&gt;% \n  summarise(math_mean = mean(PV1MATH, na.rm=TRUE),\n            math_sd = sd(PV1MATH, na.rm=TRUE),\n            scie_mean = mean(PV1SCIE, na.rm=TRUE),\n            scie_sd = sd(PV1SCIE, na.rm=TRUE),\n            read_mean = mean(PV1READ, na.rm=TRUE),\n            read_sd = sd(PV1READ, na.rm=TRUE))\n\n# A tibble: 1 × 6\n  math_mean math_sd scie_mean scie_sd read_mean read_sd\n      &lt;dbl&gt;   &lt;dbl&gt;     &lt;dbl&gt;   &lt;dbl&gt;     &lt;dbl&gt;   &lt;dbl&gt;\n1      490.    93.8      490.    96.0      488.    101.\n\n\nShouldn’t the mean PV score be 500?\nThe OECD’s initial plan (in the 2000 study) was that the mean PC score for OECD countries should be 500 and the standard deviation 100 (OECD 2019). However, after the 2000 study, scores were scaled to be comparable with the first cycle of data, resulting in means differing from 500 (Pulkkinen and Rautopuro 2022). For example, by 2015, the mean for science had fallen to 493 in science and reading, and 490 in mathematics."
  },
  {
    "objectID": "chapters/A1-PISA_analysis.html#why-are-the-letters-ta-and-na-used-in-some-field-names",
    "href": "chapters/A1-PISA_analysis.html#why-are-the-letters-ta-and-na-used-in-some-field-names",
    "title": "PISA",
    "section": "\n4.4 Why are the letters TA and NA used in some field names?",
    "text": "4.4 Why are the letters TA and NA used in some field names?"
  },
  {
    "objectID": "chapters/A1-PISA_analysis.html#how-do-i-find-fields-that-are-numeric",
    "href": "chapters/A1-PISA_analysis.html#how-do-i-find-fields-that-are-numeric",
    "title": "PISA",
    "section": "\n4.5 How do I find fields that are numeric?",
    "text": "4.5 How do I find fields that are numeric?\n\n# using the following code!\n\nnms &lt;- PISA_2018_school %&gt;% select(where(is.numeric)) %&gt;% names()\nlbls &lt;- map_dfr(nms,\\(nme){\n  message(nme)\n  lbl &lt;- attr(PISA_2018_school[[nme]], \"label\")\n  row &lt;- c(nme, lbl)\n  names(row) &lt;- c(\"name\", \"label\")\n  return(row)\n})"
  },
  {
    "objectID": "chapters/A1-PISA_analysis.html#how-are-students-selected-to-take-part-in-pisa",
    "href": "chapters/A1-PISA_analysis.html#how-are-students-selected-to-take-part-in-pisa",
    "title": "PISA",
    "section": "\n4.6 How are students selected to take part in PISA?",
    "text": "4.6 How are students selected to take part in PISA?\nThe students who take part in the PISA study are aged between 15 years and 3 (completed) months and 16 years and 2 (completed) months at the beginning of the testing period (OECD 2018). A number of classes of students are excluded from data collection:\n\nStudents classed as ‘functionally disabled’ so that they cannot participate in the test.\nJudged by teachers to have cognitive, emotional or behavioural difficulties that mean they cannot participate.\nThe student lacks language abilities to take the test in the assessment language.\nThere are no test material available in the student’s language\nAnother agreed reason\n\nThe OECD expect that 85% of schools in their original sample participate - nonparticipating schools can be replaced with a substitute, ‘replacement’ school. A minimum weighted response rate of 80% is required within schools.\nThe sampling strategy for PISA is a stratified two-stage sample design. That is schools are sampled to represent proportional distribution by size (referring to the number of enrolled 15-year-olds) sampling. Within schools, students are sampled with equal probability.\nStudents are selected by … (ref?)\nAdd Christian Bokhove papers https://bokhove.net/r-materials/\nFrom the data, you can see that 50% of schools entered fewer than 30 students into PISA.\n\nPISA_2018 %&gt;% \n  group_by(CNTSCHID) %&gt;%\n  summarise(size = n()) %&gt;%\n  mutate(quartile = ntile(size, 4)) %&gt;%\n  group_by(quartile) %&gt;%\n  summarise(Qmax = max(size),\n            Qmedian = median(size),\n            Qmean = mean(size))\n\n# A tibble: 4 × 4\n  quartile  Qmax Qmedian Qmean\n     &lt;int&gt; &lt;int&gt;   &lt;dbl&gt; &lt;dbl&gt;\n1        1    19       9  9.53\n2        2    29      25 24.6 \n3        3    35      33 32.8 \n4        4   491      40 44.9 \n\nggplot(PISA_2018 %&gt;% \n  group_by(CNTSCHID) %&gt;%\n  summarise(size = n()), aes(x=size)) +\n  geom_density()"
  },
  {
    "objectID": "chapters/A1-PISA_analysis.html#what-are-the-pisa-test-questions-like",
    "href": "chapters/A1-PISA_analysis.html#what-are-the-pisa-test-questions-like",
    "title": "PISA",
    "section": "\n4.7 What are the PISA test questions like?",
    "text": "4.7 What are the PISA test questions like?\nYou can view sample PISA science, reading and mathematics questions here."
  },
  {
    "objectID": "chapters/A1-PISA_analysis.html#what-are-the-pisa-domains",
    "href": "chapters/A1-PISA_analysis.html#what-are-the-pisa-domains",
    "title": "PISA",
    "section": "\n4.8 What are the PISA domains?",
    "text": "4.8 What are the PISA domains?\nEvery PISA test has included test items measuring literacy, numeracy and science. In each cycle, one of three areas is the focus of study (the major domain). In addition, extra domains have been added to cycles (for example, creative thinking and collaborative problem solving). The additional domains are shown in the table below.\n\n\n\n\n\n\n\nYear\nMajor Domain\nMinor Domains\n\n\n\n2000\nReading literacy\nMathematics, Science\n\n\n2003\nMathematics\nReading literacy, Science, Cross-curricular problem solving\n\n\n2006\nScience\nReading literacy, Mathematics\n\n\n2009\nReading literacy\nMathematics, Science\n\n\n2012\nMathematics\nReading literacy, Science, Creative problem solving\n\n\n2015\nScience\nMathematics, Reading literacy, Collaborative problem solving\n\n\n2018\nReading literacy\nMathematics, Science, Global Competence\n\n\n2022\nMathematics\nReading literacy, Science, Creative thinking\n\n\n2025\nScience\nMathematics, Reading literacy, Learning in the Digital World"
  },
  {
    "objectID": "chapters/A1-PISA_analysis.html#why-is-china-given-the-cnt-value-b-s-j-z-china-2018-or-b-s-j-g-china-2015",
    "href": "chapters/A1-PISA_analysis.html#why-is-china-given-the-cnt-value-b-s-j-z-china-2018-or-b-s-j-g-china-2015",
    "title": "PISA",
    "section": "\n4.9 Why is China given the CNT value B-S-J-Z (China) (2018) or B-S-J-G (China) (2015)?",
    "text": "4.9 Why is China given the CNT value B-S-J-Z (China) (2018) or B-S-J-G (China) (2015)?\nB-S-J-G/Z (China) is an acronym for Beijing, Shanghai, Jiangsu and Guangdong/Zhejiang, the four provinces/municipalities of the People’s Republic of China that take part in PISA data collection. Zhejiang took the place of Guangdong in the 2018 dataset. Several authors (including (Du and Wong 2019)) comment that sampling only from some of the most developed regions of China means the country’s data is unlikely to be nationally representative."
  },
  {
    "objectID": "chapters/A1-PISA_analysis.html#how-do-i-calculate-weighted-means-of-the-pv-scores",
    "href": "chapters/A1-PISA_analysis.html#how-do-i-calculate-weighted-means-of-the-pv-scores",
    "title": "PISA",
    "section": "\n4.10 How do I calculate weighted means of the PV scores?**",
    "text": "4.10 How do I calculate weighted means of the PV scores?**\nYou can use a function written by Miguel Diaz Kusztrick STL\nHere is his function for calculating weighted means and standard deviations:\n\nwght_meansd_pv &lt;- function(sdata, pv, weight, brr) {\n    mmeans  &lt;- c(0, 0, 0, 0)\n    names(mmeans) &lt;- c(\"MEAN\",\"SE-MEAN\",\"STDEV\",\"SE-STDEV\")\n    \n    mmeanspv &lt;- rep(0,length(pv))\n    stdspv   &lt;- rep(0,length(pv))\n    mmeansbr &lt;- rep(0,length(pv))\n    stdsbr   &lt;- rep(0,length(pv))\n    sum_weight &lt;- sum(sdata[,weight])\n    \n    for (i in 1:length(pv)) {\n        mmeanspv[i] &lt;- sum(sdata[,weight]*sdata[,pv[i]])/sum_weight\n        stdspv[i]   &lt;- sqrt((sum(sdata[,weight]*(sdata[,pv[i]]^2))/swght)-mmeanspv[i]^2)\n        for (j in 1:length(brr)) {\n            sbrr&lt;-sum(sdata[,brr[j]])\n            mbrrj&lt;-sum(sdata[,brr[j]]*sdata[,pv[i]])/sbrr\n            mmeansbr[i]&lt;-mmeansbr[i] + (mbrrj - mmeanspv[i])^2\n            stdsbr[i]&lt;-stdsbr[i] + (sqrt((sum(sdata[,brr[j]]*(sdata[,pv[i]]^2))/sbrr)-mbrrj^2) - stdspv[i])^2\n        }       \n    }\n    mmeans[1] &lt;- sum(mmeanspv) / length(pv)\n    mmeans[2] &lt;- sum((mmeansbr * 4) / length(brr)) / length(pv)\n    mmeans[3] &lt;- sum(stdspv) / length(pv)\n    mmeans[4] &lt;- sum((stdsbr * 4) / length(brr)) / length(pv)\n    ivar &lt;- c(0,0)\n    \n    for (i in 1:length(pv)) {\n        ivar[1] &lt;- ivar[1] + (mmeanspv[i] - mmeans[1])^2;\n        ivar[2] &lt;- ivar[2] + (stdspv[i] - mmeans[3])^2;\n    }\n    ivar = (1 + (1 / length(pv))) * (ivar / (length(pv) - 1));\n    mmeans[2] &lt;- sqrt(mmeans[2] + ivar[1]);\n    mmeans[4] &lt;- sqrt(mmeans[4] + ivar[2]);\n    return(mmeans);\n}\n\nWe can then apply it like this:\n\nPISA_2018_student &lt;- read_parquet(\"/Users/k1765032/Library/CloudStorage/GoogleDrive-richardandrewbrock@gmail.com/.shortcut-targets-by-id/1c3CkaEBOICzepArDfjQUP34W2BYhFjM4/PISR/Data/PISA/2018/PISA_2018_student.parquet\")\n\n# for example, for UK PISA 2018 data\nCOUNTRY &lt;- as.character(unique(PISA_2018_student$CNT))\n\nWghtmean &lt;- data.frame(length(COUNTRY),2)\n\nfor (i in 1:length(COUNTRY)){\n  Wghtmean[i,1] &lt;- COUNTRY[i]\n  Wghtmean[i,2] &lt;- wght_meansd_pv(PISA_2018_student[PISA_2018_student$CNT==COUNTRY[i]\n      ,],1047:1056,944,945:1024)['MEAN']\n  \n  \n}\n\n\nPISA2018weightedSCIE&lt;-Wghtmean%&gt;%\n  rename(MEANPVSCIE=X2,\n         CNT=\"length.COUNTRY.\")%&gt;%\n  arrange(desc(MEANPVSCIE))\n\n# cf the mean without weighting\nPISA2018SCIE&lt;-PISA_2018_student%&gt;%\n  select(PV1SCIE, PV2SCIE, PV3SCIE, PV4SCIE, PV5SCIE,\n         PV6SCIE, PV7SCIE, PV8SCIE, PV9SCIE, PV10SCIE,\n         CNT)%&gt;%\n  group_by(CNT)%&gt;%\n  summarise(PV1SCIE=mean(PV1SCIE),\n            PV2SCIE=mean(PV2SCIE),\n            PV3SCIE=mean(PV3SCIE),\n            PV3SCIE=mean(PV3SCIE),\n            PV4SCIE=mean(PV4SCIE),\n            PV5SCIE=mean(PV5SCIE),\n            PV6SCIE=mean(PV6SCIE),\n            PV7SCIE=mean(PV7SCIE),\n            PV8SCIE=mean(PV8SCIE),\n            PV9SCIE=mean(PV9SCIE),\n            PV10SCIE=mean(PV10SCIE))\n\n# NB na.RM added, because of lack of data for Vietnam\nPISA2018SCIE&lt;-PISA2018SCIE%&gt;%\n  group_by(CNT)%&gt;%\n  summarise(MEANPVSCIE=mean(PV1SCIE, PV2SCIE, PV3SCIE, PV4SCIE,   \n                                  PV5SCIE, PV6SCIE, PV7SCIE, PV8SCIE,\n                            PV9SCIE,  PV10SCIE, na.rm=TRUE))%&gt;%\n  select(CNT, MEANPVSCIE)%&gt;%\n  arrange(desc(MEANPVSCIE))\n# Interesting differences in ranking!\n\n\n##########################\n##########################\n###### tidyverse rewrite\n##########################\n##########################\n\nlibrary(conflicted)\nconflicts_prefer(dplyr::filter())\nconflicts_prefer(dplyr::select())\nconflicts_prefer(dplyr::match())\n\n# create an empty dataframe to store all the\n# country means\nmean_weights &lt;- data.frame()\ncountries &lt;- unique(PISA_2018_student$CNT)\n\nPISA_2018_weight_SCIE &lt;- map_dfr(countries, function(country){\n  message(\"calculating for: \", country)\n  \n  weighted_data &lt;- wght_meansd_pv(\n                      sdata = PISA_2018_student %&gt;% filter(CNT = country),\n                      pv = 1047:1056,\n                      weight = 944,\n                      brr = 945:1024)\n  return(c(country, weighted_data['MEAN']))\n  #return(c(\"CNT\"=country, \"MEANPVSCIE\"=weighted_data['MEAN']))\n}) %&gt;% \n  colnames(c(\"CNT\", \"MEANPVSCIE\")) %&gt;%\n  arrange(desc(MEANPVSCIE))\n\n# cf the mean without weighting\n# matches allows you to select columns using regex\n# summarise(across( allows you to specify particular columns, \n# then apply a function to those columns\n# rowwise calculates on rows\n# c_across allows you to collect values across a row\n# specified by the matches\nPISA_2018_weight_SCIE %&gt;%\n  select(matches(\"^CNT$|PV[0-9][0-9]?SCIE\")) %&gt;%\n  group_by(CNT) %&gt;%\n  summarise(across(matches(\"PV[0-9][0-9]?SCIE\"), \n                   mean)) %&gt;%\n  rowwise(CNT) %&gt;%\n  summarise(MEANPVSCIE = mean(\n                          c_across(\n                            matches(\"PV[0-9][0-9]?SCIE\")),\n                          na.rm=TRUE)) %&gt;%\n  arrange(desc(MEANPVSCIE))\n# NB na.RM added, because of lack of data for Vietnam\n\nNotice that using the weighted means leads to differences in the rankings, by comparison with using the un-weighted scores."
  },
  {
    "objectID": "chapters/A1-PISA_analysis.html#fields-to-drop",
    "href": "chapters/A1-PISA_analysis.html#fields-to-drop",
    "title": "PISA",
    "section": "\n6.1 fields to drop:",
    "text": "6.1 fields to drop:\nCNTRYID, NatCen"
  },
  {
    "objectID": "chapters/A2-DfE_analysis.html",
    "href": "chapters/A2-DfE_analysis.html",
    "title": "DfE England",
    "section": "",
    "text": "There are four main data sources that you can use to gain information about education in England:"
  },
  {
    "objectID": "chapters/A2-DfE_analysis.html#teachers",
    "href": "chapters/A2-DfE_analysis.html#teachers",
    "title": "DfE England",
    "section": "\n3.1 Teachers",
    "text": "3.1 Teachers"
  },
  {
    "objectID": "chapters/A2-DfE_analysis.html#vacancies",
    "href": "chapters/A2-DfE_analysis.html#vacancies",
    "title": "DfE England",
    "section": "\n3.2 Vacancies",
    "text": "3.2 Vacancies"
  },
  {
    "objectID": "chapters/A2-DfE_analysis.html#timetabling",
    "href": "chapters/A2-DfE_analysis.html#timetabling",
    "title": "DfE England",
    "section": "\n3.3 Timetabling",
    "text": "3.3 Timetabling"
  },
  {
    "objectID": "chapters/A3-TIMSS_analysis.html",
    "href": "chapters/A3-TIMSS_analysis.html",
    "title": "TIMSS",
    "section": "",
    "text": "1 What is TIMSS"
  },
  {
    "objectID": "chapters/A4-Other_datasets.html",
    "href": "chapters/A4-Other_datasets.html",
    "title": "Other datasets",
    "section": "",
    "text": "There exist thousands of datasets that you can freely analyse. This section covers a few of the major ones for education, or that might fruitfully be combined with educational datasets such as PISA."
  },
  {
    "objectID": "chapters/A4-Other_datasets.html#global-gender-gap-index-gggi",
    "href": "chapters/A4-Other_datasets.html#global-gender-gap-index-gggi",
    "title": "Other datasets",
    "section": "\n2.1 Global Gender Gap Index (GGGI)",
    "text": "2.1 Global Gender Gap Index (GGGI)\nThe world economic forum produces the Global Gender Gap Index (GGGI), this index combines female and male outcomes on Economic participation and opportunity, educational attainment, health and survival, and political empowerment.\nReports for: 2022, 2021, 2020,2018,2017,2016, 2015\nIt has proven difficult to find the 2015 dataset used by Stoet & Geary, the 2013 dataset is here"
  },
  {
    "objectID": "chapters/A4-Other_datasets.html#united-nations",
    "href": "chapters/A4-Other_datasets.html#united-nations",
    "title": "Other datasets",
    "section": "\n2.2 United Nations",
    "text": "2.2 United Nations\nThe UN reports on two gender specific indexes:\nGender Inequality Index (GII)\nThe Gender Inequality Index is a index incorporating data on reproductive health, empowerment and the labour market. Values range from 0 - full equality for men and women, to 0, full inequality.\nGender Development Index (GDI)\nThe Gender Development Index measures inequalities in human development, combining data on female and male life expectancy, years of schooling and earned income. Values of 1 indicate equality, with values of less than 1 showing males performing better, and values over 1 showing females doing better.\nDownloads for the GII and GDI are here"
  },
  {
    "objectID": "chapters/A5-Self_Study_Tasks.html",
    "href": "chapters/A5-Self_Study_Tasks.html",
    "title": "Appendix Self Study Tasks",
    "section": "",
    "text": "The pages below set out a series of graded challenges that you can use to test your R and statistical skills. Sample code that solves each problem is included so you can compare your solution with ours. Don’t worry if you solve something in a different way, there will be multiple solutions to the same task. The tasks are all set on the PISA_2018 data set: PISA_2018\nTo load the data, use the code below:"
  },
  {
    "objectID": "chapters/A5-Self_Study_Tasks.html#task-1-practice-creating-a-summary-table-1",
    "href": "chapters/A5-Self_Study_Tasks.html#task-1-practice-creating-a-summary-table-1",
    "title": "Appendix Self Study Tasks",
    "section": "\n0.1 Task 1 Practice creating a summary table #1",
    "text": "0.1 Task 1 Practice creating a summary table #1\n\nCreate a table that summarises the mean PISA science scores by country. You will need to use the group_by, summarise and mean functions.\n\nShow the codePISAsummary&lt;-PISA_2018%&gt;%  # Pipe the overall frame to a summary data.frame\n  select(CNT, PV1SCIE)%&gt;%  # Select the two required columns\n  group_by(CNT) %&gt;%        # Group the entries by country\n  summarise(meansci=mean(PV1SCIE)) # calculate means for each country\nprint(PISAsummary)\n\n# A tibble: 80 × 2\n   CNT                    meansci\n   &lt;fct&gt;                    &lt;dbl&gt;\n 1 Albania                   417.\n 2 United Arab Emirates      425.\n 3 Argentina                 418.\n 4 Australia                 502.\n 5 Austria                   493.\n 6 Belgium                   502.\n 7 Bulgaria                  426.\n 8 Bosnia and Herzegovina    398.\n 9 Belarus                   474.\n10 Brazil                    407.\n# ℹ 70 more rows\n\n\nExtension: use the signif function to give the responses to three significant figures"
  },
  {
    "objectID": "chapters/A5-Self_Study_Tasks.html#task-2-practice-creating-a-summary-table-including-percentages-2",
    "href": "chapters/A5-Self_Study_Tasks.html#task-2-practice-creating-a-summary-table-including-percentages-2",
    "title": "Appendix Self Study Tasks",
    "section": "\n0.2 Task 2 Practice creating a summary table (including percentages) #2",
    "text": "0.2 Task 2 Practice creating a summary table (including percentages) #2\n\nUse the table function to create a summary of numbers of types of school ISCEDO recorded in the data frame for the UK. Use the mutate function to turn these into percentages (you will need to calculate a total)\n\nShow the codeUKPISA&lt;-PISA_2018%&gt;%\n  select(CNT,ISCEDO)%&gt;%             # Select the country school type \n  filter(CNT==\"United Kingdom\")%&gt;%  # filter for the UK\n  select(ISCEDO)                    # Just select the school type \n                                    # I.e. remove the country\n\nUKPISA&lt;-table(UKPISA)               # Create a summary of counts\n                                    # To manipulate the table it is\nUKPISA&lt;-as.data.frame(UKPISA)       # easier to convert it to a \n                                    # a data.frame\n\nUKPISA&lt;-mutate(UKPISA, per=Freq/sum(Freq)*100)"
  },
  {
    "objectID": "chapters/A5-Self_Study_Tasks.html#task-3-practice-pivoting-a-table",
    "href": "chapters/A5-Self_Study_Tasks.html#task-3-practice-pivoting-a-table",
    "title": "Appendix Self Study Tasks",
    "section": "\n0.3 Task 3 Practice pivoting a table",
    "text": "0.3 Task 3 Practice pivoting a table\n\nConvert a table of UK Science, Maths and Reading scores, extracted from the main data set, into the long format R prefers. In the long format, each score becomes a single so each student will have three entries.\n\nShow the code# Create a data frame in wide format, with three columns for each student's scores (math, reading and science)\nUKScores&lt;-PISA_2018%&gt;%\n  select(CNT,PV1MATH, PV1READ, PV1SCIE)%&gt;%\n  filter(CNT==\"United Kingdom\")%&gt;%\n  select(PV1MATH, PV1READ, PV1SCIE)\n# Use pivot longer to turn the three columns into one. First, pass pivotlonger the dataframe to be converted, then the three columns\n# to convert into one, the name of the new longer column and the\n# name of the new scores column\n\nUKScores&lt;-pivot_longer(UKScores, cols=c('PV1MATH', 'PV1READ', 'PV1SCIE'),\n                       names_to = 'Subject', values_to = 'Score' )"
  },
  {
    "objectID": "chapters/A5-Self_Study_Tasks.html#task-4-graphing-practice-1-a-bar-chart",
    "href": "chapters/A5-Self_Study_Tasks.html#task-4-graphing-practice-1-a-bar-chart",
    "title": "Appendix Self Study Tasks",
    "section": "\n0.4 Task 4 Graphing Practice #1 A Bar Chart",
    "text": "0.4 Task 4 Graphing Practice #1 A Bar Chart\n\nDraw a bar chart of the mean mathematics scores for Germany, the UK, the US and China\n\nShow the codePlotdata&lt;-PISA_2018%&gt;%\n  select(CNT, PV1MATH)%&gt;%\n  filter(CNT==\"United Kingdom\"|CNT==\"United States\"|CNT==\"Germany\"|CNT==\"B-S-J-Z (China)\")%&gt;%\n  group_by(CNT)%&gt;%\n  summarise(mean=mean(PV1MATH))\n\nggplot(Plotdata,               # Pass the data to be plotted to ggplot\n       aes(x=CNT, y=mean))+    # set the x and y varibale\n  geom_col(fill=\"red\")         # plot a column graph and fill in red"
  },
  {
    "objectID": "chapters/A5-Self_Study_Tasks.html#task-5-graphing-practice-2-a-bar-chart-with-two-series",
    "href": "chapters/A5-Self_Study_Tasks.html#task-5-graphing-practice-2-a-bar-chart-with-two-series",
    "title": "Appendix Self Study Tasks",
    "section": "\n0.5 Task 5 Graphing Practice #2 A Bar Chart with two series",
    "text": "0.5 Task 5 Graphing Practice #2 A Bar Chart with two series\n\nDraw a bar chart of the mean mathematics scores for Germany, the UK, the US and China for boys and girls\n\nShow the codePlotdata&lt;-PISA_2018%&gt;%\n  select(CNT, PV1MATH, ST004D01T)%&gt;%\n  filter(CNT==\"United Kingdom\"|CNT==\"United States\"|CNT==\"Germany\"|CNT==\"B-S-J-Z (China)\")%&gt;%\n  group_by(CNT, ST004D01T)%&gt;%\n  summarise(mean=mean(PV1MATH))\n\nggplot(Plotdata,\n       aes(x=CNT, y=mean, fill=ST004D01T))+ # Setting the fill to the gender\n                                            # variable gives two series\n  geom_col(position = position_dodge())     # position_dodge here means the\n\n\n\nShow the code                                            # means the bars are plotted                                                # side by side"
  },
  {
    "objectID": "chapters/A5-Self_Study_Tasks.html#task-6-graphing-practice-3-a-scatter-plot",
    "href": "chapters/A5-Self_Study_Tasks.html#task-6-graphing-practice-3-a-scatter-plot",
    "title": "Appendix Self Study Tasks",
    "section": "\n0.6 Task 6 Graphing Practice #3 A scatter plot",
    "text": "0.6 Task 6 Graphing Practice #3 A scatter plot\n\nPlot a graph of science scores against mathematics scores for students in the UK\n\nShow the codePlotdata&lt;-PISA_2018%&gt;%              # Create a new dataframe to be plotted\n  select(CNT, PV1MATH, PV1SCIE)%&gt;%  # Choose the country, and scores vectors\n  filter(CNT==\"United Kingdom\")    # Filter for only Uk results\n\nggplot(Plotdata,                  # Pass the data to be plotted to ggplot\n       aes(x=PV1MATH, y=PV1SCIE))+ # Define the x and y varibale\n      geom_point(size=0.1, alpha=0.2, colour=\"red\")+ \n                                  # Use geom-point to create a scatter                                      # graph and set the size of the point \n                                    # alpha (i.e transparency)\n      labs(x=\"Math Score\", y=\"Science score\") # Add clearer labels"
  },
  {
    "objectID": "chapters/A5-Self_Study_Tasks.html#task-7-graphing-practice-4-a-scatter-plot-with-multiple-series",
    "href": "chapters/A5-Self_Study_Tasks.html#task-7-graphing-practice-4-a-scatter-plot-with-multiple-series",
    "title": "Appendix Self Study Tasks",
    "section": "\n0.7 Task 7 Graphing Practice #4 A scatter plot with multiple series",
    "text": "0.7 Task 7 Graphing Practice #4 A scatter plot with multiple series\n\nPlot a graph of science scores against mathematics scores for students in the UK, with data split into two series for boys and girls\n\nShow the codePlotdata&lt;-PISA_2018%&gt;%              # Create a new dataframe to be plotted\n  select(CNT, PV1MATH, PV1SCIE, ST004D01T)%&gt;%  \n  filter(CNT==\"United Kingdom\")    # Filter for only Uk results\n\nggplot(Plotdata,                  \n       aes(x=PV1MATH, y=PV1SCIE, colour=ST004D01T))+ \n      geom_point(size=0.1, alpha=0.2)+ \n                          # As above, but set colour by the gender varibale\n      labs(x=\"Math Score\", y=\"Science score\")"
  },
  {
    "objectID": "chapters/A5-Self_Study_Tasks.html#task-8-graphing-practice-4-a-scatter-plot-with-varying-size-points",
    "href": "chapters/A5-Self_Study_Tasks.html#task-8-graphing-practice-4-a-scatter-plot-with-varying-size-points",
    "title": "Appendix Self Study Tasks",
    "section": "\n0.8 Task 8 Graphing Practice #4 A scatter plot with varying size points",
    "text": "0.8 Task 8 Graphing Practice #4 A scatter plot with varying size points\n\nPlot a graph of mean science scores against mean mathematics scores for all the countries in the data set. Vary the point size by the number of students per country.\n\nShow the codePlotdata&lt;-PISA_2018%&gt;%\n  select(CNT, PV1MATH, PV1SCIE) %&gt;%\n  group_by(CNT) %&gt;%\n  summarise(meansci=mean(PV1SCIE), meanmath=mean(PV1MATH), total=n())\n  # Summarise finds mean scores by countries and n() is used to sum\n  # the number of students in each country\nggplot(Plotdata,\n       aes(x=meansci, y=meanmath, size=total, colour=\"red\"))+\n  # The size aesthetic is set to the total entries value computed\n  # for the data set\n  geom_point()+\n  labs(x=\"Mean science score\", y=\"Mean math score\")"
  },
  {
    "objectID": "chapters/A5-Self_Study_Tasks.html#task-9-graphing-practice-5-a-mosaic-plot",
    "href": "chapters/A5-Self_Study_Tasks.html#task-9-graphing-practice-5-a-mosaic-plot",
    "title": "Appendix Self Study Tasks",
    "section": "\n0.9 Task 9 Graphing Practice #5 A mosaic plot",
    "text": "0.9 Task 9 Graphing Practice #5 A mosaic plot\n\nPlot a mosaic plot of the number of students in general or vocational schools\n\nShow the codeGenderschool&lt;-PISA_2018%&gt;%\n  select(ST004D01T,ISCEDO)%&gt;%\n  filter(ST004D01T==\"Male\"|ST004D01T==\"Female\")%&gt;%\n  filter(ISCEDO==\"General\"|ISCEDO==\"Vocational\")%&gt;%\n  na.omit()\n\ninstall.packages(\"ggmosaic\")\nlibrary(ggmosaic)\nggplot(Genderschool)+\n  geom_mosaic(aes(x=product(ST004D01T,ISCEDO), fill=ISCEDO))"
  },
  {
    "objectID": "chapters/A5-Self_Study_Tasks.html#task-10-t-test-practice-1",
    "href": "chapters/A5-Self_Study_Tasks.html#task-10-t-test-practice-1",
    "title": "Appendix Self Study Tasks",
    "section": "\n0.10 Task 10 T-test practice #1",
    "text": "0.10 Task 10 T-test practice #1\n\nUsing the PISA 2018 data set, determine if there are statistically significant differences between the science, reading and mathematics scores of the UK and the US.\n\nShow the code# Create data frames with the score results for UK and US\nUKscores&lt;-PISA_2018%&gt;%\n  select(CNT,PV1MATH,PV1READ, PV1SCIE)%&gt;%\n  filter(CNT==\"United Kingdom\")\nUSscores&lt;-PISA_2018%&gt;%\n  select(CNT,PV1MATH,PV1READ, PV1SCIE)%&gt;%\n  filter(CNT==\"United States\")\n# Perform the t-test with maths results\nt.test(UKscores$PV1MATH, USscores$PV1MATH)\n\n\n    Welch Two Sample t-test\n\ndata:  UKscores$PV1MATH and USscores$PV1MATH\nt = 15.487, df = 8307.7, p-value &lt; 2.2e-16\nalternative hypothesis: true difference in means is not equal to 0\n95 percent confidence interval:\n 20.61393 26.58858\nsample estimates:\nmean of x mean of y \n 496.7440  473.1427 \n\nShow the code# p-value is &lt; 2.2e-16 so signficant differences exist for maths\nt.test(UKscores$PV1READ, USscores$PV1READ)\n\n\n    Welch Two Sample t-test\n\ndata:  UKscores$PV1READ and USscores$PV1READ\nt = 0.19658, df = 7763.6, p-value = 0.8442\nalternative hypothesis: true difference in means is not equal to 0\n95 percent confidence interval:\n -3.117095  3.811951\nsample estimates:\nmean of x mean of y \n 500.4976  500.1502 \n\nShow the code# p-value = 0.8442 so no signficant differences exist for reading\nt.test(UKscores$PV1SCIE, USscores$PV1SCIE)\n\n\n    Welch Two Sample t-test\n\ndata:  UKscores$PV1SCIE and USscores$PV1SCIE\nt = -1.2472, df = 8182.1, p-value = 0.2124\nalternative hypothesis: true difference in means is not equal to 0\n95 percent confidence interval:\n -5.224369  1.161388\nsample estimates:\nmean of x mean of y \n 495.2457  497.2772 \n\nShow the code# p-value = 0.2124 so no signficant differences exist for reading"
  },
  {
    "objectID": "chapters/A5-Self_Study_Tasks.html#task-11-t-test-practice-2",
    "href": "chapters/A5-Self_Study_Tasks.html#task-11-t-test-practice-2",
    "title": "Appendix Self Study Tasks",
    "section": "\n0.11 Task 11 T-test practice #2",
    "text": "0.11 Task 11 T-test practice #2\n\nDivide the UK population into two groups, those that have internet access at home and those who do not. Are there statistically significant differences in the means of their reading, science and mathematics scores?\n\nShow the code# Create data frames with the score results for UK in two\n# groups, has internet and no internet, based on ST011Q06TA\nUKHasIntscores&lt;-PISA_2018%&gt;%\n  select(CNT,PV1MATH,PV1READ, PV1SCIE, ST011Q06TA)%&gt;%\n  filter(CNT==\"United Kingdom\" & ST011Q06TA==\"Yes\")\nUKNoIntscores&lt;-PISA_2018%&gt;%\n  select(CNT,PV1MATH,PV1READ, PV1SCIE, ST011Q06TA)%&gt;%\n  filter(CNT==\"United Kingdom\" & ST011Q06TA==\"No\")\n# Perform the t-test with maths results\nt.test(UKHasIntscores$PV1MATH, UKNoIntscores$PV1MATH)\n\n\n    Welch Two Sample t-test\n\ndata:  UKHasIntscores$PV1MATH and UKNoIntscores$PV1MATH\nt = 16.181, df = 138.69, p-value &lt; 2.2e-16\nalternative hypothesis: true difference in means is not equal to 0\n95 percent confidence interval:\n  95.90286 122.60262\nsample estimates:\nmean of x mean of y \n 498.8200  389.5673 \n\nShow the code# p-value is &lt; 2.2e-16 so no signficant differences for maths scores from\n# those with and without internet\nt.test(UKHasIntscores$PV1READ, UKNoIntscores$PV1READ)\n\n\n    Welch Two Sample t-test\n\ndata:  UKHasIntscores$PV1READ and UKNoIntscores$PV1READ\nt = 12.267, df = 138.04, p-value &lt; 2.2e-16\nalternative hypothesis: true difference in means is not equal to 0\n95 percent confidence interval:\n  82.6465 114.4084\nsample estimates:\nmean of x mean of y \n 503.4454  404.9180 \n\nShow the code# p-value is &lt; 2.2e-16 so no signficant differences for reading scores from\n# those with and without internet\nt.test(UKHasIntscores$PV1SCIE, UKNoIntscores$PV1SCIE)\n\n\n    Welch Two Sample t-test\n\ndata:  UKHasIntscores$PV1SCIE and UKNoIntscores$PV1SCIE\nt = 14.356, df = 138.46, p-value &lt; 2.2e-16\nalternative hypothesis: true difference in means is not equal to 0\n95 percent confidence interval:\n  90.94524 119.99736\nsample estimates:\nmean of x mean of y \n 497.7262  392.2549 \n\nShow the code# p-value is &lt; 2.2e-16 so no signficant differences for science scores from\n# those with and without internet"
  },
  {
    "objectID": "chapters/A5-Self_Study_Tasks.html#task-12-t-test-practice-3",
    "href": "chapters/A5-Self_Study_Tasks.html#task-12-t-test-practice-3",
    "title": "Appendix Self Study Tasks",
    "section": "\n0.12 Task 12 T-test practice #3",
    "text": "0.12 Task 12 T-test practice #3\n\nUsing the PISA 2018 data set, are the mean mathematics scores of US boys and girls different to a statistically significant degree?\n\nShow the code# Create a dataframe of US boys math scores\nUSboys&lt;-PISA_2018 %&gt;%\n  select(CNT, PV1MATH, ST004D01T)%&gt;%\n  filter(CNT==\"United States\")\n# Create a dataframe of US girls math scores\nUSgirls&lt;-PISA_2018 %&gt;%\n  select(CNT, PV1MATH, ST004D01T)%&gt;%\n  filter(CNT==\"United States\")\n# Perform the t-test, using $PVMATH to indicate which column of the dataframe to use\nt.test(USboys$PV1MATH, USgirls$PV1MATH)\n\n\n    Welch Two Sample t-test\n\ndata:  USboys$PV1MATH and USgirls$PV1MATH\nt = 0, df = 9674, p-value = 1\nalternative hypothesis: true difference in means is not equal to 0\n95 percent confidence interval:\n -3.654667  3.654667\nsample estimates:\nmean of x mean of y \n 473.1427  473.1427 \n\nShow the code# The p-value is 1 which is over 0.05 suggesting we accept the null hypothesis, there are no  statistically signficant difference in US girls and boys math scores"
  },
  {
    "objectID": "chapters/A5-Self_Study_Tasks.html#task-13-t-test-practice-3",
    "href": "chapters/A5-Self_Study_Tasks.html#task-13-t-test-practice-3",
    "title": "Appendix Self Study Tasks",
    "section": "\n0.13 Task 13 T-test practice #3",
    "text": "0.13 Task 13 T-test practice #3\n\nAre the mean science scores of all students in the US and the UK different to a statistically significant degree?\n\nShow the code# Create a dataframe of US science scores\nUSSci&lt;-PISA_2018 %&gt;%\n  select(CNT, PV1SCIE)%&gt;%\n  filter(CNT==\"United States\")\n# Create a dataframe of UK science scores\nUKSci&lt;-PISA_2018 %&gt;%\n  select(CNT, PV1SCIE)%&gt;%\n  filter(CNT==\"United Kingdom\")\n# Perfom the t-test, using $PV1SCIE to indicate which column of the dataframe to use\nt.test(USSci$PV1SCIE, UKSci$PV1SCIE)\n\n\n    Welch Two Sample t-test\n\ndata:  USSci$PV1SCIE and UKSci$PV1SCIE\nt = 1.2472, df = 8182.1, p-value = 0.2124\nalternative hypothesis: true difference in means is not equal to 0\n95 percent confidence interval:\n -1.161388  5.224369\nsample estimates:\nmean of x mean of y \n 497.2772  495.2457 \n\nShow the code# The p-value is 0.2124, over 0.05, so we accept the null hypothesis, there is no statistically significant difference between US and UK science scores"
  },
  {
    "objectID": "chapters/A5-Self_Study_Tasks.html#task-14-chi-square-practice-1",
    "href": "chapters/A5-Self_Study_Tasks.html#task-14-chi-square-practice-1",
    "title": "Appendix Self Study Tasks",
    "section": "\n0.14 Task 14 Chi-square practice #1",
    "text": "0.14 Task 14 Chi-square practice #1\n\nAre statiscally significant differences in the proportion of boys and girls and the number of books in the home for the whole dataset?\n\nShow the code# Create a dataframe of boys and number of books in the home\nMalebooksinhome&lt;-PISA_2018 %&gt;%\n  select(ST004D01T, ST013Q01TA)%&gt;%\n  filter(ST004D01T==\"Male\")\n# Sum these up and convert to a data frame for chisq.test\nMalebooksinhome&lt;-as.data.frame(table(Malebooksinhome$ST013Q01TA))\n# Repeat for girls\nFemalebooksinhome&lt;-PISA_2018 %&gt;%\n  select(ST004D01T, ST013Q01TA)%&gt;%\n  filter(ST004D01T==\"Female\")\n\nFemalebooksinhome&lt;-as.data.frame(table(Femalebooksinhome$ST013Q01TA))\n# Perform the chisq.test\nchisq.test(Malebooksinhome$Freq,Femalebooksinhome$Freq)\n\n\n    Pearson's Chi-squared test\n\ndata:  Malebooksinhome$Freq and Femalebooksinhome$Freq\nX-squared = 60, df = 36, p-value = 0.00727\n\nShow the code# The p-value is 0.00727, which is less than 0.05 so the null hypothesis, that are no signifcnat differneces between the number of boys in boys' and girls' homes is rejects. Girls and boys have different distributions of number of books."
  },
  {
    "objectID": "chapters/A5-Self_Study_Tasks.html#task-15-chi-square-practice-2",
    "href": "chapters/A5-Self_Study_Tasks.html#task-15-chi-square-practice-2",
    "title": "Appendix Self Study Tasks",
    "section": "\n0.15 Task 15 Chi-square practice #2",
    "text": "0.15 Task 15 Chi-square practice #2\n\nAre there statistically significant differences, in the whole data set, between boys and girls use of the internet at school to browse for homework (IC011Q03TA)?\n\nShow the code# Create a data frame of the girls responses to the question on internet use at school \ngirlsint&lt;-PISA_2018%&gt;%\n  select(IC011Q03TA, ST004D01T)%&gt;%\n  filter(ST004D01T==\"Female\")%&gt;%\n   select(IC011Q03TA)\n# Do the same for boys\nboysint&lt;-PISA_2018%&gt;%\n  select(IC011Q03TA, ST004D01T)%&gt;%\n  filter(ST004D01T==\"Male\")%&gt;%\n   select(IC011Q03TA)\n# Create frequency count tables of those data frames\n# Note the chisq.test function takes data frames as inputs\n# but the output of table is a table, so we convert the tables\n# back to data frames\ngirlsint&lt;-as.data.frame(table(girlsint))\nboysint&lt;-as.data.frame(table(boysint))\n# Run the chi.sq test using the freq column in the dataframe\nchisq.test(girlsint$Freq,boysint$Freq)\n\n\n    Pearson's Chi-squared test\n\ndata:  girlsint$Freq and boysint$Freq\nX-squared = 45, df = 25, p-value = 0.008362\n\nShow the code# The output p-value is 0.008362 which is less than 0.05. So reject the null hypothesis. There is a difference in usage."
  },
  {
    "objectID": "chapters/A5-Self_Study_Tasks.html#task-16-chi-square-practice-3",
    "href": "chapters/A5-Self_Study_Tasks.html#task-16-chi-square-practice-3",
    "title": "Appendix Self Study Tasks",
    "section": "\n0.16 Task 16 Chi-square practice #3",
    "text": "0.16 Task 16 Chi-square practice #3\n\nAre there statistically significant differences between the availability of laptops (IC009Q02TA) in school in the US and the UK?\n\nShow the code# IC009Q02TA - Available for use in school - a laptop\n# Filter the data to get laptop use in the UK, put that into a new dataframe UKchidata\nUKchidata&lt;- PISA_2018 %&gt;%\n  select(CNT, IC009Q02TA)%&gt;%\n  filter(CNT==\"United Kingdom\")%&gt;%\n  select(IC009Q02TA)%&gt;%\n  na.omit()\n# Filter the data to get laptop use in the US, put that into a new dataframe USchidata\nUSchidata&lt;- PISA_2018 %&gt;%\n  select(CNT, IC009Q02TA)%&gt;%\n  filter(CNT==\"United States\")%&gt;%\n  select(IC009Q02TA)%&gt;%\n  na.omit()\n# use table to count the entries and convert to a data frame\nUKchidata&lt;-as.data.frame(table(UKchidata))\nUSchidata&lt;-as.data.frame(table(USchidata))\n# Do the chi squared test\nchisq.test(UKchidata$Freq, USchidata$Freq)\n\n\n    Pearson's Chi-squared test\n\ndata:  UKchidata$Freq and USchidata$Freq\nX-squared = 21, df = 9, p-value = 0.01265\n\nShow the code# p-value is less than 0.05, so reject the null hypotheses - there are statistically significant differences in access to laptops in the UK and the US"
  },
  {
    "objectID": "chapters/A5-Self_Study_Tasks.html#task-18-anova-practice-1",
    "href": "chapters/A5-Self_Study_Tasks.html#task-18-anova-practice-1",
    "title": "Appendix Self Study Tasks",
    "section": "\n0.17 Task 18 Anova practice #1",
    "text": "0.17 Task 18 Anova practice #1\n\nAre there statistically significant differences in mathematics scores of France, Germany, Spain, the UK and Italy? Find between which pairs of countries statistically significant differences in mathematics scores exist.\n\nShow the code# Create a dataframe of the required countries\nEuroPISA &lt;- PISA_2018 %&gt;%\n  select(CNT, PV1MATH)%&gt;%\n  filter(CNT==\"Spain\"|CNT==\"France\"| CNT==\"United Kingdom\"| CNT==\"Italy\"|CNT==\"Germany\")\n# Perform the anova\nresaov&lt;-aov(data=EuroPISA, PV1MATH ~ CNT)\nsummary(resaov)\n\n               Df    Sum Sq Mean Sq F value Pr(&gt;F)    \nCNT             4   1082967  270742   33.71 &lt;2e-16 ***\nResiduals   73300 588650518    8031                   \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nShow the code# Yes, statistically significant differences exist between the countries Pr(&gt;F) &lt;2e-16 ***\n# Perform a Tukey HSD test\nTukeyHSD(resaov)\n\n  Tukey multiple comparisons of means\n    95% family-wise confidence level\n\nFit: aov(formula = PV1MATH ~ CNT, data = EuroPISA)\n\n$CNT\n                             diff        lwr        upr     p adj\nSpain-Germany          -11.317134 -14.870244  -7.764024 0.0000000\nFrance-Germany         -14.781715 -19.302215 -10.261215 0.0000000\nUnited Kingdom-Germany  -5.263839  -9.173636  -1.354043 0.0022356\nItaly-Germany           -7.047743 -11.051803  -3.043682 0.0000156\nFrance-Spain            -3.464581  -6.801539  -0.127623 0.0373012\nUnited Kingdom-Spain     6.053295   3.606486   8.500104 0.0000000\nItaly-Spain              4.269392   1.674616   6.864168 0.0000704\nUnited Kingdom-France    9.517876   5.803417  13.232334 0.0000000\nItaly-France             7.733973   3.920419  11.547526 0.0000003\nItaly-United Kingdom    -1.783903  -4.848993   1.281187 0.5053508\n\nShow the code# Significant differences p&lt;0.05 exist for all countries except Italy and the UK"
  },
  {
    "objectID": "chapters/A5-Self_Study_Tasks.html#task-19-anova-practice-2",
    "href": "chapters/A5-Self_Study_Tasks.html#task-19-anova-practice-2",
    "title": "Appendix Self Study Tasks",
    "section": "\n0.18 Task 19 Anova practice #2",
    "text": "0.18 Task 19 Anova practice #2\n\nFor the UK PISA 2018 data set, which variable out of WEALTH, ST004D01T, OCOD1 (Mother’s occupation), OCOD2 (Father’s occupation), ST011Q06TA (having a link to the internet), and highest level of parental education (HISCED) accounts for the most variation in science score? What percentage of variance is explained by each variable?\n! This is a big calculation so will take some time to compute!\n\nShow the codeUKPISA_2018 &lt;- PISA_2018 %&gt;%\n  filter(CNT==\"United Kingdom\")\n\nresaov&lt;-aov(data=UKPISA_2018, PV1SCIE ~ WEALTH + ST004D01T + OCOD1 + OCOD2 + ST011Q06TA + HISCED)\nsummary(resaov)\n\n               Df   Sum Sq Mean Sq F value   Pr(&gt;F)    \nWEALTH          1  1229855 1229855 161.257  &lt; 2e-16 ***\nST004D01T       1     4594    4594   0.602    0.438    \nOCOD1         355 10939709   30816   4.041  &lt; 2e-16 ***\nOCOD2         410  8336957   20334   2.666  &lt; 2e-16 ***\nST011Q06TA      1   771880  771880 101.208  &lt; 2e-16 ***\nHISCED          6   293494   48916   6.414 9.28e-07 ***\nResiduals   11526 87904861    7627                     \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n1517 observations deleted due to missingness\n\nShow the codeeta &lt;- etaSquared(resaov)\neta &lt;- 100*eta\neta &lt;- as.data.frame(eta)\neta\n\n                 eta.sq eta.sq.part\nWEALTH     0.0274095131 0.034125604\nST004D01T  0.0009201313 0.001145967\nOCOD1      5.7963046843 6.732968928\nOCOD2      6.9703867564 7.987839939\nST011Q06TA 0.6896365614 0.851595309\nHISCED     0.2680766101 0.332765721\n\nShow the code# Most variance explained by OCOD2 (father's occupation), OCOD1 (mother's occupation)  HISCED (highest level of parental education), ST011Q06TA (having an internet link), WEALTH, then ST004DO1T (gender)"
  },
  {
    "objectID": "chapters/QandA.html",
    "href": "chapters/QandA.html",
    "title": "Questions and Answers",
    "section": "",
    "text": "1 Questions about R\nWhy doesn’t my select/filter statement work?\nWhen you are loading packages, sometimes different packages have the same function names in them, and the functions themselves will do very different things. For example, there is a select function in the tidyverse, but also another select function in the package MASS that does something very different. If we load the tidyverse before loading MASS, then the MASS version of select is the one that will be used?!\n\nlibrary(tidyverse)\nlibrary(MASS)\n\ndiamonds %&gt;% select(carat, cut, color)\n\nTo get around this make sure that you load the tidyverse after MASS, in fact you should always load the tidyverse last.\n\nlibrary(MASS) \nlibrary(tidyverse)\n\ndiamonds %&gt;% select(carat, cut, color)\n\nError in select(., carat, cut, color): unused arguments (carat, cut, color)\n\n\nyou can also specify the package that select comes from (in this case from a package within the tidyverse called dplyr):\n\ndiamonds %&gt;% dplyr::select(carat, cut, color)\n\n# A tibble: 53,940 × 3\n   carat cut       color\n   &lt;dbl&gt; &lt;ord&gt;     &lt;ord&gt;\n 1  0.23 Ideal     E    \n 2  0.21 Premium   E    \n 3  0.23 Good      E    \n 4  0.29 Premium   I    \n 5  0.31 Good      J    \n 6  0.24 Very Good J    \n 7  0.24 Very Good I    \n 8  0.26 Very Good H    \n 9  0.22 Fair      E    \n10  0.23 Very Good H    \n# ℹ 53,930 more rows\n\n\nHow can I unload packages\nIf you are finding yourself with a conflict as mentioned above and want to unload packages, then you need to run the following code:\n\n# adapted from: @mmfrgmpds https://stackoverflow.com/questions/7505547/detach-all-packages-while-working-in-r\nwhile(!is.null(sessionInfo()$loadedOnly)){\n  lapply(names(sessionInfo()$loadedOnly), require, character.only = TRUE)\n  invisible(lapply(paste0('package:', names(sessionInfo()$otherPkgs)), detach, character.only=TRUE, unload=TRUE, force=TRUE))    \n}\n\nWhy am I getting the error ‘could not find function “%&gt;%”’\nThe pipe operator %&gt;% is loaded when you load the tidyverse package - make sure you have installed tidyverse and loaded it\n\ninstall.packages(\"tidyverse\")  # install\nlibrary(tidyverse)             # load\n\nI am getting the error: ‘“Error: Mapping should be created with aes() or aes_().”’ when using ggplot\nThis may be caused by having a bracket after the geom rather than before it\n\ndata&lt;-data.frame(x=5:1,\n                 y=10:6)\nggplot(data, aes(x, y) +           # Reproduce error message\n         geom_point())\n\n\ndata&lt;-data.frame(x=5:1,\n                 y=10:6)\nggplot(data, aes(x, y)) +           # Fixed error by moving bracket\n         geom_point()\n\nMy axis labels are too long\nIf you want to use long axis titles you may find they overrun the space available\n\ndata&lt;-data.frame(x=5:1,\n                 y=10:6)\nggplot(data, aes(x=x, y=y)) +           \n         geom_col()+\n  ylab(\"A very long description for the y-axis label that will overflow and not look very nice\")\n\nTo insert a line break in the axis label, add \\n to the text where you want line breaks.\n\ndata&lt;-data.frame(x=5:1,\n                 y=10:6)\nggplot(data, aes(x=x, y=y)) +           \n         geom_col()+\n  ylab(\"A very long description \\n for the y-axis label that will \\n overflow and not look very nice\")"
  }
]